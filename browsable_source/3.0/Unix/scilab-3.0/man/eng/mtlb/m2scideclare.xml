<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>m2scideclare</TITLE>
  <TYPE>M2SCI function</TYPE>
  <DATE>March 2004</DATE>

  <SHORT_DESCRIPTION name="m2scideclare">Giving tips to help M2SCI...</SHORT_DESCRIPTION>

  <DESCRIPTION>
  <P>
  The main difficulty for M2SCI (<VERB>mfile2sci</VERB>) is to find what variables are: dimensions, type...  
  </P>
  <P>
  To help this tool, just add comments beginning with <VERB>%m2scideclare</VERB> in the M-file to convert, 
  (<VERB>%m2sciassume</VERB> was used in previous Scilab versions and is now obsolete).
  </P>
  <P>
  The syntax of this command is:
  </P>
  <P>
  <VERB>%m2scideclare variable_name|dimensions|data_type|property</VERB>
  </P>
  <P>
  with :
  </P>
  
  <DESCRIPTION_INDENT>
  <DESCRIPTION_ITEM>
  <ITEMIZE>
    <ITEM>
      <SP>
      variable_name: name of the variable declared. It can be a Struct field (e.g. <VERB>x(1,2).name</VERB>)
      or describe the contents of a Cell using syntax <VERB>x(1,2).entries</VERB>.
      </SP>
    </ITEM>
    <ITEM>
      <SP>
      dimensions: dimensions of the variable declared separated by blanks, if a dimension is unknown,
      replace it by <VERB>?</VERB>. NOTE that String dimensions must be similar to Matlab ones
      e.g. <VERB>1 6</VERB> for character string 'string'.
      </SP>
    </ITEM>
    <ITEM>
      <SP>
      data_type: data type of the variable which can be:
      </SP>
      <TABLE>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>m2scideclare data type</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Scilab "equivalent" type</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Double</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>1</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Boolean</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>4</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Sparse</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>5</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Int</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>8</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Handle</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>9</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>String</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>10</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Struct</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Matlab struct (16)</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Cell</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Matlab cell (17)</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Void</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>No type (0)</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>?</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Unknown type</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
      </TABLE>
    </ITEM>
   <ITEM>
      <SP>
      property: property of the variable which can be:
      </SP>
      <TABLE>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>m2scideclare property</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Scilab "equivalent"</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Real</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Real data</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>Complex</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Complex data</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
	<TABLE_NEW_ROW>
	  <TABLE_NEW_COLUMN>?</TABLE_NEW_COLUMN>
	  <TABLE_NEW_COLUMN>Unknown property</TABLE_NEW_COLUMN>
	</TABLE_NEW_ROW>
      </TABLE>
      <SP>
      This field is ignored for following datatypes: <VERB>Cell</VERB>,
      <VERB>Struct</VERB>, <VERB>String</VERB> and <VERB>Boolean</VERB>.
      </SP>
    </ITEM>
  </ITEMIZE>
  </DESCRIPTION_ITEM>
  </DESCRIPTION_INDENT>
  <P>
  All data given by <VERB>m2scideclare</VERB> are compared with infered data,
  in case of conflict, infered data are kept and a warning message is displayed.
  If you are sure about your data, report a bug.
  </P>
  
  <P>Some examples are given below:</P>

  <DESCRIPTION_INDENT>
  <DESCRIPTION_ITEM>
  <ITEMIZE>
    <ITEM>
      <SP><VERB>%m2scideclare var1|2 3|Double|Real</VERB>
      : var1 is declared as a 2x3 Double matrix containing real data</SP>
    </ITEM>
    <ITEM>
      <SP><VERB>%m2scideclare var2|2 3 10|Double|Complex</VERB>
      : var2 is declared as a 2x3x10 Double hypermatrix containing complex data</SP>
    </ITEM>
    <ITEM>
      <SP><VERB>%m2scideclare var3(1,2).name|1 10|String|?</VERB>
      : var3 is declared as a Struct array containing a 1x10 character string
      in field 'name' of struct at index (1,2) </SP>
    </ITEM>
    <ITEM>
      <SP><VERB>%m2scideclare var4(1,5).entries|1 ?|Boolean|?</VERB>
      : var4 is declared as a Cell containing a row boolean vector at index (1,5)</SP>
    </ITEM>
    <ITEM>
      <SP><VERB>%m2scideclare var4(1,6).entries|? ?|Int|?</VERB>
      : var4 is declared as a Cell containing a row boolean vector at index (1,5) 
      and integer data at index (1,6)</SP>
    </ITEM>
  </ITEMIZE>
  </DESCRIPTION_ITEM>
  </DESCRIPTION_INDENT>

  </DESCRIPTION> 

  <AUTHORS>
    <AUTHORS_ITEM>V.C.</AUTHORS_ITEM>
  </AUTHORS>
</MAN>
