<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>besselj</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>September 1997</DATE>
  <SHORT_DESCRIPTION name="besselj">Bessel functions of the first kind (J sub alpha).</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM> y = besselj(alpha,x)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>x</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: real vector with non negative entries</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>alpha</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: real vector with non negative entries regularly spaced with increment
                equal to one <VERB>alpha=alpha0+(n1:n2)</VERB></SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P>
      <VERB>besselj(alpha,x)</VERB> computes Bessel functions of the
      first kind (J sub alpha), for real, non-negative order <VERB>alpha</VERB> 
      and argument <VERB>x</VERB></P>
    <P>    
    <VERB>alpha</VERB>  and <VERB>x</VERB> may be vectors.
    The output is <VERB>m</VERB>-by-<VERB>n</VERB> with <VERB>m = size(x,'*')</VERB>,
    <VERB>n = size(alpha,'*')</VERB> whose <VERB>(i,j)</VERB> entry is
    <VERB>besselj(alpha(j),x(i))</VERB>.
    </P>
    <P> J_alpha and Y_alpha (see <LINK>bessely</LINK>) Bessel functions are 2 independant 
        solutions of the Bessel 's differential equation :</P>
    <VERBATIM>
<![CDATA[
          2               2        2
         x  y" + x y' + (x  - alpha ) y = 0 ,  alpha >= 0
     ]]>
    </VERBATIM>
 
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
// example #1 : display some bessel functions
x = linspace(0,40,5000)';
y = besselj(0:4,x);
xbasc()
plot2d(x,y, style=2:6, leg="J0@J1@J2@J3@J4")
xtitle("Some bessel functions of the first kind")

// example #2 : use the fact that J_(1/2)(x) = sqrt(2/(x pi)) sin(x)
//              to compare the algorithm of besselj(0.5,x) with
//              a more direct formula 
x = linspace(0.1,40,5000)';
y1 = besselj(0.5, x);
y2 = sqrt(2 ./(%pi*x)).*sin(x);
er = abs((y1-y2)./y2);
ind = find(er > 0 & y2 ~= 0);
xbasc()
subplot(2,1,1)
   plot2d(x,y1,style=2)
   xtitle("besselj(0.5,x)")
subplot(2,1,2)
   plot2d(x(ind), er(ind), style=2, logflag="nl")
   xtitle("relative error between 2 formulae for besselj(0.5,x)") 
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>besseli</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>besselk</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>bessely</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
  <AUTHOR>W. J. Cody (code from Netlib (specfun))</AUTHOR>
</MAN>

