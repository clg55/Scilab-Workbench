<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>

  <TITLE>plot3d</TITLE>

  <TYPE>Scilab Function</TYPE>

  <DATE>April 1993</DATE>

  <SHORT_DESCRIPTION name="plot3d">3D plot of a surface</SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>plot3d(x,y,z,[theta,alpha,leg,flag,ebox])</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>plot3d(x,y,z,&lt;opt_args&gt;)</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM></CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>plot3d(xf,yf,zf,[theta,alpha,leg,flag,ebox])</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>plot3d(xf,yf,zf,&lt;opt_args&gt;)</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM></CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>plot3d(xf,yf,list(zf,colors),[theta,alpha,leg,flag,ebox])</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>plot3d(xf,yf,list(zf,colors),&lt;opt_args&gt;)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>x,y</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: row vectors of sizes n1 and n2 (x-axis and y-axis
          coordinates). These coordinates must be monotone.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>z</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: matrix of size (n1,n2). <VERB>z(i,j)</VERB> is the value of
          the surface at the point (x(i),y(j)).</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>xf,yf,zf</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: matrices of size (nf,n). They define the facets used to draw
          the surface. There are <VERB>n</VERB> facets. Each facet
          <VERB>i</VERB> is defined by a polygon with <VERB>nf</VERB> points.
          The x-axis, y-axis and z-axis coordinates of the points of the ith
          facet are given respectively by <VERB>xf(:,i)</VERB>,
          <VERB>yf(:,i)</VERB> and <VERB>zf(:,i)</VERB>.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>colors</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: a vector of size n giving the color of each facets or a matrix
          of size (nf,n) giving color near each facet boundary (facet color is
          interpolated ).</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>&lt;opt_args&gt;</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: This represents a sequence of statements <VERB>key1=value1,
          key2=value2</VERB>,... where <VERB>key1</VERB>,
          <VERB>key2,...</VERB> can be one of the following: theta, alpha
          ,leg,flag,ebox (see definition below).</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>theta, alpha</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: real values giving in degree the spherical coordinates of the
          observation point.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>leg</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: string defining the labels for each axis with @ as a field
          separator, for example "X@Y@Z".</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>flag</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: a real vector of size three.
          <VERB>flag=[mode,type,box]</VERB>.</SP>

          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>mode</PARAM_NAME>

              <PARAM_DESCRIPTION>
                <SP>: an integer (surface color).</SP>

                <PARAM_INDENT>
                  <PARAM_ITEM>
                    <PARAM_NAME>mode&gt;0</PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>: the surface is painted with color
                      <VERB>"mode"</VERB> ; the boundary of the facet is drawn
                      with current line style and color.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>mode=0: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>a mesh of the surface is drawn.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>mode&lt;0: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>the surface is painted with color
                      <VERB>"-mode"</VERB> ; the boundary of the facet is not
                      drawn.</SP>

                      <P>Note that the surface color treatement can be done
                      using <VERB>color_mode</VERB> and
                      <VERB>color_flag</VERB> options through the surface
                      entity properties (see
                      <LINK>surface_properties</LINK>).</P>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>
                </PARAM_INDENT>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>

            <PARAM_ITEM>
              <PARAM_NAME>type</PARAM_NAME>

              <PARAM_DESCRIPTION>
                <SP>: an integer (scaling).</SP>

                <PARAM_INDENT>
                  <PARAM_ITEM>
                    <PARAM_NAME>type=0: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>the plot is made using the current 3D scaling (set
                      by a previous call to <VERB>param3d</VERB>,
                      <VERB>plot3d</VERB>, <VERB>contour</VERB> or
                      <VERB>plot3d1</VERB>).</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>type=1: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>rescales automatically 3d boxes with extreme aspect
                      ratios, the boundaries are specified by the value of the
                      optional argument <VERB>ebox</VERB>.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>type=2: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>rescales automatically 3d boxes with extreme aspect
                      ratios, the boundaries are computed using the given
                      data.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>type=3: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>3d isometric with box bounds given by optional
                      <VERB>ebox</VERB>, similarily to
                      <VERB>type=1</VERB>.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>type=4: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>3d isometric bounds derived from the data, to
                      similarily<VERB>type=2</VERB>.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>type=5: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>3d expanded isometric bounds with box bounds given
                      by optional <VERB>ebox</VERB>, similarily to
                      <VERB>type=1</VERB>.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>type=6: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>3d expanded isometric bounds derived from the data,
                      similarily to <VERB>type=2</VERB>.</SP>

                      <P>Note that axes boundaries can be customized through
                      the axes entity properties (see
                      <LINK>axes_properties</LINK>).</P>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>
                </PARAM_INDENT>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>

            <PARAM_ITEM>
              <PARAM_NAME>box</PARAM_NAME>

              <PARAM_DESCRIPTION>
                <SP>: an integer (frame around the plot).</SP>

                <PARAM_INDENT>
                  <PARAM_ITEM>
                    <PARAM_NAME>box=0: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>nothing is drawn around the plot.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>box=1: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>unimplemented (like box=0).</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>box=2: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>only the axes behind the surface are drawn.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>box=3: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>a box surrounding the surface is drawn and captions
                      are added.</SP>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>

                  <PARAM_ITEM>
                    <PARAM_NAME>box=4: </PARAM_NAME>

                    <PARAM_DESCRIPTION>
                      <SP>a box surrounding the surface is drawn, captions and
                      axes are added.</SP>

                      <P>Note that axes aspect can also be customized through
                      the axes entity properties (see
                      <LINK>axes_properties</LINK>).</P>
                    </PARAM_DESCRIPTION>
                  </PARAM_ITEM>
                </PARAM_INDENT>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>ebox</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: It specifies the boundaries of the plot as the vector
          <VERB>[xmin,xmax,ymin,ymax,zmin,zmax]</VERB>. This argument is used
          together with <VERB>type</VERB> in <VERB>flag</VERB> : if it is set
          to <VERB>1</VERB>, <VERB>3</VERB> or <VERB>5</VERB> (see above to
          see the corresponding behaviour). If <VERB>flag</VERB> is missing,
          <VERB>ebox</VERB> is not taken into acoount.</SP>

          <P> Note that, when specified, the <VERB>ebox</VERB> argument acts
          on the <VERB>data_bounds</VERB> field that can also be reset through
          the axes entity properties (see <LINK>axes_properties</LINK>).</P>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>

  <DESCRIPTION>
    <P><VERB>plot3d(x,y,z,[theta,alpha,leg,flag,ebox])</VERB> draws the
    parametric surface <VERB>z=f(x,y)</VERB>.</P>

    <P><VERB>plot3d(xf,yf,zf,[theta,alpha,leg ,flag,ebox])</VERB> draws a
    surface defined by a set of facets. You can draw multiple plots by
    replacing <VERB>xf</VERB>, <VERB>yf</VERB> and <VERB>zf</VERB> by multiple
    matrices assembled by rows as <VERB>[xf1 xf2 ...]</VERB>, <VERB>[yf1 yf2
    ...]</VERB> and <VERB>[zf1 zf2 ...]</VERB>. Note that data can also be set
    or get through the surface entity properties (see
    <LINK>surface_properties</LINK>).</P>

    <P></P>

    <P>You can give a specific color for each facet by using
    <VERB>list(zf,colors)</VERB> instead of <VERB>zf</VERB>, where
    <VERB>colors</VERB> is a vector of size <VERB>n</VERB>. If
    <VERB>colors(i)</VERB> is positive it gives the color of facet
    <VERB>i</VERB> and the boundary of the facet is drawn with current line
    style and color. If <VERB>colors(i)</VERB> is negative, color id
    <VERB>-colors(i)</VERB> is used and the boundary of the facet is not
    drawn.</P>

    <P></P>

    <P>It is also possible to get interpolated color for facets. For that the
    color argument must be a matrix of size nfxn giving the color near each
    boundary of each facets. In this case positive values for colors mean that
    the boundary are not drawn. Note that colors can also be set through the
    surface entity properties (via <VERB>tlist</VERB> affectations) and edited
    using <VERB>color_flag</VERB> option (see
    <LINK>surface_properties</LINK>).</P>

    <P></P>

    <P>The optional arguments <VERB>theta, alpha, leg ,flag, ebox</VERB>, can
    be passed by a sequence of statements <VERB>key1=value1,
    key2=value2</VERB>, ... In this case, the order has no special meaning.
    Note that all these optional arguments except <VERB>flag</VERB> can be
    customized through the axes entity properties (see
    <LINK>axes_properties</LINK>). As described before, the <VERB>flag</VERB>
    option deals with surface entity properties for <VERB>mode</VERB> (see
    <LINK>surface_properties</LINK>) and axes properties for <VERB>type</VERB>
    and <VERB>box</VERB> (see <LINK>axes_properties</LINK>).</P>

    <P></P>

    <P>You can use the function <VERB>genfac3d</VERB> to compute four sided
    facets from the surface <VERB>z=f(x,y)</VERB>. <VERB>eval3dp</VERB> can
    also be used.</P>

    <P></P>

    <P>Enter the command <VERB>plot3d()</VERB> to see a demo.</P>
  </DESCRIPTION>

  <SECTION label="More information">
    <P>To get more information on the plot3d old syntax , use the
    <LINK>plot3d_old_version</LINK> help document.</P>
  </SECTION>

  <EXAMPLE><![CDATA[// simple plot using z=f(x,y) t=[0:0.3:2*%pi]'; z=sin(t)*cos(t'); plot3d(t,t,z) // same plot using facets computed by genfac3d [xx,yy,zz]=genfac3d(t,t,z); clf() plot3d(xx,yy,zz) // multiple plots clf() plot3d([xx xx],[yy yy],[zz 4+zz]) // multiple plots using colors clf() plot3d([xx xx],[yy yy],list([zz zz+4],[4*ones(1,400) 5*ones(1,400)])) // simple plot with viewpoint and captions clf() plot3d(1:10,1:20,10*rand(10,20),alpha=35,theta=45,flag=[2,2,3]) // plot of a sphere using facets computed by eval3dp deff("[x,y,z]=sph(alp,tet)",["x=r*cos(alp).*cos(tet)+orig(1)*ones(tet)";.. "y=r*cos(alp).*sin(tet)+orig(2)*ones(tet)";.. "z=r*sin(alp)+orig(3)*ones(tet)"]); r=1; orig=[0 0 0]; [xx,yy,zz]=eval3dp(sph,linspace(-%pi/2,%pi/2,40),linspace(0,%pi*2,20)); clf();plot3d(xx,yy,zz) clf(); f=gcf(); f.color_map = hotcolormap(128); r=0.3;orig=[1.5 0 0]; [xx1,yy1,zz1]=eval3dp(sph,linspace(-%pi/2,%pi/2,40),linspace(0,%pi*2,20)); cc=(xx+zz+2)*32;cc1=(xx1-orig(1)+zz1/r+2)*32; clf();plot3d1([xx xx1],[yy yy1],list([zz,zz1],[cc cc1]),theta=70,alpha=80,flag=[5,6,3]) //Available operations using only New Graphics... delete(gcf()); t=[0:0.3:2*%pi]'; z=sin(t)*cos(t'); [xx,yy,zz]=genfac3d(t,t,z); plot3d([xx xx],[yy yy],list([zz zz+4],[4*ones(1,400) 5*ones(1,400)])) e=gce(); f=e.data; TL = tlist(["3d" "x" "y" "z" "color"],f.x,f.y,f.z,6*rand(f.z)); // random color matrix e.data = TL; TL2 = tlist(["3d" "x" "y" "z" "color"],f.x,f.y,f.z,4*rand(1,800)); // random color vector e.data = TL2; TL3 = tlist(["3d" "x" "y" "z" "color"],f.x,f.y,f.z,[20*ones(1,400) 6*ones(1,400)]); e.data = TL3; TL4 = tlist(["3d" "x" "y" "z"],f.x,f.y,f.z); // no color e.data = TL4; e.color_flag=1 // color index proportional to altitude (z coord.) e.color_flag=2; // back to default mode e.color_flag= 3; // interpolated shading mode (based on blue default color) clf() plot3d([xx xx],[yy yy],list([zz zz+4],[4*ones(1,400) 5*ones(1,400)])) h=gce(); //get handle on current entity (here the surface) a=gca(); //get current axes a.rotation_angles=[40,70]; a.grid=[1 1 1]; //make grids a.data_bounds=[-6,6;6,-1;0,5]; a.axes_visible="off"; //axes are hidden a.axes_bounds=[.2 0 1 1]; h.color_flag=1; //color according to z h.color_mode=-2; //remove the facets boundary by setting color_mode to white color h.color_flag=2; //color according to given colors h.color_mode = -1; // put the facets boundary back by setting color_mode to black color f=gcf();//get the handle of the parent figure f.color_map=hotcolormap(512); c=[1:400,1:400]; TL.color = [c;c+1;c+2;c+3]; h.data = TL; h.color_flag=3; // interpolated shading mode]]></EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>eval3dp</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>genfac3d</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>geom3d</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>param3d</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>plot3d1</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>clf</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>gca</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>gcf</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>xdel</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>delete</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>

  <AUTHOR>J.Ph.C.</AUTHOR>
</MAN>