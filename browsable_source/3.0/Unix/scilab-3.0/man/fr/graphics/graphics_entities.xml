<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>graphics_entities</TITLE>
  <TYPE>Scilab Data type</TYPE>
  <DATE> 2002</DATE>
  <SHORT_DESCRIPTION name="graphics_entities"> description of the
  graphics entities data structures</SHORT_DESCRIPTION>
  <DESCRIPTION>
    <P>
  Scilab graphics is based on two differents modes. In the <VERB>&quot;old&quot;</VERB> 
  mode, the graphics functions are stored to enable redisplay, zoom and
  rotations. In the <VERB>&quot;new&quot;</VERB> mode, each graphics 
  window and the drawing it contains are represented by hierchical entities. 
  The hierachy top level is the Figure. Each Figure defines at least one
  children of type Axes. Each Axes entity contains a set of leaf
  entities which are the basic graphics objects like Polylines,
  Rectangles, Arcs, Segs,... It can also contain an Agregation type 
  which are recursive sets of entities. The main interest of the new
  graphic mode is to make property change easier. This new graphics'mode
  provides a set of high-level graphing routines 
  (see <LINK>set</LINK>,  <LINK>get</LINK>) used to control objects' properties
  such us data, coordinates and scaling, color and appearences without requiring 
  to replay the initial graphics commands. 
  </P>
    <P>
  Graphics entities are associated to Scilab variables of type
  <VERB>handle</VERB>. The handle is a unique identifier which is associated
  to each instance of a created graphical entity. Using this handle, 
  it will be possible to reach entities' properties through &quot;set&quot; and &quot;get&quot; routines.
  The handles are also used to manipulate graphics objects, to move them, 
  to make copies or delete them.
  </P>
 <P></P>
    <P>  
  To set the current graphics window mode we can use these following instructions: 
  <VERB>set(&quot;figure_style&quot;,&quot;new&quot;) </VERB> to have a graphics window under the &quot;new&quot; mode or  
  <VERB>set(&quot;figure_style&quot;,&quot;old &quot;)</VERB> for the &quot;old&quot; mode. 
  </P>
    <P>
  The instructions
  <VERB>set(&quot;old_style&quot;,&quot;off&quot;)</VERB> and
  <VERB>set(&quot;old_style&quot;,&quot;on&quot;)</VERB> are used to set the
  default mode to be used when a new graphics window is created. 
  </P>
    <P>
  The new graphics mode is a beta version. 
  </P>
  <P></P>
    <DESCRIPTION_INDENT>
      <DESCRIPTION_ITEM label="Figure: ">

        <SP>The figure entity is the top level of the graphics entities
            hierarchy. This entity defines the parameters for the figure itself
            as well as the parameters' default values for the children
            creation. The figure children are the Axes entities.</SP>


        <P>The handle on the current figure (The figure used where the drawing are
	   sent) may be got using  <VERB>get(&quot;current_figure&quot;)</VERB>
	   and it may be set  using
	   <VERB>set(&quot;current_figure&quot;,h)</VERB>, where <VERB>h</VERB>
	   is either a handle on a figure or a  <VERB>figure_id</VERB> in this
	  last case if the figure does not already exists , it is created</P>
  
        <P> See <LINK>figure_properties</LINK> for details.</P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Axes">
        <P>
  The Axes entity is the second level of the graphics entities
  hierarchy. This entity defines the parameters for the change of
  coordinates and the axes drawing
  as well as the  parameters' default values for the children creation. 
 
  See <LINK>axes_properties</LINK> for details.

  The handle on the current Axes may be got using
  <VERB>get(&quot;current_axes&quot;)</VERB>.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Agregation">
        <SP>The agregation entity is just a vector of children and with a single
 property (visibility property). It is used to glue a set of entities together.</SP>
        <P>
   See <LINK>glue</LINK> and <LINK>agregation_properties</LINK> functions.</P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Axis">
        <SP>The Axis entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for axis scaling and appearance.</SP>
        <P>
  See <LINK>axis_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Polyline">
        <SP>The polyline entity is a leaf of the graphics entities
  hierarchy. It defines polylines and polylines extensions drawing
  properties.</SP>
        <P>
  See <LINK>polyline_properties</LINK> for details.
 </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Arc">
        <SP>The Arc entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for ellipses and part
  of ellipses.</SP>
        <P>
  See <LINK>arc_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Rectangle">
        <SP>The Rectangle entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for rectangles and
  filled rectangles.</SP>
        <P>
  See <LINK>rectangle_properties</LINK> for details.
 </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Surface">
        <SP>The Surface entity is a leaf of the graphics entities
  hierarchy. It has sub types Fac3d  Plot3d . This entity is still under developpement
  and will problably evolve a lot.</SP>
        <P>
  See <LINK>surface_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Param3d">
        <SP>The Param3d entity is a leaf of the graphics entities
  hierarchy. It is a Surface sub type . This entity is still under developpement
  and will problably evolve a lot.</SP>
        <P> 
  See <LINK>param3d_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Fec">
        <SP>The Fec entity is a leaf of the graphics entities hierarchy. It
  represents 2D finite elements plots .</SP>
        <P>  
  See <LINK>fec_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Grayplot">
        <SP>The Grayplot entity is a leaf of the graphics entities hierarchy. It
  represents 2D plots of surface using colors and images.</SP>
        <P> 
  See <LINK>grayplot_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Segs">
        <SP>The Segs entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for a set of colored
  segments or colored arrows.</SP>
        <P>  
  See <LINK>segs_properties</LINK> for details.
 </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Champ">
        <SP>The Champ entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for a 2D vector field.</SP>
        <P>  
  See <LINK>champ_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Text">
        <SP>The Text entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for string drawing.</SP>
        <P>  
  See <LINK>text_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Title">
        <SP>The Title entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for a title drawn 
  on a graphics window.</SP>
        <P>  
  See <LINK>title_properties</LINK> for details.
  </P>
      </DESCRIPTION_ITEM>
      <DESCRIPTION_ITEM label="Legend">
        <SP>The Legend entity is a leaf of the graphics entities
  hierarchy. This entity defines the parameters for legends drawn
  below <VERB>plot2dx</VERB> graphs. This entity requires further
  developments.</SP>
        <P>  
  See <LINK>legend_properties</LINK> for details.</P>
      </DESCRIPTION_ITEM>
    </DESCRIPTION_INDENT>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[

  //Play this example line per line

  set("figure_style","new") //create a figure in entity mode

  //get the handle on the Figure entity and display its properties
  f=get("current_figure") 
  a=f.children // the handle on the Axes child
  x=(1:10)';  plot2d(x,[x.^2 x.^1.5])
  e=a.children //Agregation of 2 polylines

  p1=e.children(1) //the last drawn polyline properties
  p1.foreground=5;  // change the polyline color
  e.children.thickness=5; // change the thickness of the two polylines

  delete(e.children(2))

  move(e.children,[0,30]) //translate the polyline

  a.axes_bounds=[0 0 0.5 0.5]; 

  subplot(222) //create a new Axes entity
  plot(1:10);
  a1=f.children(1); //get its handle
  copy(e.children,a1); //copy the polyline of the first plot in the new Axes
  a1.data_bounds=[1 0;10 100]; //change the Axes bounds  

  set("current_figure",10) //create a new figure with figure_id=10
  plot3d() //the drawing are sent to figure 10
  set("current_figure",f) //make the previous figure the current one
  plot2d(x,x^3) the drawing are send to the initial figure

 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>set</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>get</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>move</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>draw</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>delete</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
