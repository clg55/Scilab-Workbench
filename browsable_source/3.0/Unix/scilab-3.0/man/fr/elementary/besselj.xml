<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>fr</LANGUAGE>
  <TITLE>besselj  </TITLE>
  <TYPE>Scilab Function  </TYPE>
  <DATE>September 1997  </DATE>
  <SHORT_DESCRIPTION name="besselj">  Fonction J de Bessel modifiée de première espèce.  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM> y = besselj(alpha,x)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>x  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : vecteur réel à composantes non-négatives
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>alpha  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : vecteur réel à composantes non-négatives régulièrement espacées d&apos;incrément égal à un <VERB>alpha=alpha0+(n1:n2)</VERB>
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
  </P>
  <P>
    <VERB>besselj(alpha,x)</VERB> Calcule la fonction J de Bessel modifiée de
      première espèce d&apos;indice réel et non négatif<VERB>alpha</VERB> et
      d&apos;argument <VERB>x</VERB>.  <VERB>alpha</VERB>  et <VERB>x</VERB>
      peuvent être des vecteurs. 
    Cette fonction renvoie une matrice de taille
      <VERB>m</VERB>-par-<VERB>n</VERB> avec <VERB>m =
	size(x,&apos;*&apos;)</VERB>, 
    <VERB>n = size(alpha,&apos;*&apos;)</VERB> dont la composante <VERB>(i,j)</VERB> vaut
    <VERB>besselj(alpha(j),x(i))</VERB>.  </P>

     <P>Les fonctions de Bessel J_alpha et Y_alpha (voir <LINK>bessely</LINK>)
      sont 2 solutions indépendantes de l'équation différentielle de Bessel  :</P>
    <VERBATIM>
<![CDATA[
          2               2        2
         x  y" + x y' + (x  - alpha ) y = 0 ,  alpha >= 0
     ]]>
    </VERBATIM>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
// exemple #1 : Visualisation de quelques fonctions de Bessel
x = linspace(0,40,5000)';
y = besselj(0:4,x);
xbasc()
plot2d(x,y, style=2:6, leg="J0@J1@J2@J3@J4")
xtitle("Quelques fonctions de Bessel du premier type")

// exemple #2 : utilise la relation J_(1/2)(x) = sqrt(2/(x pi)) sin(x)
//              pour comparer besselj(0.5,x) avec une formule plus directe
x = linspace(0.1,40,5000)';
y1 = besselj(0.5, x);
y2 = sqrt(2 ./(%pi*x)).*sin(x);
er = abs((y1-y2)./y2);
ind = find(er > 0 & y2 ~= 0);
xbasc()
subplot(2,1,1)
   plot2d(x,y1,style=2)
   xtitle("besselj(0.5,x)")
subplot(2,1,2)
   plot2d(x(ind), er(ind), style=2, logflag="nl")
   xtitle("Erreur relative entre la formule 2 et besselj(0.5,x)") 
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>besseli</LINK> </SEE_ALSO_ITEM> 
    <SEE_ALSO_ITEM> <LINK>besselk</LINK> </SEE_ALSO_ITEM> 
    <SEE_ALSO_ITEM> <LINK>bessely</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
<AUTHOR>W. J. Cody (code from Netlib (specfun))</AUTHOR>
</MAN>
