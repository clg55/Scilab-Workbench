<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>fr</LANGUAGE>
  <TITLE>shortest_path  </TITLE>
  <TYPE>Scilab function  </TYPE>
  <DATE>September 1995  </DATE>
  <SHORT_DESCRIPTION name="shortest_path"> chemin le plus court  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[p,lp] = shortest_path(i,j,g,[typ])  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>i  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : entier, numéro du sommet de départ
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>j  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : entier, numéro du sommet d&apos;arrivée
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>g  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : graphe (liste)
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>typ  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : chaîne de caractères, type du chemin le plus court
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>p  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : vecteur ligne des numéros des arcs du chemin s&apos;il existe
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>lp  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : longueur du chemin
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    <VERB>shortest_path</VERB> renvoie le chemin le plus court <VERB>p</VERB> du sommet
    <VERB>i</VERB> au sommet <VERB>j</VERB> s&apos;il existe, et le vecteur vide <VERB>[]</VERB>
    sinon.
    L&apos;argument optionnel <VERB>typ</VERB> est une chaîne définissant le type du
    chemin, &apos;arc&apos; pour le chemin le plus court par rapport au nombre d&apos;arcs
    et &apos;length&apos;  pour le chemin le plus court par rapport à la longueur des arêtes 
    <VERB>edge_length</VERB>.
  </P>
  <P>
    Pour le chemin le plus court par rapport à la longueur des arêtes, les
    longueurs sont données par les éléments <VERB>edge_length</VERB> du 
    graphe. Si cette valeur n&apos;est pas donnée (vecteur vide <VERB>[]</VERB>), elle est supposée nulle sur chaque arête.
    Les longueurs peuvent être positives ou négatives (ou nulles).
  </P>
  <P>
    Quand le chemin le plus court existe, <VERB>lp</VERB> est la longueur du chemin.
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
ta=[1 1 2 2 2 3 4 4 5 6 6 6 7 7 7 8 9 10 12 12 13 13 13 14 15 14 9 11 10];
he=[2 6 3 4 5 1 3 5 1 7 10 11 5 8 9 5 8 11 10 11 9 11 15 13 14 4 6 9 1];
g=make_graph('foo',1,15,ta,he);
g('node_x')=[194 191 106 194 296 305 305 418 422 432 552 550 549 416 548]; 
g('node_y')=[56 181 276 278 276 103 174 281 177 86 175 90 290 397 399];
show_graph(g);
g1=g;ma=prod(size(g1('head')));
rand('uniform');
g1('edge_length')=int(20*rand(1,ma));
[p,lp]=shortest_path(13,1,g1,'length');
p
x_message(['Voici le chemin le plus court';
           'Choisissez ""Display arc names"" dans le menu Graph pour voir les noms des arcs']);
g1('edge_name')=string(g1('edge_length'));
edgecolor=ones(1:ma);edgecolor(p)=11*ones(p);
g1('edge_color')=edgecolor;
edgefontsize=12*ones(1,ma);edgefontsize(p)=18*ones(p);
g1('edge_font_size')=edgefontsize;
show_graph(g1);
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>find_path</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>nodes_2_path</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
