<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="gen_net">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>gen_net</refname>
    <refpurpose> interactive or random generation of a network</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>g = gen_net(name,directed,v)
g = gen_net()</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Parameters</title>
    <variablelist>
      <varlistentry>
        <term>name</term>
        <listitem>
          <para>string, the name of the graph</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>directed</term>
        <listitem>
          <para> integer, 0 (undirected graph) or 1 (directed graph)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>v</term>
        <listitem>
          <para>row vector with 12 values for defining the network</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>g</term>
        <listitem>
          <para> a <link linkend="graph_data_structure">graph_data_structure</link>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>gen_net</literal> generates a network <literal>g</literal>.
    The arguments are the name of the graph, a flag equal to 0
    (undirected graph) or  to 1 (directed graph) and a vector describing
    the network (see below).</para>
    <para>
    If no argument are given, a dialog box for the definition
    of all the arguments is opened.</para>
    <para><literal>v</literal> must be a row vector with 12 values.
    The meaning of the values are:</para>
    <para>
    Seed for random: used for initialization of random generation</para>
    <para>
    Number of nodes</para>
    <para>
    Number of sources</para>
    <para>
    Number of sinks</para>
    <para>
    Minimum cost</para>
    <para>
    Maximum cost</para>
    <para>
    Input supply</para>
    <para>
    Output supply</para>
    <para>
    Minimum capacity</para>
    <para>
    Maximum capacity</para>
    <para>
    Percentage of edges with costs: between 0 and 100</para>
    <para>
    Percentage of edges with capacities: between 0 and 100</para>
    <para>
    The cost of edges without cost are put to minimum cost.
    The maximum capacity of edges without capacity are put to maximum upply</para>
    <para>
    The result is a network <literal>g</literal> built on a planar connected graph, by using a
    triangulation method. Moreover, computations are made in order to have
    a coherent network. Values of costs and maximum capacities are
    put on the edges. Minimum capacities are reduced to 0.</para>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[

v=[1,10,2,1,0,10,100,100,0,100,50,50];
g=gen_net('foo',1,v);
show_graph(g)
// generating using dialogs
g=gen_net();
show_graph(g)
 
  ]]></programlisting>
  </refsection>
  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="mesh2d">mesh2d</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
