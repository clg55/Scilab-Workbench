%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 242 4500 1450 
] dogrey 
0 Setcolor
 0 [1 3] [1500.000000 30.000000 2.000000] [750 1692] drawaxis
/Times-Roman findfont 80 scf mul scalefont setfont
(-1) 704 1854 0  0.00 [704 1784 92 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 590 1974 0  0.00 [590 1884 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
(0) 2227 1854 0  0.00 [2227 1784 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 2113 1974 0  0.00 [2113 1884 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
(1) 3727 1854 0  0.00 [3727 1784 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 3613 1974 0  0.00 [3613 1884 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
(2) 5227 1854 0  0.00 [5227 1784 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 5113 1974 0  0.00 [5113 1884 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
 -90 [2 10] [72.500000 -14.500000 2.000000] [750 1692] drawaxis
(0) 658 1722 0  0.00 [658 1632 57 120] Show
(2) 658 1577 0  0.00 [658 1487 57 120] Show
(4) 658 1432 0  0.00 [658 1342 57 120] Show
(6) 658 1287 0  0.00 [658 1197 57 120] Show
(8) 658 1142 0  0.00 [658 1052 57 120] Show
(10) 601 997 0  0.00 [601 907 114 120] Show
(12) 601 852 0  0.00 [601 762 114 120] Show
(14) 601 707 0  0.00 [601 617 114 120] Show
(16) 601 562 0  0.00 [601 472 114 120] Show
(18) 601 417 0  0.00 [601 327 114 120] Show
(20) 601 272 0  0.00 [601 182 114 120] Show
0 Setcolor
750 242 4500 1450 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2e put
 (drawpolymark) 2 [ 0]
[750 1689 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
3 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1202 242 1202 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1466 242 1466 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1653 242 1653 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1798 242 1798 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1917 242 1917 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2018 242 2018 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2105 242 2105 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2181 242 2181 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 242 2250 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 242 2250 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2702 242 2702 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2966 242 2966 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3153 242 3153 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3298 242 3298 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3417 242 3417 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3518 242 3518 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3605 242 3605 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3681 242 3681 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 242 3750 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 242 3750 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4202 242 4202 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4466 242 4466 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4653 242 4653 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4798 242 4798 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4917 242 4917 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5018 242 5018 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5105 242 5105 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5181 242 5181 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 387 5250 387 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 532 5250 532 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 677 5250 677 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 822 5250 822 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 967 5250 967 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 1112 5250 1112 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 1257 5250 1257 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 1402 5250 1402 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 1547 5250 1547 
] dogrey 
3 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
0 Setcolor
750 242 4500 1450 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 268 [ 0]
[750 245 927 247 1066 250 1181 253 1231 255 1278 257 1322 260 1363 262 1401 264 1438 267 
1472 269 1505 272 1536 275 1566 278 1594 281 1621 284 1647 287 1673 291 1697 294 1720 298 
1743 302 1765 305 1786 309 1806 313 1826 317 1845 321 1864 325 1882 329 1899 333 1917 338 
1933 342 1950 346 1966 351 1981 355 1996 360 2011 364 2026 369 2040 373 2067 382 2094 392 
2119 401 2144 411 2167 420 2190 430 2212 439 2233 449 2253 459 2273 468 2293 478 2311 488 
2330 497 2347 507 2365 516 2398 535 2430 553 2460 572 2489 590 2516 607 2543 625 2568 642 
2593 659 2616 675 2639 691 2661 707 2682 722 2703 737 2723 752 2742 767 2761 781 2779 795 
2815 822 2848 847 2880 872 2910 896 2939 919 2966 940 2993 961 3018 982 3043 1001 3067 1020 
3089 1038 3111 1055 3133 1072 3153 1088 3173 1103 3193 1118 3212 1133 3230 1146 3265 1173 3299 1198 
3330 1221 3361 1243 3390 1263 3417 1282 3444 1300 3469 1317 3494 1333 3518 1348 3540 1362 3562 1376 
3584 1389 3625 1412 3663 1433 3699 1452 3733 1469 3766 1484 3797 1498 3826 1511 3855 1523 3882 1533 
3933 1552 3980 1567 4025 1581 4066 1592 4105 1602 4141 1610 4176 1618 4209 1624 4271 1635 4327 1643 
4378 1650 4426 1655 4471 1660 4512 1663 4588 1669 4657 1673 4718 1676 4775 1679 4875 1682 4961 1685 
5038 1686 5106 1687 5224 1689 5250 1689 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(db ) 1039 230 0  0.00 [1039 140 172 120] Show
( Hz ) 5510 1619 0  0.00 [5510 1529 229 120] Show
(Magnitude  ) 2684 169 0  0.00 [2684 79 631 120] Show
0 Setcolor
 (drawbox) 4 [ 0]
[750 2277 4500 1450 
] dogrey 
0 Setcolor
 0 [1 3] [1500.000000 30.000000 2.000000] [750 3727] drawaxis
/Times-Roman findfont 80 scf mul scalefont setfont
(-1) 704 3889 0  0.00 [704 3819 92 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 590 4009 0  0.00 [590 3919 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
(0) 2227 3889 0  0.00 [2227 3819 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 2113 4009 0  0.00 [2113 3919 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
(1) 3727 3889 0  0.00 [3727 3819 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 3613 4009 0  0.00 [3613 3919 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
(2) 5227 3889 0  0.00 [5227 3819 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 5113 4009 0  0.00 [5113 3919 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
/Times-Roman findfont 100 scf mul scalefont setfont
 -90 [2 6] [120.833333 -14.500000 2.000000] [750 3727] drawaxis
(-60) 543 3757 0  0.00 [543 3667 172 120] Show
(-50) 543 3515 0  0.00 [543 3425 172 120] Show
(-40) 543 3274 0  0.00 [543 3184 172 120] Show
(-30) 543 3032 0  0.00 [543 2942 172 120] Show
(-20) 543 2790 0  0.00 [543 2700 172 120] Show
(-10) 543 2549 0  0.00 [543 2459 172 120] Show
(0) 658 2307 0  0.00 [658 2217 57 120] Show
0 Setcolor
750 2277 4500 1450 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2e put
 (drawpolymark) 2 [ 0]
[750 3604 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
3 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1202 2277 1202 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1466 2277 1466 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1653 2277 1653 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1798 2277 1798 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1917 2277 1917 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2018 2277 2018 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2105 2277 2105 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2181 2277 2181 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 2277 2250 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 2277 2250 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2702 2277 2702 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2966 2277 2966 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3153 2277 3153 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3298 2277 3298 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3417 2277 3417 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3518 2277 3518 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3605 2277 3605 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3681 2277 3681 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 2277 3750 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 2277 3750 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4202 2277 4202 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4466 2277 4466 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4653 2277 4653 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4798 2277 4798 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4917 2277 4917 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5018 2277 5018 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5105 2277 5105 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5181 2277 5181 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2519 5250 2519 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2760 5250 2760 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3002 5250 3002 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3244 5250 3244 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3485 5250 3485 
] dogrey 
3 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
0 Setcolor
750 2277 4500 1450 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 268 [ 0]
[750 2401 927 2439 1066 2477 1181 2515 1231 2534 1278 2552 1322 2570 1363 2589 1401 2607 1438 2625 
1472 2642 1505 2660 1536 2677 1566 2694 1594 2711 1621 2728 1647 2745 1673 2761 1697 2778 1720 2794 
1743 2809 1765 2825 1786 2840 1806 2855 1826 2870 1845 2885 1864 2900 1882 2914 1899 2928 1917 2942 
1933 2956 1950 2969 1966 2982 1981 2995 1996 3008 2011 3020 2026 3033 2040 3045 2067 3069 2094 3091 
2119 3113 2144 3135 2167 3155 2190 3175 2212 3194 2233 3212 2253 3229 2273 3246 2293 3263 2311 3278 
2330 3293 2347 3308 2365 3321 2398 3348 2430 3372 2460 3394 2489 3414 2516 3433 2543 3450 2568 3466 
2593 3481 2616 3494 2639 3506 2661 3518 2682 3528 2703 3537 2723 3546 2742 3554 2761 3561 2779 3567 
2815 3578 2848 3586 2880 3593 2910 3598 2939 3601 2966 3603 2993 3604 3018 3604 3043 3602 3067 3600 
3089 3598 3111 3594 3133 3590 3153 3586 3173 3581 3193 3575 3212 3570 3230 3564 3265 3551 3299 3537 
3330 3522 3361 3507 3390 3491 3417 3475 3444 3459 3469 3443 3494 3426 3518 3410 3540 3394 3562 3378 
3584 3361 3625 3330 3663 3299 3699 3269 3733 3241 3766 3213 3797 3186 3826 3161 3855 3136 3882 3112 
3933 3068 3980 3028 4025 2990 4066 2956 4105 2925 4141 2896 4176 2869 4209 2844 4271 2800 4327 2762 
4378 2729 4426 2699 4471 2674 4512 2651 4588 2612 4657 2580 4718 2554 4775 2531 4875 2496 4961 2469 
5038 2448 5106 2432 5224 2406 5250 2401 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(degrees ) 895 2265 0  0.00 [895 2175 459 120] Show
( Hz ) 5510 3654 0  0.00 [5510 3564 229 120] Show
(Phase  ) 2799 2204 0  0.00 [2799 2114 401 120] Show
 showpage

 end saved restore 

