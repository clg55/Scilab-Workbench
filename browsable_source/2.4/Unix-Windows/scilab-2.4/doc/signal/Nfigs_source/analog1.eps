%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(0) 722 3906 0  0.00 [722 3816 57 120] Show
(100) 1114 3906 0  0.00 [1114 3816 172 120] Show
(200) 1564 3906 0  0.00 [1564 3816 172 120] Show
(300) 2014 3906 0  0.00 [2014 3816 172 120] Show
(400) 2464 3906 0  0.00 [2464 3816 172 120] Show
(500) 2914 3906 0  0.00 [2914 3816 172 120] Show
(600) 3364 3906 0  0.00 [3364 3816 172 120] Show
(700) 3814 3906 0  0.00 [3814 3816 172 120] Show
(800) 4264 3906 0  0.00 [4264 3816 172 120] Show
(900) 4714 3906 0  0.00 [4714 3816 172 120] Show
(1000) 5136 3906 0  0.00 [5136 3816 229 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(-180) 449 3740 0  0.00 [449 3650 229 120] Show
(-160) 449 3422 0  0.00 [449 3332 229 120] Show
(-140) 449 3104 0  0.00 [449 3014 229 120] Show
(-120) 449 2786 0  0.00 [449 2696 229 120] Show
(-100) 449 2468 0  0.00 [449 2378 229 120] Show
(-80) 506 2150 0  0.00 [506 2060 172 120] Show
(-60) 506 1832 0  0.00 [506 1742 172 120] Show
(-40) 506 1514 0  0.00 [506 1424 172 120] Show
(-20) 506 1196 0  0.00 [506 1106 172 120] Show
(0) 621 878 0  0.00 [621 788 57 120] Show
(20) 564 560 0  0.00 [564 470 114 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 432 [ 0]
[755 848 759 848 764 848 768 848 773 848 777 848 782 848 786 848 791 848 795 848 
800 848 804 848 809 848 813 848 818 848 822 848 827 848 831 848 836 848 840 848 
845 848 849 848 854 848 858 848 863 848 867 848 872 848 876 848 881 848 885 848 
890 848 894 848 899 848 903 848 908 848 912 848 917 848 921 848 926 848 930 848 
935 848 939 848 944 848 948 848 953 848 957 848 962 848 966 848 971 848 975 848 
980 848 984 848 989 848 993 848 998 848 1002 848 1007 848 1011 848 1016 848 1020 848 
1025 848 1029 848 1034 848 1038 848 1043 848 1047 848 1052 848 1056 848 1061 848 1065 848 
1070 848 1074 848 1079 848 1083 848 1088 848 1092 848 1097 848 1101 848 1106 848 1110 848 
1115 848 1119 848 1124 848 1128 848 1133 848 1137 848 1142 848 1146 848 1151 848 1155 848 
1160 848 1164 848 1169 848 1173 848 1178 848 1182 848 1187 848 1191 848 1196 848 1200 848 
1205 848 1209 848 1214 848 1218 848 1223 848 1227 848 1232 848 1236 848 1241 848 1245 848 
1250 848 1254 848 1259 848 1263 848 1268 848 1272 848 1277 848 1281 848 1286 848 1290 848 
1295 848 1299 848 1304 848 1308 848 1313 848 1317 848 1322 848 1326 848 1331 848 1335 848 
1340 848 1344 848 1349 848 1353 848 1358 848 1362 848 1367 848 1371 848 1376 848 1380 848 
1385 848 1389 848 1394 848 1398 848 1403 848 1407 848 1412 848 1416 848 1421 848 1425 848 
1430 848 1434 848 1439 848 1443 848 1448 848 1452 848 1457 848 1461 848 1466 848 1470 848 
1475 848 1479 848 1484 848 1488 848 1493 848 1497 848 1502 848 1506 848 1511 848 1515 848 
1520 848 1524 848 1529 848 1533 848 1538 848 1542 848 1547 848 1551 848 1556 848 1560 848 
1565 848 1569 848 1574 848 1578 848 1583 848 1587 848 1592 848 1596 848 1601 848 1605 848 
1610 848 1614 848 1619 848 1623 848 1628 848 1632 848 1637 848 1641 848 1646 848 1650 848 
1655 848 1659 848 1664 848 1668 848 1673 848 1677 848 1682 848 1686 848 1691 848 1695 848 
1700 848 1704 848 1709 848 1713 848 1718 848 1722 848 
] dogrey 
 (drawpolymark) 432 [0]
[1727 848 1731 848 1736 848 1740 848 1745 848 1749 848 1754 848 1758 848 1763 848 1767 848 
1772 848 1776 848 1781 848 1785 848 1790 848 1794 848 1799 848 1803 848 1808 848 1812 848 
1817 848 1821 848 1826 848 1830 848 1835 848 1839 849 1844 849 1848 849 1853 849 1857 849 
1862 849 1866 849 1871 849 1875 849 1880 849 1884 849 1889 850 1893 850 1898 850 1902 850 
1907 850 1911 851 1916 851 1920 851 1925 852 1929 852 1934 852 1938 853 1943 853 1947 854 
1952 855 1956 855 1961 856 1965 857 1970 857 1974 858 1979 859 1983 860 1988 862 1992 863 
1997 864 2001 866 2006 867 2010 869 2015 871 2019 873 2024 875 2028 878 2033 880 2037 883 
2042 886 2046 889 2051 892 2055 896 2060 900 2064 904 2069 908 2073 912 2078 917 2082 922 
2087 927 2091 932 2096 938 2100 944 2105 950 2109 956 2114 963 2118 970 2123 977 2127 984 
2132 991 2136 999 2141 1007 2145 1015 2150 1023 2154 1031 2159 1040 2163 1049 2168 1057 2172 1066 
2177 1075 2181 1085 2186 1094 2190 1103 2195 1113 2199 1122 2204 1132 2208 1142 2213 1152 2217 1162 
2222 1171 2226 1181 2231 1191 2235 1201 2240 1211 2244 1221 2249 1232 2253 1242 2258 1252 2262 1262 
2267 1272 2271 1282 2276 1292 2280 1303 2285 1313 2289 1323 2294 1333 2298 1343 2303 1353 2307 1364 
2312 1374 2316 1384 2321 1394 2325 1404 2330 1414 2334 1424 2339 1434 2343 1444 2348 1454 2352 1464 
2357 1474 2361 1484 2366 1494 2370 1504 2375 1514 2379 1524 2384 1533 2388 1543 2393 1553 2397 1563 
2402 1573 2406 1582 2411 1592 2415 1602 2420 1611 2424 1621 2429 1631 2433 1640 2438 1650 2442 1659 
2447 1669 2451 1678 2456 1688 2460 1697 2465 1707 2469 1716 2474 1725 2478 1735 2483 1744 2487 1753 
2492 1763 2496 1772 2501 1781 2505 1790 2510 1799 2514 1809 2519 1818 2523 1827 2528 1836 2532 1845 
2537 1854 2541 1863 2546 1872 2550 1881 2555 1890 2559 1899 2564 1908 2568 1917 2573 1926 2577 1935 
2582 1943 2586 1952 2591 1961 2595 1970 2600 1978 2604 1987 2609 1996 2613 2005 2618 2013 2622 2022 
2627 2030 2631 2039 2636 2048 2640 2056 2645 2065 2649 2073 2654 2082 2658 2090 2663 2099 2667 2107 
2672 2116 2676 2124 2681 2132 2685 2141 2690 2149 2694 2157 
] dogrey 
 (drawpolymark) 432 [0]
[2699 2166 2703 2174 2708 2182 2712 2190 2717 2199 2721 2207 2726 2215 2730 2223 2735 2231 2739 2240 
2744 2248 2748 2256 2753 2264 2757 2272 2762 2280 2766 2288 2771 2296 2775 2304 2780 2312 2784 2320 
2789 2328 2793 2336 2798 2344 2802 2351 2807 2359 2811 2367 2816 2375 2820 2383 2825 2391 2829 2398 
2834 2406 2838 2414 2843 2422 2847 2429 2852 2437 2856 2445 2861 2452 2865 2460 2870 2468 2874 2475 
2879 2483 2883 2490 2888 2498 2892 2506 2897 2513 2901 2521 2906 2528 2910 2536 2915 2543 2919 2551 
2924 2558 2928 2565 2933 2573 2937 2580 2942 2588 2946 2595 2951 2602 2955 2610 2960 2617 2964 2624 
2969 2632 2973 2639 2978 2646 2982 2653 2987 2661 2991 2668 2996 2675 3000 2682 3005 2689 3009 2697 
3014 2704 3018 2711 3023 2718 3027 2725 3032 2732 3036 2739 3041 2746 3045 2753 3050 2760 3054 2767 
3059 2774 3063 2781 3068 2788 3072 2795 3077 2802 3081 2809 3086 2816 3090 2823 3095 2830 3099 2837 
3104 2844 3108 2851 3113 2857 3117 2864 3122 2871 3126 2878 3131 2885 3135 2891 3140 2898 3144 2905 
3149 2912 3153 2918 3158 2925 3162 2932 3167 2939 3171 2945 3176 2952 3180 2959 3185 2965 3189 2972 
3194 2978 3198 2985 3203 2992 3207 2998 3212 3005 3216 3011 3221 3018 3225 3024 3230 3031 3234 3038 
3239 3044 3243 3051 3248 3057 3252 3063 3257 3070 3261 3076 3266 3083 3270 3089 3275 3096 3279 3102 
3284 3108 3288 3115 3293 3121 3297 3127 3302 3134 3306 3140 3311 3146 3315 3153 3320 3159 3324 3165 
3329 3172 3333 3178 3338 3184 3342 3190 3347 3197 3351 3203 3356 3209 3360 3215 3365 3221 3369 3228 
3374 3234 3378 3240 3383 3246 3387 3252 3392 3258 3396 3264 3401 3270 3405 3277 3410 3283 3414 3289 
3419 3295 3423 3301 3428 3307 3432 3313 3437 3319 3441 3325 3446 3331 3450 3337 3455 3343 3459 3349 
3464 3355 3468 3361 3473 3367 3477 3373 3482 3379 3486 3384 3491 3390 3495 3396 3500 3402 3504 3408 
3509 3414 3513 3420 3518 3426 3522 3431 3527 3437 3531 3443 3536 3449 3540 3455 3545 3460 3549 3466 
3554 3472 3558 3478 3563 3483 3567 3489 3572 3495 3576 3501 3581 3506 3585 3512 3590 3518 3594 3523 
3599 3529 3603 3535 3608 3540 3612 3546 3617 3552 3621 3557 3626 3563 3630 3569 3635 3574 3639 3580 
3644 3585 3648 3591 3653 3597 3657 3602 3662 3608 3666 3613 
] dogrey 
 (drawpolymark) 432 [0]
[3671 3619 3675 3624 3680 3630 3684 3635 3689 3641 3693 3646 3698 3652 3702 3657 3707 3663 3711 3668 
3716 3674 3720 3679 3725 3685 3729 3690 3734 3695 3738 3701 3743 3706 3747 3712 3752 3717 3756 3722 
3761 3728 3765 3733 3770 3739 3774 3744 3779 3749 3783 3755 3788 3760 3792 3765 3797 3770 3801 3776 
3806 3781 3810 3786 3815 3792 3819 3797 3824 3802 3828 3807 3833 3813 3837 3818 3842 3823 3846 3828 
3851 3834 3855 3839 3860 3844 3864 3849 3869 3854 3873 3860 3878 3865 3882 3870 3887 3875 3891 3880 
3896 3885 3900 3890 3905 3896 3909 3901 3914 3906 3918 3911 3923 3916 3927 3921 3932 3926 3936 3931 
3941 3936 3945 3941 3950 3946 3954 3951 3959 3957 3963 3962 3968 3967 3972 3972 3977 3977 3981 3982 
3986 3987 3990 3992 3995 3997 3999 4002 4004 4007 4008 4011 4013 4016 4017 4021 4022 4026 4026 4031 
4031 4036 4035 4041 4040 4046 4044 4051 4049 4056 4053 4061 4058 4066 4062 4071 4067 4075 4071 4080 
4076 4085 4080 4090 4085 4095 4089 4100 4094 4104 4098 4109 4103 4114 4107 4119 4112 4124 4116 4129 
4121 4133 4125 4138 4130 4143 4134 4148 4139 4153 4143 4157 4148 4162 4152 4167 4157 4172 4161 4176 
4166 4181 4170 4186 4175 4190 4179 4195 4184 4200 4188 4205 4193 4209 4197 4214 4202 4219 4206 4223 
4211 4228 4215 4233 4220 4237 4224 4242 4229 4247 4233 4251 4238 4256 4242 4261 4247 4265 4251 4270 
4256 4274 4260 4279 4265 4284 4269 4288 4274 4293 4278 4297 4283 4302 4287 4307 4292 4311 4296 4316 
4301 4320 4305 4325 4310 4329 4314 4334 4319 4338 4323 4343 4328 4347 4332 4352 4337 4356 4341 4361 
4346 4365 4350 4370 4355 4374 4359 4379 4364 4383 4368 4388 4373 4392 4377 4397 4382 4401 4386 4406 
4391 4410 4395 4415 4400 4419 4404 4423 4409 4428 4413 4432 4418 4437 4422 4441 4427 4445 4431 4450 
4436 4454 4440 4459 4445 4463 4449 4467 4454 4472 4458 4476 4463 4480 4467 4485 4472 4489 4476 4493 
4481 4498 4485 4502 4490 4506 4494 4511 4499 4515 4503 4519 4508 4524 4512 4528 4517 4532 4521 4537 
4526 4541 4530 4545 4535 4549 4539 4554 4544 4558 4548 4562 4553 4566 4557 4571 4562 4575 4566 4579 
4571 4583 4575 4588 4580 4592 4584 4596 4589 4600 4593 4604 4598 4609 4602 4613 4607 4617 4611 4621 
4616 4625 4620 4630 4625 4634 4629 4638 4634 4642 4638 4646 
] dogrey 
 (drawpolymark) 272 [0]
[4643 4650 4647 4655 4652 4659 4656 4663 4661 4667 4665 4671 4670 4675 4674 4679 4679 4683 4683 4688 
4688 4692 4692 4696 4697 4700 4701 4704 4706 4708 4710 4712 4715 4716 4719 4720 4724 4724 4728 4728 
4733 4732 4737 4737 4742 4741 4746 4745 4751 4749 4755 4753 4760 4757 4764 4761 4769 4765 4773 4769 
4778 4773 4782 4777 4787 4781 4791 4785 4796 4789 4800 4793 4805 4797 4809 4801 4814 4805 4818 4809 
4823 4813 4827 4817 4832 4821 4836 4825 4841 4829 4845 4833 4850 4836 4854 4840 4859 4844 4863 4848 
4868 4852 4872 4856 4877 4860 4881 4864 4886 4868 4890 4872 4895 4876 4899 4880 4904 4883 4908 4887 
4913 4891 4917 4895 4922 4899 4926 4903 4931 4907 4935 4911 4940 4914 4944 4918 4949 4922 4953 4926 
4958 4930 4962 4934 4967 4938 4971 4941 4976 4945 4980 4949 4985 4953 4989 4957 4994 4960 4998 4964 
5003 4968 5007 4972 5012 4976 5016 4979 5021 4983 5025 4987 5030 4991 5034 4995 5039 4998 5043 5002 
5048 5006 5052 5010 5057 5013 5061 5017 5066 5021 5070 5025 5075 5028 5079 5032 5084 5036 5088 5040 
5093 5043 5097 5047 5102 5051 5106 5054 5111 5058 5115 5062 5120 5065 5124 5069 5129 5073 5133 5077 
5138 5080 5142 5084 5147 5088 5151 5091 5156 5095 5160 5099 5165 5102 5169 5106 5174 5110 5178 5113 
5183 5117 5187 5121 5192 5124 5196 5128 5201 5131 5205 5135 5210 5139 5214 5142 5219 5146 5223 5150 
5228 5153 5232 5157 5237 5160 5241 5164 5246 5168 5250 5171 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 

