%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 1.000000 0.0 1.0] def
/ColorG [0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 0.843137 0.0 1.0] def
/ColorB [0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [10 2] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(-3) 693 3906 0  0.00 [693 3816 114 120] Show
(0) 2972 3906 0  0.00 [2972 3816 57 120] Show
(3) 5222 3906 0  0.00 [5222 3816 57 120] Show
 -90 [10 2] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(-3) 564 3740 0  0.00 [564 3650 114 120] Show
(0) 621 2150 0  0.00 [621 2060 57 120] Show
(3) 621 560 0  0.00 [621 470 57 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 452 [ 0]
[3750 2120 3765 2109 3780 2098 3795 2087 3810 2076 3825 2064 3839 2053 3854 2041 3868 2028 3882 2016 
3896 2004 3910 1991 3923 1978 3936 1965 3948 1951 3961 1938 3972 1924 3983 1910 3993 1896 4003 1882 
4012 1868 4020 1854 4027 1839 4034 1825 4039 1810 4043 1795 4047 1781 4049 1766 4050 1751 4050 1736 
4048 1721 4045 1706 4041 1692 4035 1677 4028 1662 4020 1648 4010 1634 3999 1619 3986 1605 3972 1592 
3956 1578 3940 1565 3921 1551 3902 1538 3881 1526 3859 1514 3836 1502 3812 1490 3787 1479 3761 1468 
3735 1457 3707 1447 3679 1437 3651 1428 3622 1419 3592 1410 3563 1402 3533 1394 3503 1387 3473 1380 
3443 1374 3413 1368 3384 1362 3354 1357 3325 1352 3297 1347 3268 1343 3240 1340 3213 1337 3186 1334 
3160 1331 3134 1329 3108 1328 3083 1326 3059 1325 3035 1325 3012 1324 2990 1324 2968 1325 2946 1325 
2926 1326 2905 1327 2885 1329 2866 1331 2847 1333 2829 1335 2811 1337 2793 1340 2776 1343 2760 1347 
2743 1350 2728 1354 2712 1358 2697 1362 2682 1366 2667 1371 2653 1376 2638 1381 2624 1386 2611 1391 
2597 1397 2584 1403 2570 1409 2557 1415 2544 1421 2531 1428 2518 1434 2505 1441 2492 1448 2479 1456 
2467 1463 2454 1471 2441 1479 2428 1487 2415 1495 2402 1503 2388 1512 2375 1520 2361 1529 2348 1539 
2334 1548 2320 1557 2305 1567 2291 1577 2276 1587 2261 1597 2246 1608 2230 1619 2214 1630 2198 1641 
2181 1652 2164 1664 2146 1676 2129 1688 2110 1701 2092 1713 2072 1726 2053 1740 2032 1753 2012 1767 
1990 1781 1969 1796 1946 1810 1923 1825 1900 1841 1876 1856 1851 1873 1826 1889 1800 1906 1773 1923 
1746 1940 1719 1958 1691 1977 1662 1995 1633 2014 1604 2034 1574 2054 1544 2074 1514 2095 1483 2116 
1453 2138 1422 2160 1392 2182 1363 2205 1333 2229 1305 2253 1278 2277 1251 2301 1226 2326 1203 2351 
1181 2377 1162 2403 1145 2429 1130 2455 1119 2482 1111 2508 1106 2535 1105 2562 1108 2589 1115 2615 
1126 2642 1142 2668 1163 2694 1188 2720 1217 2746 1251 2771 1289 2795 1332 2819 1378 2842 1428 2865 
1481 2887 1538 2908 1596 2928 1658 2947 1720 2966 1784 2983 1849 3000 1915 3016 1981 3031 2046 3045 
2111 3058 2175 3070 2238 3081 2299 3092 2359 3101 2417 3110 2473 3117 2527 3125 2579 3131 2628 3136 
2676 3141 2721 3146 2765 3149 2806 3152 2845 3155 2882 3157 2917 3158 2950 3159 2981 3160 3011 3160 
3039 3159 3065 3158 3090 3157 3114 3156 3136 3154 3157 3152 
] dogrey 
 (drawpoly) 452 [0]
[3177 3150 3196 3147 3214 3144 3231 3141 3246 3138 3262 3134 3276 3130 3290 3126 3303 3122 3315 3118 
3327 3113 3339 3108 3350 3104 3360 3099 3370 3093 3380 3088 3390 3083 3399 3077 3408 3071 3416 3066 
3425 3060 3433 3054 3441 3047 3449 3041 3457 3035 3465 3028 3473 3022 3480 3015 3488 3008 3495 3001 
3503 2994 3510 2987 3517 2980 3525 2972 3532 2965 3540 2957 3548 2949 3555 2942 3563 2934 3571 2926 
3579 2918 3587 2909 3595 2901 3603 2893 3611 2884 3620 2875 3628 2867 3637 2858 3646 2849 3656 2839 
3665 2830 3675 2821 3684 2811 3695 2801 3705 2791 3716 2781 3726 2771 3738 2761 3749 2750 3761 2740 
3773 2729 3785 2718 3798 2706 3812 2695 3825 2684 3839 2672 3854 2660 3868 2648 3884 2635 3900 2623 
3916 2610 3933 2597 3950 2583 3968 2570 3986 2556 4005 2542 4025 2528 4045 2513 4066 2498 4087 2483 
4109 2467 4132 2452 4156 2435 4180 2419 4205 2402 4231 2385 4257 2367 4284 2349 4312 2331 4340 2312 
4369 2293 4399 2274 4429 2254 4460 2233 4491 2212 4523 2191 4555 2169 4587 2147 4620 2124 4652 2101 
4685 2078 4717 2054 4748 2029 4779 2004 4809 1979 4839 1953 4866 1927 4892 1900 4916 1873 4938 1846 
4958 1819 4974 1791 4987 1763 4997 1735 5003 1706 5005 1678 5002 1650 4995 1622 4983 1593 4966 1565 
4945 1538 4917 1511 4885 1484 4848 1457 4806 1431 4760 1406 4709 1382 4654 1358 4595 1335 4533 1313 
4469 1292 4402 1271 4333 1252 4263 1234 4192 1216 4121 1200 4050 1185 3980 1170 3910 1157 3841 1145 
3774 1133 3709 1123 3646 1113 3585 1104 3526 1097 3470 1090 3415 1083 3364 1078 3315 1073 3268 1069 
3224 1065 3182 1063 3142 1060 3105 1059 3069 1057 3036 1057 3005 1056 2975 1056 2948 1057 2922 1058 
2897 1059 2874 1061 2852 1063 2832 1065 2812 1067 2794 1070 2777 1073 2761 1077 2745 1080 2731 1084 
2717 1088 2704 1092 2692 1096 2680 1100 2668 1105 2658 1110 2647 1115 2637 1120 2628 1125 2619 1130 
2610 1136 2601 1141 2593 1147 2585 1153 2577 1159 2569 1165 2561 1171 2554 1177 2547 1184 2539 1190 
2532 1197 2525 1203 2518 1210 2511 1217 2504 1224 2497 1231 2490 1238 2484 1245 2477 1253 2470 1260 
2463 1268 2455 1275 2448 1283 2441 1291 2434 1299 2426 1307 2419 1315 2411 1323 2403 1332 2395 1340 
2387 1349 2379 1357 2371 1366 2362 1375 2353 1384 2344 1394 2335 1403 2326 1412 2316 1422 2307 1432 
2296 1442 2286 1452 2275 1462 2265 1472 2253 1483 2242 1493 
] dogrey 
 (drawpoly) 452 [0]
[2230 1504 2218 1515 2205 1526 2192 1537 2179 1549 2165 1561 2151 1572 2137 1585 2121 1597 2106 1609 
2090 1622 2074 1635 2057 1648 2039 1662 2021 1676 2002 1690 1983 1704 1963 1718 1943 1733 1921 1748 
1900 1764 1877 1779 1854 1795 1830 1812 1806 1828 1780 1845 1754 1863 1728 1881 1700 1899 1672 1917 
1643 1936 1614 1956 1584 1976 1553 1996 1522 2016 1491 2038 1459 2059 1426 2081 1394 2104 1361 2127 
1329 2150 1297 2174 1265 2198 1233 2223 1202 2248 1173 2274 1144 2300 1117 2326 1092 2353 1069 2380 
1048 2407 1030 2435 1015 2463 1004 2491 996 2519 992 2548 992 2576 997 2605 1006 2633 1021 2661 
1040 2689 1065 2716 1095 2743 1129 2770 1169 2796 1214 2822 1263 2847 1316 2871 1373 2894 1433 2917 
1497 2939 1563 2959 1631 2979 1700 2998 1771 3016 1842 3033 1914 3049 1985 3064 2055 3077 2124 3090 
2192 3102 2259 3113 2323 3123 2385 3132 2445 3141 2503 3148 2558 3155 2611 3160 2662 3166 2710 3170 
2755 3174 2798 3177 2839 3180 2877 3182 2914 3183 2948 3184 2980 3184 3011 3185 3039 3184 3066 3183 
3092 3182 3115 3181 3138 3179 3159 3177 3179 3175 3197 3172 3215 3169 3232 3166 3247 3162 3262 3159 
3276 3155 3290 3151 3303 3147 3315 3142 3326 3138 3337 3133 3348 3128 3358 3123 3368 3118 3377 3113 
3386 3108 3395 3102 3403 3096 3411 3091 3419 3085 3427 3079 3435 3073 3442 3067 3450 3060 3457 3054 
3464 3047 3471 3041 3478 3034 3485 3027 3492 3020 3499 3013 3506 3006 3513 2999 3520 2992 3527 2984 
3534 2977 3541 2969 3548 2962 3555 2954 3562 2946 3570 2938 3577 2930 3585 2922 3592 2913 3600 2905 
3608 2896 3616 2888 3625 2879 3633 2870 3642 2861 3650 2852 3659 2843 3669 2833 3678 2824 3688 2814 
3698 2804 3708 2794 3718 2784 3729 2774 3740 2764 3752 2753 3763 2742 3775 2732 3788 2720 3800 2709 
3813 2698 3827 2686 3841 2674 3855 2662 3870 2650 3885 2638 3901 2625 3917 2612 3934 2599 3951 2586 
3969 2572 3987 2559 4006 2545 4025 2530 4046 2516 4066 2501 4088 2485 4110 2470 4133 2454 4156 2438 
4180 2421 4205 2405 4231 2387 4257 2370 4284 2352 4312 2333 4340 2315 4369 2296 4399 2276 4429 2256 
4460 2236 4491 2215 4523 2193 4555 2172 4587 2150 4620 2127 4652 2104 4685 2080 4717 2056 4749 2032 
4780 2007 4810 1981 4840 1956 4867 1929 4894 1903 4918 1876 4940 1849 4960 1821 4977 1793 4990 1765 
5000 1737 5007 1709 5009 1680 5007 1652 5000 1624 4988 1595 
] dogrey 
 (drawpoly) 452 [0]
[4972 1567 4950 1540 4923 1512 4891 1485 4855 1459 4813 1433 4766 1408 4716 1383 4661 1359 4602 1336 
4540 1314 4476 1293 4409 1272 4340 1253 4270 1234 4199 1217 4128 1200 4056 1185 3986 1170 3916 1157 
3847 1145 3780 1133 3714 1123 3651 1113 3589 1104 3530 1096 3473 1089 3419 1083 3367 1077 3318 1072 
3271 1068 3227 1065 3184 1062 3145 1060 3107 1058 3072 1057 3038 1056 3007 1055 2977 1056 2949 1056 
2923 1057 2898 1058 2875 1060 2853 1062 2833 1064 2813 1067 2795 1069 2778 1072 2762 1076 2746 1079 
2732 1083 2718 1087 2705 1091 2692 1095 2680 1099 2669 1104 2658 1109 2648 1114 2638 1119 2628 1124 
2619 1129 2610 1135 2602 1140 2593 1146 2585 1152 2577 1158 2570 1164 2562 1170 2555 1176 2547 1182 
2540 1189 2533 1195 2526 1202 2519 1209 2512 1216 2505 1223 2498 1230 2491 1237 2484 1244 2477 1251 
2470 1259 2463 1266 2456 1274 2449 1282 2442 1289 2435 1297 2427 1305 2420 1314 2412 1322 2404 1330 
2396 1339 2388 1347 2380 1356 2372 1365 2363 1374 2355 1383 2346 1392 2337 1401 2327 1411 2318 1420 
2308 1430 2298 1440 2288 1450 2277 1460 2266 1470 2255 1481 2244 1491 2232 1502 2220 1513 2207 1524 
2194 1535 2181 1547 2167 1559 2153 1571 2139 1583 2124 1595 2108 1607 2093 1620 2076 1633 2059 1646 
2042 1660 2024 1673 2005 1687 1986 1701 1966 1716 1946 1731 1925 1746 1903 1761 1881 1777 1858 1793 
1834 1809 1809 1826 1784 1843 1758 1860 1732 1878 1705 1896 1677 1914 1648 1933 1619 1953 1589 1972 
1558 1992 1527 2013 1496 2034 1464 2056 1432 2077 1399 2100 1367 2123 1334 2146 1302 2170 1270 2194 
1238 2219 1207 2244 1177 2269 1149 2295 1121 2322 1096 2348 1072 2376 1051 2403 1033 2431 1017 2459 
1005 2487 997 2515 992 2543 992 2572 996 2600 1004 2628 1018 2656 1037 2684 1060 2712 1089 2739 
1123 2766 1162 2792 1206 2818 1254 2843 1307 2867 1363 2891 1423 2913 1486 2935 1552 2956 1620 2976 
1689 2995 1760 3013 1831 3030 1902 3046 1973 3061 2044 3075 2113 3088 2181 3100 2248 3111 2313 3122 
2375 3131 2436 3139 2494 3147 2550 3154 2603 3160 2654 3165 2702 3169 2748 3173 2791 3176 2832 3179 
2871 3181 2908 3183 2943 3184 2975 3184 3006 3185 3035 3184 3062 3184 3088 3183 3112 3181 3134 3179 
3156 3177 3176 3175 3194 3172 3212 3169 3229 3166 3245 3163 3260 3159 3274 3156 3288 3152 3301 3148 
3313 3143 3324 3139 3335 3134 3346 3129 3356 3124 3366 3119 
] dogrey 
 (drawpoly) 194 [0]
[3375 3114 3384 3109 3393 3103 3402 3097 3410 3092 3418 3086 3426 3080 3434 3074 3441 3068 3448 3061 
3456 3055 3463 3048 3470 3042 3477 3035 3484 3028 3491 3022 3498 3015 3505 3007 3512 3000 3519 2993 
3526 2986 3533 2978 3540 2971 3547 2963 3554 2955 3561 2947 3568 2939 3576 2931 3583 2923 3591 2915 
3599 2906 3607 2898 3615 2889 3623 2880 3632 2871 3640 2862 3649 2853 3658 2844 3667 2835 3677 2825 
3686 2816 3696 2806 3706 2796 3717 2786 3727 2776 3738 2765 3750 2755 3761 2744 3773 2733 3785 2722 
3798 2711 3811 2700 3825 2688 3838 2676 3853 2664 3867 2652 3882 2640 3898 2627 3914 2615 3931 2602 
3948 2588 3966 2575 3984 2561 4003 2547 4022 2533 4042 2518 4063 2503 4084 2488 4106 2472 4129 2457 
4152 2441 4176 2424 4201 2407 4226 2390 4253 2373 4279 2355 4307 2336 4335 2318 4364 2299 4394 2279 
4424 2259 4455 2239 4486 2218 4518 2197 4550 2175 4582 2153 4614 2131 4647 2108 4680 2084 4712 2060 
4744 2036 4775 2011 4805 1986 4835 1960 4863 1934 4889 1907 4914 1880 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(Van der Pol ) 2656 313 0  0.00 [2656 223 688 120] Show
 showpage

 end saved restore 

