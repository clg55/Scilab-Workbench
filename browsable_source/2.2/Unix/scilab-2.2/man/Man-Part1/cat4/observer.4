


onserver(1)                    Scilab Function                    onserver(1)






NAME
  observer - observer design

CALLING SEQUENCE
  [Obs,U,m]=observer(Sys,flag,alfa)

PARAMETERS

  Sys       : syslin list (linear system)

  flag      : character strings ('pp' or 'st' (default))

  alfa      : location of closed-loop poles (optional parameter, default=-1)

  Obs       : linear system (syslin list), the observer

  U         : orthogonal matrix (see dt_ility)

  m         : integer

DESCRIPTION
  Observer returns in Obs an observer for (the observable part of) linear
  system Sys: dotx=A x + Bu, y=Cx + Du
   represented by a syslin list.  Sys has nx state variables, nu inputs and
  ny outputs.  Obs is a linear system with matrices [Ao,Bo,Identity], where
  Ao is no x no, Bo is no x (nu+ny),  Co is no x no and no=nx-m.

  Input to Obs is [u,y] and output of Obs is:

  xhat=estimate of x modulo unobservable subsp. (case 'pp') or

  xhat=estimate of x modulo unstable unobservable subsp. (case 'st')

  case flag='st': z=H*x can be estimated with stable observer iff
  H*U(:,1:m)=0 and assignable poles of the observer are set to
  alfa(1),alfa(2),...

  case flag='pp': z=H*x can be estimated with given error spectrum iff
  H*U(:,1:m)=0 all poles of the observer are assigned and set to
  alfa(1),alfa(2),...

  If H satifies the constraint: H*U(:,1:m)=0  (ker(H) contains unobs-subsp.
  of Sys) one has H*U=[0,H2] and the observer for z=H*x is is H2*Obs with
  H2=H*U(:,m+1:nx) i.e. Co, the C-matrix of the observer for H*x, is Co=H2.

EXAMPLE
  // nx=5;nu=1;ny=1;un=3;us=2;Sys=ssrand(ny,nu,nx,list('dt',us,us,un));
  // nx=5 states, nu=1 input, ny=1 output,
  // un=3 unobservable states, us=2 of them unstable.
  // [Obs,U,m]=observer(Sys);  //Stable observer (default)
  // W=U';H=W(m+1:nx,:);[A,B,C,D]=abcd(Sys);  //H*U=[0,eye(no,no)];
  // Sys2=ss2tf(syslin('c',A,B,H))  //Transfer u-->z
  // Idu=eye(nu,nu);ss2tf(Obs*sysdiag(Idu,Sys)*[Idu;Idu])
  // Transfer u-->[u;u]-->w=[u;y=Sys*u]-->Obs*w  i.e. u-->output of Obs
  // this transfer must equal Sys2, the u-->z transfer  (H2=eye).

SEE ALSO
  dt_ility, unobs, stabil

AUTHOR
  F.D.





























































