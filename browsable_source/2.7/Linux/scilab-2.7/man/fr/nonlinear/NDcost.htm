<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>NDcost</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>NDcost -  generic external for optim
  computing gradient using finite differences  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[f,g,ind]=CDcost(x,ind,fun,varargin) </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>

  <li><tt><b>x  </b></tt>
    : real  vector or matrix
  </li>

  <li><tt><b>ind  </b></tt>
    : integer parameter (see optim)
  </li>

  <li><tt><b>fun  </b></tt>
    : Scilab function with calling sequence <tt><b>F=fun(x,varargin)</b></tt>
           varargin may be use to pass  parameters <tt><b>p1,...pn</b></tt>
  </li>

  <li><tt><b>f  </b></tt>
    : criterion value  at point <tt><b>x</b></tt> (see optim)
  </li>

  <li><tt><b>g  </b></tt>
    : gradient value  at point <tt><b>x</b></tt> (see optim)
  </li>


 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
  This function can be used as an external for <tt><b>optim</b></tt> to minimize
   problem where gradient is too complicated to be programmed. only the
   function <tt><b>fun</b></tt> which computes the criterion is required.
  </p><p>
   This function should be used as follow:
   <tt><b>[f,xopt,gopt]=optim(list(CDcost,fun,p1,...pn),x0,...)</b></tt>	
   </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
   //function to minimize
   function f=rosenbrock(x,varagin)
     p=varargin(1)
     f=1+sum( p*(x(2:$)-x(1:$-1)^2)^2 + (1-x(2:$))^2)
   endfunction

   x0=[1;2;3;4];
   [f,xopt,gopt]=optim(list(NDcost,rosenbrock,200),x0)
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="optim.htm"><tt><b>optim</b></tt></a>&nbsp;&nbsp;<a href="../programming/external.htm"><tt><b>external</b></tt></a>&nbsp;&nbsp;<a href="derivative.htm"><tt><b>derivative</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
