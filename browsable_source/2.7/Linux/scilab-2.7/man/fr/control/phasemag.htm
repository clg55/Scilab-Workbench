<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>phasemag</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>phasemag -  phase and magnitude computation  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[phi,db]=phasemag(z [,mod])  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>z  </b></tt>
    : matrix or row vector of complex numbers.
  </li>
  <li><tt><b>mod  </b></tt>
    : character string
  </li>
 <ul>
  <li><tt><b>mod='c'  </b></tt>
    : "continuous" representation between -infinity and +360 degrees (default)
  </li>
  <li><tt><b>mod='m'  </b></tt>
    : representation between -360 and 0 degrees 
  </li>
 </ul>
  <li><tt><b>phi  </b></tt>
    : phases (in degree) of <tt><b>z</b></tt>.
  </li>
  <li><tt><b>db  </b></tt>
    : magnitude (in Db)
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    <tt><b>phasemag</b></tt> computes the phases and magnitudes of the entries of
    a complex matrix. For <tt><b>mod='c'</b></tt>
    <tt><b>phasemag</b></tt> computes  <tt><b>phi(:,i+1)</b></tt>  to minimize the
    distance with  <tt><b>phi(:,i)</b></tt>, i.e. it tries to obtain a
    "continuous representation" of the phase.
  </p>
  <p>
    To obtain the phase between -%pi and %pi use <tt><b>phi=atan(imag(z),real(z))</b></tt>
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
s=poly(0,'s');
h=syslin('c',1/((s+5)*(s+10)*(100+6*s+s*s)*(s+.3)));
[frq,rf]=repfreq(h,0.1,20,0.005);
xbasc(0);
plot2d(frq',phasemag(rf,'c')');
xbasc(1);
plot2d(frq',phasemag(rf,'m')');
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="repfreq.htm"><tt><b>repfreq</b></tt></a>&nbsp;&nbsp;<a href="../graphics/gainplot.htm"><tt><b>gainplot</b></tt></a>&nbsp;&nbsp;<a href="../elementary/atan.htm"><tt><b>atan</b></tt></a>&nbsp;&nbsp;<a href="../graphics/bode.htm"><tt><b>bode</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
