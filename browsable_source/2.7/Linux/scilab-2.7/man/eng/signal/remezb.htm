<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>remezb</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>remezb -  Minimax approximation of magnitude response  </b></p><H3><font color="blue">Calling Sequence</font></H3><dl><dd><tt>[an]=remezb(nc,fg,ds,wt)  </tt></dd></dl><H3><font color="blue">Parameters</font></H3><ul><ul>
  <li><tt><b>nc  </b></tt>
    : Number of cosine functions
  </li>
  <li><tt><b>fg  </b></tt>
    : Grid of frequency points in [0,.5)
  </li>
  <li><tt><b>ds  </b></tt>
    : Desired magnitude on grid <tt><b>fg</b></tt>
  </li>
  <li><tt><b>wt  </b></tt>
    : Weighting function on error on grid <tt><b>fg</b></tt>
  </li>
  <li><tt><b>an  </b></tt>
    : Cosine filter coefficients
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    Minimax approximation of a frequency domain
    magnitude response. The approximation takes
    the form <tt><b>h = sum[a(n)*cos(wn)]</b></tt>
    for n=0,1,...,nc. An FIR, linear-phase filter
    can be obtained from the the output of the function
    by using the following commands
  </p>
  <pre>
         hn(1:nc-1)=an(nc:-1:2)/2;
         hn(nc)=an(1);
         hn(nc+1:2*nc-1)=an(2:nc)/2;
   </pre>
  </dl><H3><font color="blue">Examples</font></H3><ul><pre>
// Choose the number of cosine functions and create a dense grid 
// in [0,.24) and [.26,.5)
nc=21;ngrid=nc*16;
fg=.24*(0:ngrid/2-1)/(ngrid/2-1);
fg(ngrid/2+1:ngrid)=fg(1:ngrid/2)+.26*ones(1:ngrid/2);
// Specify a low pass filter magnitude for the desired response
ds(1:ngrid/2)=ones(1:ngrid/2);
ds(ngrid/2+1:ngrid)=zeros(1:ngrid/2);
// Specify a uniform weighting function
wt=ones(fg);
// Run remezb
an=remezb(nc,fg,ds,wt)
// Make a linear phase FIR filter 
hn(1:nc-1)=an(nc:-1:2)/2;
hn(nc)=an(1);
hn(nc+1:2*nc-1)=an(2:nc)/2;
// Plot the filter's magnitude response
plot(.5*(0:255)/256,frmag(hn,256));
//////////////
// Choose the number of cosine functions and create a dense grid in [0,.5)
nc=21; ngrid=nc*16;
fg=.5*(0:(ngrid-1))/ngrid;
// Specify a triangular shaped magnitude for the desired response
ds(1:ngrid/2)=(0:ngrid/2-1)/(ngrid/2-1);
ds(ngrid/2+1:ngrid)=ds(ngrid/2:-1:1);
// Specify a uniform weighting function
wt=ones(fg);
// Run remezb
an=remezb(nc,fg,ds,wt)
// Make a linear phase FIR filter 
hn(1:nc-1)=an(nc:-1:2)/2;
hn(nc)=an(1);
hn(nc+1:2*nc-1)=an(2:nc)/2;
// Plot the filter's magnitude response
plot(.5*(0:255)/256,frmag(hn,256));
 </pre></ul><H3><font color="blue">See Also</font></H3><p><ul><a href="eqfir.htm"><tt><b>eqfir</b></tt></a>&nbsp;&nbsp;</ul></p><H3><font color="blue">Author</font></H3><p><ul>C. B.  </ul></p></body></html>
