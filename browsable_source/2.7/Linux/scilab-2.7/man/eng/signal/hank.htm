<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>hank</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>hank -  covariance to hankel matrix  </b></p><H3><font color="blue">Calling Sequence</font></H3><dl><dd><tt>[hk]=hank(m,n,cov)  </tt></dd></dl><H3><font color="blue">Parameters</font></H3><ul><ul>
  <li><tt><b>m  </b></tt>
    : number of bloc-rows
  </li>
  <li><tt><b>n  </b></tt>
    : number of bloc-columns
  </li>
  <li><tt><b>cov  </b></tt>
    : sequence of covariances; it must be given as :[R0 R1 R2...Rk]
  </li>
  <li><tt><b>hk  </b></tt>
    : computed hankel matrix
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    this function builds the hankel matrix of size <tt><b>(m*d,n*d)</b></tt>
    from the covariance sequence of a vector process
  </p>
  </dl><H3><font color="blue">Examples</font></H3><ul><pre>
//Example of how to use the hank macro for 
//building a Hankel matrix from multidimensional 
//data (covariance or Markov parameters e.g.)
//
//This is used e.g. in the solution of normal equations
//by classical identification methods (Instrumental Variables e.g.)
//
//1)let's generate the multidimensional data under the form :
//  C=[c_0 c_1 c_2 .... c_n]
//where each bloc c_k is a d-dimensional matrix (e.g. the k-th correlation 
//of a d-dimensional stochastic process X(t) [c_k = E(X(t) X'(t+k)], ' 
//being the transposition in scilab)
//
//we take here d=2 and n=64
//
c=rand(2,2*64)
//
//generate the hankel matrix H (with 4 bloc-rows and 5 bloc-columns)
//from the data in c
//
H=hank(4,5,c);
//
 </pre></ul><H3><font color="blue">See Also</font></H3><p><ul><a href="../elementary/toeplitz.htm"><tt><b>toeplitz</b></tt></a>&nbsp;&nbsp;</ul></p><H3><font color="blue">Author</font></H3><p><ul>G. Le Vey  </ul></p></body></html>
