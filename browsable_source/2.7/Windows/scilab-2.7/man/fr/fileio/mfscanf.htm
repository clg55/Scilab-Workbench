<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title> mscanf  mfscanf msscanf</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b> mscanf  -  interface to the C scanf function   </b></p><p><b> mfscanf -  interface to the C fscanf function   </b></p><p><b> msscanf -  interface to the C sscanf function   </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[n,v_1,...v_n]=mfscanf([niter,]fd,format)  </tt></dd><dd><tt>L=mfscanf([niter,] fd,format)  </tt></dd><dd><tt>  </tt></dd><dd><tt>[n,v_1,...v_n]=mscanf([niter,] format)  </tt></dd><dd><tt>L=mscanf([niter,]format)  </tt></dd><dd><tt>  </tt></dd><dd><tt>[n,v_1,...v_m]=msscanf([niter,]str,format)  </tt></dd><dd><tt>L=msscanf([niter,] str,format)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>format  </b></tt>
    : a Scilab string describing the format to use to write the
  remaining operands.  The format operand follows, as close as
  possible, the C printf format operand syntax.  </li>
  <li><tt><b>fd  </b></tt>
    :The fd parameter returned by the function <tt><b>mopen</b></tt> is
  used as a file descriptor (it's a positive integer). When
  specifying the fd parameter, the value -1 refers to the default file
  ( i.e the last opened file).  </li>
  <li><tt><b>str  </b></tt>
    : a Scilab string.
  </li>
  <li><tt><b>nitem  </b></tt>
    : an integer, the number of times the format as to
  be used.
  </li>



  <li><tt><b>n  </b></tt>
    : an integer, the number of data read or -1 if EOL has been
  encountered before any datum has been read.  </li>
  <li><tt><b>v_i  </b></tt>
    : Each function reads characters, interprets them according to a
  format, and stores the results in its output arguments.  If more
  than $n$ output arguments are provided, the last ones
  <tt><b>v_n+1,...v_m</b></tt> are set to empty matrices.
  </li>
  <li><tt><b>L  </b></tt>
    : if all data are homogeneous they are stored in a unique vector 
    which is returned else subsequences of same date type are 
    stored in matrices and an mlist containing all the 
    built matrices is returned. 
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    The <tt><b>mfscanf</b></tt> function reads characters from the stream <tt><b>fd</b></tt>.
  </p>
  <p>
    The <tt><b>mscanf</b></tt> function reads characters from Scilab window. 
  </p>
  <p>
    The <tt><b>msscanf</b></tt> function reads characters from the Scilab string <tt><b>str</b></tt>.
  </p>
  <p>
    The <tt><b>niter</b></tt> optional argument specifies how many time
    the format has to used. One iteration produces one line in the
    output matrix. If <tt><b>niter==-1</b></tt> the function iterates up
    to the end of file. The <tt><b>niter</b></tt> default value is 1.
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
s='1 1.3'
[n,a,b]=msscanf(s,"%i %e")
msscanf(s,"%i %e")

msscanf(" 12\n",'%c%c%c%c') //scan characters

msscanf('0xabc','%x') //scan with hexadecimal format

msscanf('012345abczoo','%[0-9abc]%s')  //[] notation

//create a file with data
u=mopen(TMPDIR+'/foo','w');
t=(0:0.1:%pi)';mfprintf(u,"%6.3f %6.3f\n",t,sin(t))
mclose(u);

//read the file line by line
u=mopen(TMPDIR+'/foo','r');
[n,a,b]=mfscanf(u,'%e %e')
l=mfscanf(u,'%e %e')
mclose(u);

//use niter
[n,Names,Ages]=msscanf(-1,["Alain 19";"Pierre 15";"Tom 12"],'%s %d')
D=msscanf(-1,["Alain 19";"Pierre 15";"Tom 12"],'%s %d')
typeof(D)
Names=D(:,1) //strings
Age=D(:,2)  //numerical values


u=mopen(TMPDIR+'/foo','w');
mfprintf(u,"%s\n",["Alain 19";"Pierre 15";"Tom 12"])
mclose(u);

u=mopen(TMPDIR+'/foo','r');
[n,Names,Ages]=mfscanf(2,u,'%s %d')
mclose(u);


 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="mclose.htm"><tt><b>mclose</b></tt></a>&nbsp;&nbsp;<a href="meof.htm"><tt><b>meof</b></tt></a>&nbsp;&nbsp;<a href="mprintf.htm"><tt><b>mfprintf</b></tt></a>&nbsp;&nbsp;<a href="fprintfMat.htm"><tt><b>fprintfMat</b></tt></a>&nbsp;&nbsp;<a href="mfscanf.htm"><tt><b>mfscanf</b></tt></a>&nbsp;&nbsp;<a href="fscanfMat.htm"><tt><b>fscanfMat</b></tt></a>&nbsp;&nbsp;<a href="mget.htm"><tt><b>mget</b></tt></a>&nbsp;&nbsp;<a href="mgetstr.htm"><tt><b>mgetstr</b></tt></a>&nbsp;&nbsp;<a href="mopen.htm"><tt><b>mopen</b></tt></a>&nbsp;&nbsp;<a href="mprintf.htm"><tt><b>mprintf</b></tt></a>&nbsp;&nbsp;<a href="mput.htm"><tt><b>mput</b></tt></a>&nbsp;&nbsp;<a href="mputstr.htm"><tt><b>mputstr</b></tt></a>&nbsp;&nbsp;<a href="mfscanf.htm"><tt><b>mscanf</b></tt></a>&nbsp;&nbsp;<a href="mseek.htm"><tt><b>mseek</b></tt></a>&nbsp;&nbsp;<a href="mtell.htm"><tt><b>mtell</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
