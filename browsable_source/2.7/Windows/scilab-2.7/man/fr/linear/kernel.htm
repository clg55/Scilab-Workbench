<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>kernel</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>kernel -  noyau  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>W=kernel(A [,tol,[,flag])  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>A  </b></tt>
    : matrice réelle ou complexe (pleine ou creuse)
  </li>
  <li><tt><b>flag  </b></tt>
    : chaîne de caractères
  </li>
  <li><tt><b>tol  </b></tt>
    : nombre réel
  </li>
  <li><tt><b>W  </b></tt>
    : matrice régulière
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    <tt><b>W=kernel(A)</b></tt> calcule le noyau de <tt><b>A</b></tt>. Les colonnes de <tt><b>W</b></tt> forment une base du noyau de <tt><b>A</b></tt>. Si A est régulière, alors W=[].
  </p>
  <p>
    <tt><b>flag</b></tt> et <tt><b>tol</b></tt> sont des paramètres optionnels : <tt><b>flag = 'qr'</b></tt> 
    or <tt><b>'svd'</b></tt> (<tt><b>'svd'</b></tt> par défaut).
  </p>
  <p>
    <tt><b>tol</b></tt> = paramètre de tolérance (de l'ordre de <tt><b>%eps</b></tt> par défaut).
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
A=rand(3,1)*rand(1,3);
A*kernel(A)
A=sparse(A);
clean(A*kernel(A))
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="colcomp.htm"><tt><b>colcomp</b></tt></a>&nbsp;&nbsp;<a href="fullrf.htm"><tt><b>fullrf</b></tt></a>&nbsp;&nbsp;<a href="fullrfk.htm"><tt><b>fullrfk</b></tt></a>&nbsp;&nbsp;<a href="linsolve.htm"><tt><b>linsolve</b></tt></a>&nbsp;&nbsp;</ul></p><H3><font color="blue">Auteur</font></H3><p><ul>F.D.;   </ul></p></body></html>
