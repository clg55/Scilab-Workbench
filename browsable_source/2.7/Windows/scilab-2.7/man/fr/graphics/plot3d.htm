<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>plot3d</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>plot3d -  représentation d'une surface en 3D  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>plot3d(x,y,z,[theta,alpha,leg,flag,ebox])  </tt></dd><dd><tt>plot3d(x,y,z,&lt;opt_args&gt;)  </tt></dd><dd><tt>  </tt></dd><dd><tt>plot3d(xf,yf,zf,[theta,alpha,leg,flag,ebox])  </tt></dd><dd><tt>plot3d(xf,yf,zf,&lt;opt_args&gt;)  </tt></dd><dd><tt>  </tt></dd><dd><tt>plot3d(xf,yf,list(zf,colors),[theta,alpha,leg,flag,ebox])  </tt></dd><dd><tt>plot3d(xf,yf,list(zf,colors),&lt;opt_args&gt;)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>x,y  </b></tt>
    : vecteurs lignes de taille n1 et n2 (coordonnées sur les axes x et y). Ces coordonnées doivent être monotones.
  </li>
  <li><tt><b>z  </b></tt>
    : matrice de taille (n1,n2). <tt><b>z(i,j)</b></tt> est la hauteur d'une surface non paramétrique au point (x(i),y(j)).
  </li>
  <li><tt><b>xf,yf,zf  </b></tt>
    : matrices de taille (nf,n).  Elles définissent les facettes utilisées pour dessiner la surface. Chaque facette <tt><b>i</b></tt> est définie par un polygone à <tt><b>nf</b></tt> points.  Les coordonnées x, y et z des points de la facette numéro i sont donnés par <tt><b>xf(:,i)</b></tt>, <tt><b>yf(:,i)</b></tt> et <tt><b>zf(:,i)</b></tt>.
  </li>
  <li><tt><b>colors  </b></tt>
    : un vecteur de taille n donnant la couleur de chaque facette ou une matrice de taille (nf,n) donnant la couleur de chaque point de la facette (dans ce cas la couleur est interpolée dans la facette) 
  </li>
  <li><tt><b>&lt;opt_args&gt;  </b></tt>
    : une suite d'affectations <tt><b>key1=value1, key2=value2</b></tt>, ... où key1,key2, ... peuvent prendre les valeurs <tt><b>theta</b></tt>,<tt><b>alpha</b></tt>,<tt><b>leg</b></tt>,<tt><b> flag</b></tt>, <tt><b>ebox</b></tt>,<tt><b>zlev</b></tt> (voir ci-dessous). Dans ce cas, l'ordre n'a pas de signification particulière.
  </li>
  <li><tt><b>theta, alpha  </b></tt>
    : valeurs réelles donnant (en degrés) les coordonnées sphériques du point d'observation.
  </li>
  <li><tt><b>leg  </b></tt>
    : chaîne de caractères définissant la légende pour chaque axe avec @ comme séparateur, par exemple "X@Y@Z".
  </li>
  <li><tt><b>flag  </b></tt>
    : un vecteur réel de taille 3 <tt><b>flag=[mode,type,box]</b></tt>.
  </li>
 <ul>
  <li><tt><b>mode  </b></tt>
    : chaîne de caractères (traitement des parties cachées).
  </li>
 <ul>
  <li><tt><b>mode&gt;0  </b></tt>
    Les parties cachées de la surface sont enlevées et le "dessous" de la surface est d'une couleur uniforme d'indice <tt><b>mode</b></tt> dans la table de couleurs courante.
  </li>
  <li><tt><b>mode=0  </b></tt>
    Les parties cachées de la surface sont dessinées.
  </li>
  <li><tt><b>mode&lt;0  </b></tt>
    Uniquement le "dessous" de la surface est dessiné et rempli avec une couleur ou un motif uniforme d'indice <tt><b>-mode</b></tt>. Voir xset() pour la signification des indices. 
  </li>
 </ul>
  <li><tt><b>type  </b></tt>
    : un entier (type d'échelle).
  </li>
 <ul>
  <li><tt><b>type=0  </b></tt>
    Le dessin est fait avec l'échelle 3D courante (définie par un appel précédent à <tt><b>param3d</b></tt>, <tt><b>plot3d</b></tt>, <tt><b>contour</b></tt> ou <tt><b>plot3d1</b></tt>).
  </li>
  <li><tt><b>type=1  </b></tt>
    Échelle où la boîte 3D est utilisée en totalité, les limites sont éventuellement spécifiées par l'argument optionnel <tt><b>ebox</b></tt>.
  </li>
  <li><tt><b>type=2  </b></tt>
    Échelle où la boîte 3D est utilisée en totalité, les limites sont calculées à partir des données.
  </li>
  <li><tt><b>type=3  </b></tt>
    Échelle isométrique 3D où les bornes de la boîte 3D sont données par l'argument <tt><b>ebox</b></tt>, mode similaire à <tt><b>type=1</b></tt>
  </li>
  <li><tt><b>type=4  </b></tt>
    Échelle isométrique 3D où les bornes de la boîte 3D sont calculées à partir des données, mode similaire à <tt><b>type=2</b></tt>
  </li>
  <li><tt><b>type=5  </b></tt>
    Échelle isométrique 3D "étendue" (occupation maximum de l'espace), les bornes de la boîte 3D sont données par l'argument <tt><b>ebox</b></tt>, mode similaire à <tt><b>type=1</b></tt>
  </li>
  <li><tt><b>type=6  </b></tt>
    Échelle isométrique 3D "étendue" (occupation maximum de l'espace), les bornes de la boîte 3D sont calculées à partir des données, mode similaire à <tt><b>type=2</b></tt>.
  </li>
 </ul>
  <li><tt><b>box  </b></tt>
    : un entier (cadre autour du dessin).
  </li>
 <ul>
  <li><tt><b>box=0  </b></tt>
    Pas de cadre autour du dessin.
  </li>
  <li><tt><b>box=1  </b></tt>
    Pas implémenté pour l'instant (identique à box=0).
  </li>
  <li><tt><b>box=2  </b></tt>
    Uniquement les axes (trièdre i,j,k) sont dessinés derrière la surface
  </li>
  <li><tt><b>box=3  </b></tt>
    Une boîte est dessinée autour du dessin et les légendes des axes sont ajoutées.
  </li>
  <li><tt><b>box=4  </b></tt>
    Sont dessinés, une boîte autour du dessin, les légendes des axes et le trièdre derrière la surface (identique à mode=3 + mode=2) 
  </li>
 </ul>
 </ul>
  <li><tt><b>ebox  </b></tt>
    : utilisé quand <tt><b>type</b></tt> dans <tt><b>flag</b></tt> vaut 1. Spécifie les limites de la boîte 3D du dessin sous forme du vecteur <tt><b>[xmin,xmax,ymin,ymax,zmin,zmax]</b></tt>.
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    <tt><b>plot3d(x,y,z,[theta,alpha,leg,flag,ebox])</b></tt> dessine la surface non-paramétrique
    <tt><b>z=f(x,y)</b></tt>.
  </p>
  <p>
    <tt><b>plot3d(xf,yf,zf,[theta,alpha,leg ,flag,ebox])</b></tt> dessine une surface
    définie par un ensemble de facettes. On peut représenter des surfaces multiples
    <tt><b>xf</b></tt>, <tt><b>yf</b></tt> et <tt><b>zf</b></tt> en assemblant les matrices sous la forme
    <tt><b>[xf1 xf2 ...]</b></tt>, <tt><b>[yf1 yf2 ...]</b></tt> et <tt><b>[zf1 zf2 ...]</b></tt>.
  </p>
  <p>
    On peut donner une couleur individuelle à chaque facette en mettant <tt><b>list(zf,colors)</b></tt> à la place de <tt><b>zf</b></tt>, où <tt><b>colors</b></tt> est un vecteur de taille <tt><b>n</b></tt>. Si <tt><b>colors(i)</b></tt> est
    positif il donne la couleur de la facette <tt><b>i</b></tt> et le contour de la facette est dessiné avec le style courant de ligne et de couleur.
    Si <tt><b>colors(i)</b></tt> est négatif, la couleur d'indice <tt><b>-colors(i)</b></tt> est utilisée et
    la frontière de la facette n'est pas dessinée. Utiliser <tt><b>xset()</b></tt> pour voir les indices des couleurs.
  </p>
  <p>
    Il est aussi possible d'avoir des couleurs interpolées sur les facettes. Pour cela remplacer <tt><b>colors</b></tt> par une matrice de taille nfxn donnant la couleur de chaque point des facettes.
    Dans ce cas les valeurs positives signifient que le contour des facettes n'est pas dessiné.
  </p>
  <p>
    Les arguments optionnels <tt><b>theta,alpha,leg ,flag,ebox</b></tt>, peuvent être passés
    sous la forme <tt><b>key1=value1,
    key2=value2</b></tt>, ... Dans ce cas, l'ordre n'a pas de signification.
  </p>
  <p>
  </p>
  <p>
  </p>
  <p>
    Utiliser éventuellement la fonction <tt><b>genfac3d</b></tt> pour calculer les facettes (à 4 points)
    de la surface non-paramétrique <tt><b>z=f(x,y)</b></tt>. <tt><b>eval3dp</b></tt> peut être utilisée pour les surfaces
    paramétriques. 
  </p>
  <p>
    Taper <tt><b>plot3d()</b></tt> pour voir une démonstration de la fonction.
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
// simple surface z=f(x,y)
t=[0:0.3:2*%pi]'; z=sin(t)*cos(t');
plot3d(t,t,z)
// même surface en utilisant genfac3d au préalable
[xx,yy,zz]=genfac3d(t,t,z);
xbasc()
plot3d(xx,yy,zz)
// surfaces multiples
xbasc()
plot3d([xx xx],[yy yy],[zz 4+zz])
// surfaces multiples utilisant des couleurs
xbasc()
plot3d([xx xx],[yy yy],list([zz zz+4],[4*ones(1,400) 5*ones(1,400)]))
// changement du point de vue et des légendes
xbasc()
plot3d(1:10,1:20,10*rand(10,20),35,45,"X@Y@Z",[2,2,3])
// une sphère
deff("[x,y,z]=sph(alp,tet)",["x=r*cos(alp).*cos(tet)+orig(1)*ones(tet)";..
  "y=r*cos(alp).*sin(tet)+orig(2)*ones(tet)";..
  "z=r*sin(alp)+orig(3)*ones(tet)"]);
r=1; orig=[0 0 0];
[xx,yy,zz]=eval3dp(sph,linspace(-%pi/2,%pi/2,40),linspace(0,%pi*2,20));
xbasc();plot3d(xx,yy,zz)

xbasc();xset('colormap',hotcolormap(128));
r=0.3;orig=[1.5 0 0];
[xx1,yy1,zz1]=eval3dp(sph,linspace(-%pi/2,%pi/2,40),linspace(0,%pi*2,20));
cc=(xx+zz+2)*32;cc1=(xx1-orig(1)+zz1/r+2)*32;   
xbasc();plot3d1([xx xx1],[yy yy1],list([zz,zz1],[cc cc1]),70,80)

xbasc();plot3d1([xx xx1],[yy yy1],list([zz,zz1],[cc cc1]),theta=70,alpha=80,flag=[5,6,3])
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="eval3dp.htm"><tt><b>eval3dp</b></tt></a>&nbsp;&nbsp;<a href="genfac3d.htm"><tt><b>genfac3d</b></tt></a>&nbsp;&nbsp;<a href="geom3d.htm"><tt><b>geom3d</b></tt></a>&nbsp;&nbsp;<a href="param3d.htm"><tt><b>param3d</b></tt></a>&nbsp;&nbsp;<a href="plot3d1.htm"><tt><b>plot3d1</b></tt></a>&nbsp;&nbsp;<a href="xset.htm"><tt><b>xset</b></tt></a>&nbsp;&nbsp;</ul></p><H3><font color="blue">Auteur</font></H3><p><ul>J.Ph.C.  </ul></p></body></html>
