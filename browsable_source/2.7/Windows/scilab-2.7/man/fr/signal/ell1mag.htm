<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>ell1mag</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>ell1mag -  magnitude of elliptic filter  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[v]=ell1mag(eps,m1,z)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>eps  </b></tt>
    : passband ripple=<tt><b>1/(1+eps^2)</b></tt>
  </li>
  <li><tt><b>m1  </b></tt>
    : stopband ripple=<tt><b>1/(1+(eps^2)/m1)</b></tt>
  </li>
  <li><tt><b>z  </b></tt>
    : sample vector of values in the complex plane
  </li>
  <li><tt><b>v  </b></tt>
    : elliptic filter values at sample points
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    Function used for squared magnitude of an elliptic filter.
    Usually <tt><b>m1=eps*eps/(a*a-1)</b></tt>. Returns 
    <tt><b>v=real(ones(z)./(ones(z)+eps*eps*s.*s))</b></tt> for <tt><b>s=%sn(z,m1)</b></tt>.
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
deff('[alpha,beta]=alpha_beta(n,m,m1)',...
'if 2*int(n/2)=n then, beta=K1; else, beta=0;end;...
alpha=%k(1-m1)/%k(1-m);')
epsilon=0.1;A=10;  //ripple parameters
m1=(epsilon*epsilon)/(A*A-1);n=5;omegac=6;
m=find_freq(epsilon,A,n);omegar = omegac/sqrt(m)
%k(1-m1)*%k(m)/(%k(m1)*%k(1-m))-n   //Check...
[alpha,beta]=alpha_beta(n,m,m1)
alpha*%asn(1,m)-n*%k(m1)      //Check
sample=0:0.01:20;
//Now we map the positive real axis into the contour...
z=alpha*%asn(sample/omegac,m)+beta*ones(sample);
plot(sample,ell1mag(epsilon,m1,z))
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="buttmag.htm"><tt><b>buttmag</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
