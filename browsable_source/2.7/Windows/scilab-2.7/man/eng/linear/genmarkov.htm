<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>genmarkov</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>genmarkov -  generates random markov matrix with recurrent and transient classes  </b></p><H3><font color="blue">Calling Sequence</font></H3><dl><dd><tt>M=genmarkov(rec,tr)  </tt></dd><dd><tt>M=genmarkov(rec,tr,flag)  </tt></dd></dl><H3><font color="blue">Parameters</font></H3><ul><ul>
  <li><tt><b>rec  </b></tt>
    : integer row vector (its dimension is the number of recurrent classes).
  </li>
  <li><tt><b>tr  </b></tt>
    : integer (number of transient states)
  </li>
  <li><tt><b>M  </b></tt>
    : real Markov matrix. Sum of entries in each row should add to one.
  </li>
  <li><tt><b>flag  </b></tt>
    : string <tt><b>'perm'</b></tt>. If given, a random permutation of the states is done.
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    Returns in M a random Markov transition probability matrix
    with <tt><b>size(rec,1)</b></tt> recurrent classes with <tt><b>rec(1),...rec($)</b></tt> 
    entries respectively and tr transient states.
  </p>
  </dl><H3><font color="blue">Examples</font></H3><ul><pre>
//P has two recurrent classes (with 2 and 1 states) 2 transient states
P=genmarkov([2,1],2,'perm')
[perm,rec,tr,indsRec,indsT]=classmarkov(P);
P(perm,perm)
 </pre></ul><H3><font color="blue">See Also</font></H3><p><ul><a href="classmarkov.htm"><tt><b>classmarkov</b></tt></a>&nbsp;&nbsp;<a href="eigenmarkov.htm"><tt><b>eigenmarkov</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
