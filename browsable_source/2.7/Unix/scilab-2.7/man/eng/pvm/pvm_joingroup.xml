<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>pvm_joingroup  </TITLE>
  <TYPE>Scilab function  </TYPE>
  <DATE>May 1998  </DATE>
  <SHORT_DESCRIPTION name="pvm_joingroup"> enrolls the calling process in a named group.  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[inum] = pvm_joingroup(group)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>group  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : string, string group name of an existing group.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>inum  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : integer, instance number returned by the routine.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    <VERB>pvm_joingroup</VERB> 
    enrolls the calling task in
    the group named <VERB>group</VERB>
    and returns the instance number
    of this task in this group.
  </P> 
  <P>
    The returned value will be &gt;= 0 if 
    the call is successful and will be 
    will be &lt; 0 if some error occurs. 
  </P>
  <P>
    Instance numbers start at 0 and count up.
    When using groups a (group, inum) pair uniquely identifies a
    PVM process.
    This is consistent with the PVM 2.4 naming schemes.
    If a task leaves a group by calling pvm_lvgroup
    and later rejoins the same group,
    the task is not guaranteed to get the same instance number.
    PVM attempts to reuse old instance numbers, so when a task
    joins a group it will get the lowest available instance number.
    A task can be a member of multiple groups simultaneously.
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
inum =  pvm_joingroup( "worker" )
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>pvm_lvgroup</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
