<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>linmeq  </TITLE>
  <TYPE>Scilab Function  </TYPE>
  <DATE>2001  </DATE>
  <SHORT_DESCRIPTION name="linmeq"> Sylvester and Lyapunov equations solver  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[X(,sep)] = linmeq(task,A,(B,)C,flag,trans(,schur))  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>task  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : integer option to determine the equation type:
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    1 : solve the Sylvester equation (1a) or (1b);
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    2 : solve the Lyapunov equation (2a) or (2b);
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    3 : solve for the Cholesky factor op(X) the Lyapunov equation (3a) or (3b).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>A  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : real matrix
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>B  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : real matrix
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>C  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : real matrix
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (optional) integer vector of length 3 or 2 containing options.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>task  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 1 : flag has length 3
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>flag(1)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 0 : solve the continuous-time equation (1a); otherwise, solve the discrete-time equation (1b).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag(2)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 1 : A is (quasi) upper triangular;
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag(2)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 2 : A is upper Hessenberg;
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>otherwise,  </PARAM_NAME>
  <PARAM_DESCRIPTION>
     A is in general form.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag(3)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 1 : B is (quasi) upper triangular;
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag(3)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 2 : B is upper Hessenberg;
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>otherwise,  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    B is in general form.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>task  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 2 : flag has length 2
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>flag(1) = 0 : solve continuous-time equation (2a);  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    otherwise, solve discrete-time equation (2b).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag(2) = 1 : A is (quasi) upper triangular;  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    otherwise, A is in general form.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>task  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 3 : flag has length 2
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>flag(1)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 0 : solve continuous-time equation (3a); otherwise, solve discrete-time equation (3b).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag(2)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    = 1 : A is (quasi) upper triangular; otherwise, A is in general form.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
 </PARAM_INDENT>
  <P>
    Default:    flag(1) = 0, flag(2) = 0 (, flag(3) = 0).
  </P>
  <PARAM_ITEM>
  <PARAM_NAME>trans  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (optional) integer specifying a transposition option.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    0 : solve the equations (1) - (3) with op(M) = M.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    1 : solve the equations (1) - (3) with op(M) = M&apos;.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    2 : solve the equations (1) with op(A) = A&apos;;  op(B) = B;
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>=  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    3 : solve the equations (1) with op(A) = A;   op(B) = B&apos;.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <P>
    Default:    trans = 0.
  </P>
  <PARAM_ITEM>
  <PARAM_NAME>schur  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (optional) integer specifying whether the Hessenberg-Schur or Schur method should be used. Available for task = 1. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>= 1 : Hessenberg-Schur method (one matrix is reduced  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    to Schur form).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>= 2 : Schur method (two matrices are reduced to Schur  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    form).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <P>
    Default:    schur = 1.
  </P>
  <PARAM_ITEM>
  <PARAM_NAME>X  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    :
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sep  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (optional) estimator of Sep(op(A),-op(A)&apos;) for (2.a) or Sepd(A,A&apos;) for (2.b).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    linmeq  function for solving Sylvester and Lyapunov equations
    using SLICOT routines SB04MD, SB04ND, SB04PD, SB04QD, 
    SB04RD, SB03MD, and SB03OD.
  </P>
  <VERBATIM><![CDATA[
       [X] = linmeq(1,A,B,C,flag,trans,schur)
   [X,sep] = linmeq(2,A,C,flag,trans)
       [X] = linmeq(2,A,C,flag,trans)
       [X] = linmeq(3,A,C,flag,trans)
   ]]></VERBATIM>
  <P>
    linmeq solves various Sylvester and Lyapunov matrix equations:
  </P>
  <VERBATIM><![CDATA[
        op(A)*X + X*op(B) = C,                           (1a)

        op(A)*X*op(B) + X = C,                           (1b)

        op(A)'*X + X*op(A) = C,                          (2a)

        op(A)'*X*op(A) - X = C,                          (2b)

        op(A)'*(op(X)'*op(X)) + (op(X)'*op(X))*op(A) =
                              -  op(C)'*op(C),           (3a)

        op(A)'*(op(X)'*op(X))*op(A) - op(X)'*op(X) =
                                    - op(C)'*op(C),      (3b)
   ]]></VERBATIM>
  <P>
    where op(M) = M, or M&apos;.
  </P>
  <P>
     
  </P>
  <P>
  </P>
  </DESCRIPTION>
  <ITEMIZE label='COMMENTS'>
  <ITEM label='1.'>
For equation (1a) or (1b), when schur = 1, the Hessenberg-Schur  method is used, reducing one matrix to Hessenberg form and the other one to a real Schur form. Otherwise, both matrices are reduced to real Schur forms. If one or both matrices are already reduced to Schur/Hessenberg forms, this could be specified by flag(2) and flag(3). For general matrices, the Hessenberg-Schur method could be  significantly more efficient than the Schur method.

  </ITEM>
  <ITEM label='2.'>
For equation (2a) or (2b), matrix C is assumed symmetric.

  </ITEM>
  <ITEM label='3.'>
For equation (3a) or (3b), matrix A must be stable or convergent, respectively.

  </ITEM>
  <ITEM label='4.'>
For equation (3a) or (3b), the computed matrix X is the Cholesky factor of the solution, i.e., the real solution is op(X)&apos;*op(X), where X is an upper triangular matrix. 

  </ITEM>
  </ITEMIZE>

  <ITEMIZE label='REVISIONS'>
  <P>
    V. Sima, Katholieke Univ. Leuven, Belgium, May 1999, May, Sep. 2000. V. Sima, University of Bucharest, Romania, May 2000.
  </P>
  </ITEMIZE>
  <EXAMPLE><![CDATA[
//(1a)
n=40;m=30;
A=rand(n,n);C=rand(n,m);B=rand(m,m);
X = linmeq(1,A,B,C);
norm(A*X+X*B-C,1)
//(1b)
flag=[1,0,0]
X = linmeq(1,A,B,C,flag);
norm(A*X*B+X-C,1)
//(2a)
A=rand(n,n);C=rand(A);C=C+C';
X = linmeq(2,A,C);
norm(A'*X + X*A -C,1)
//(2b)
X = linmeq(2,A,C,[1 0]);
norm(A'*X*A -X-C,1)
//(3a)
A=rand(n,n);
A=A-(max(real(spec(A)))+1)*eye(); //shift eigenvalues
C=rand(A);
X=linmeq(3,A,C);
norm(A'*X'*X+X'*X*A +C'*C,1)
//(3b)
A = [-0.02, 0.02,-0.10, 0.02,-0.03, 0.12;
      0.02, 0.14, 0.12,-0.10,-0.02,-0.14;     
     -0.10, 0.12, 0.05, 0.03,-0.04,-0.04;     
      0.02,-0.10, 0.03,-0.06, 0.08, 0.11;      
     -0.03,-0.02,-0.04, 0.08, 0.14,-0.07;   
      0.12,-0.14,-0.04, 0.11,-0.07, 0.04]    

C=rand(A);
X=linmeq(3,A,C,[1 0]);
norm(A'*X'*X*A - X'*X +C'*C,1)
 ]]>
</EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>sylv</LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK>lyap</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
  <AUTHOR>H. Xu, TU Chemnitz, FR Germany, Dec. 1998.  </AUTHOR>

</MAN>
