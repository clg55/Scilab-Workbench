<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
    <title>Metanet: graph and network toolbox</title>
</head>
<body bgcolor="FFFFFF">
<BR><A HREF="add_edge.htm">add_edge</A> - adds an edge or an arc between two nodes
<BR><A HREF="add_node.htm">add_node</A> - adds a disconnected node to a graph
<BR><A HREF="adj_lists.htm">adj_lists</A> - computes adjacency lists
<BR><A HREF="arc_graph.htm">arc_graph</A> - graph with nodes corresponding to arcs
<BR><A HREF="arc_number.htm">arc_number</A> - number of arcs of a graph
<BR><A HREF="articul.htm">articul</A> - finds one or more articulation points
<BR><A HREF="bandwr.htm">bandwr</A> - bandwidth reduction for a sparse matrix
<BR><A HREF="best_match.htm">best_match</A> - best matching of a graph
<BR><A HREF="chain_struct.htm">chain_struct</A> - chained structure from adjacency lists of a graph
<BR><A HREF="check_graph.htm">check_graph</A> - checks a Scilab graph list
<BR><A HREF="circuit.htm">circuit</A> - finds a circuit or the rank function in a directed graph
<BR><A HREF="con_nodes.htm">con_nodes</A> - set of nodes of a connected component
<BR><A HREF="connex.htm">connex</A> - connected components
<BR><A HREF="contract_edge.htm">contract_edge</A> - contracts edges between two nodes
<BR><A HREF="convex_hull.htm">convex_hull</A> - convex hull of a set of points in the plane
<BR><A HREF="cycle_basis.htm">cycle_basis</A> - basis of cycle of a simple undirected graph
<BR><A HREF="delete_arcs.htm">delete_arcs</A> - deletes all the arcs or edges between a set of nodes
<BR><A HREF="delete_nodes.htm">delete_nodes</A> - deletes nodes
<BR><A HREF="edge_number.htm">edge_number</A> - number of edges of a graph
<BR><A HREF="edit_graph.htm">edit_graph</A> - graph and network graphical editor
<BR><A HREF="edit_graph_menus.htm">edit_graph_menus</A> - edit_graph menus description
<BR><A HREF="find_path.htm">find_path</A> - finds a path between two nodes
<BR><A HREF="gen_net.htm">gen_net</A> - interactive or random generation of a network
<BR><A HREF="girth.htm">girth</A> - girth of a directed graph
<BR><A HREF="glist.htm">glist</A> - graph list creation
<BR><A HREF="graph-list.htm">graph-list</A> - description of graph list
<BR><A HREF="graph_2_mat.htm">graph_2_mat</A> - node-arc or node-node incidence matrix of a graph
<BR><A HREF="graph_center.htm">graph_center</A> - center of a graph
<BR><A HREF="graph_complement.htm">graph_complement</A> - complement of a graph
<BR><A HREF="graph_diameter.htm">graph_diameter</A> - diameter of a graph
<BR><A HREF="graph_power.htm">graph_power</A> - kth power of a directed 1-graph
<BR><A HREF="graph_simp.htm">graph_simp</A> - converts a graph to a simple undirected graph
<BR><A HREF="graph_sum.htm">graph_sum</A> - sum of two graphs
<BR><A HREF="graph_union.htm">graph_union</A> - union of two graphs
<BR><A HREF="hamilton.htm">hamilton</A> - hamiltonian circuit of a graph
<BR><A HREF="is_connex.htm">is_connex</A> - connectivity test
<BR><A HREF="knapsack.htm">knapsack</A> - solves a 0-1 multiple knapsack problem
<BR><A HREF="line_graph.htm">line_graph</A> - graph with nodes corresponding to edges
<BR><A HREF="load_graph.htm">load_graph</A> - loads a graph
<BR><A HREF="make_graph.htm">make_graph</A> - makes a graph list
<BR><A HREF="mat_2_graph.htm">mat_2_graph</A> - graph from node-arc or node-node incidence matrix
<BR><A HREF="max_cap_path.htm">max_cap_path</A> - maximum capacity path
<BR><A HREF="max_clique.htm">max_clique</A> - maximum clique of a graph
<BR><A HREF="max_flow.htm">max_flow</A> - maximum flow between two nodes
<BR><A HREF="mesh2d.htm">mesh2d</A> - triangulation of n points in the plane
<BR><A HREF="min_lcost_cflow.htm">min_lcost_cflow</A> - minimum linear cost constrained flow
<BR><A HREF="min_lcost_flow1.htm">min_lcost_flow1</A> - minimum linear cost flow
<BR><A HREF="min_lcost_flow2.htm">min_lcost_flow2</A> - minimum linear cost flow
<BR><A HREF="min_qcost_flow.htm">min_qcost_flow</A> - minimum quadratic cost flow
<BR><A HREF="min_weight_tree.htm">min_weight_tree</A> - minimum weight spanning tree
<BR><A HREF="neighbors.htm">neighbors</A> - nodes connected to a node
<BR><A HREF="netclose.htm">netclose</A> - closes an edit_graph window
<BR><A HREF="netwindow.htm">netwindow</A> - selects the current edit_graph  window
<BR><A HREF="netwindows.htm">netwindows</A> - gets the numbers of edit_graph windows
<BR><A HREF="node_number.htm">node_number</A> - number of nodes of a graph
<BR><A HREF="nodes_2_path.htm">nodes_2_path</A> - path from a set of nodes
<BR><A HREF="nodes_degrees.htm">nodes_degrees</A> - degrees of the nodes of a graph
<BR><A HREF="path_2_nodes.htm">path_2_nodes</A> - set of nodes from a path
<BR><A HREF="perfect_match.htm">perfect_match</A> - min-cost perfect matching
<BR><A HREF="pipe_network.htm">pipe_network</A> - solves the pipe network problem
<BR><A HREF="plot_graph.htm">plot_graph</A> - general plot of a graph
<BR><A HREF="predecessors.htm">predecessors</A> - tail nodes of incoming arcs of a node
<BR><A HREF="qassign.htm">qassign</A> - solves a quadratic assignment problem
<BR><A HREF="salesman.htm">salesman</A> - solves the travelling salesman problem
<BR><A HREF="save_graph.htm">save_graph</A> - saves a graph
<BR><A HREF="shortest_path.htm">shortest_path</A> - shortest path
<BR><A HREF="show_arcs.htm">show_arcs</A> - highlights a set of arcs
<BR><A HREF="show_graph.htm">show_graph</A> - displays a graph
<BR><A HREF="show_nodes.htm">show_nodes</A> - highlights a set of nodes
<BR><A HREF="split_edge.htm">split_edge</A> - splits an edge by inserting a node
<BR><A HREF="strong_con_nodes.htm">strong_con_nodes</A> - set of nodes of a strong connected component
<BR><A HREF="strong_connex.htm">strong_connex</A> - strong connected components
<BR><A HREF="subgraph.htm">subgraph</A> - subgraph of a graph
<BR><A HREF="successors.htm">successors</A> - head nodes of outgoing arcs of a node
<BR><A HREF="supernode.htm">supernode</A> - replaces a group of nodes with a single node
<BR><A HREF="trans_closure.htm">trans_closure</A> - transitive closure
</body></html>
