<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>mlist</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>mlist -  Scilab object, matrix oriented typed list definition.  </b></p><H3><font color="blue">Calling Sequence</font></H3><dl><dd><tt>mlist(typ,a1,....an )    </tt></dd></dl><H3><font color="blue">Parameters</font></H3><ul><ul>
  <li><tt><b>typ  </b></tt>
    : vector of character strings
  </li>
  <li><tt><b>ai  </b></tt>
    : any Scilab object (<tt><b>matrix, list,string...</b></tt>).
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    mlist object are very similar to tlist objects. But if <tt><b>M</b></tt> is an
    mlist, for any index <tt><b>i</b></tt> which is not a field name, <tt><b>M(i)</b></tt> is
    not the <tt><b>i</b></tt>th field of the list but is interpreted as the <tt><b>i</b></tt>
    th entry of <tt><b>M</b></tt> seen as a vector. This is the only difference
    between  <tt><b>mlist</b></tt> and  <tt><b>tlist</b></tt>.
  </p>
  <p>
  </p>
  <p>
    mlist fields must then be designed by their names. They can also be
    handled using the <tt><b>getfield</b></tt>  and <tt><b>setfield</b></tt>  functions.
  </p>
  <p>
  </p>
  </dl><H3><font color="blue">Examples</font></H3><ul><pre>
M=mlist(['V','name','value'],['a','b','c'],[1 2 3]);
//define display
deff('%V_p(M)','disp(M.name+'':''+string(M.value))')
//define extraction operation
deff('r=%V_e(i,M)',..
'r=mlist([''V'',''name'',''value''],M.name(i),M.value(i))')
M(2) // the second entry of the vector M
M(2).value 

//define M as a tlist
M=tlist(['V','name','value'],['a','b','c'],[1 2 3]);
M(2)

M('name')

//with two  indices
M=mlist(['V','name','value'],['a','b';'c' 'd'],[1 2;3 4]);
deff('r=%V_e(varargin)',[
    'M=varargin($)';
    'H=[''V'',''name'',''value'']'
    'r=mlist(H,M.name(varargin(1:$-1)),M.value(varargin(1:$-1)))'])

M(:,2)
// multidimensionnal array
str=['a','b','c','d','e','f','g','h'];
n=hypermat([2,2,2],str);
v=hypermat([2,2,2],1:8);
M=mlist(['V','name','value'],n,v);
M(1,1:2,2)
 </pre></ul><H3><font color="blue">See Also</font></H3><p><ul><a href="tlist.htm"><tt><b>tlist</b></tt></a>&nbsp;&nbsp;<a href="list.htm"><tt><b>list</b></tt></a>&nbsp;&nbsp;<a href="overloading.htm"><tt><b>overloading</b></tt></a>&nbsp;&nbsp;<a href="getfield.htm"><tt><b>getfield</b></tt></a>&nbsp;&nbsp;<a href="setfield.htm"><tt><b>setfield</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
