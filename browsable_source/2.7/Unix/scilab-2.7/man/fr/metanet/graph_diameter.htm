<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>graph_diameter</title></head><body bgcolor="FFFFFF"><CENTER>Scilab function  </CENTER><p><b>graph_diameter -  diamètre d'un graphe  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[d,p] = graph_diameter(g)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>g  </b></tt>
    : graphe (liste) 
  </li>
  <li><tt><b>d  </b></tt>
    : entier
  </li>
  <li><tt><b>p  </b></tt>
    : vecteur ligne d'entiers
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    <tt><b>graph_diameter</b></tt> calcule le diamètre du graphe <tt><b>g</b></tt> i.e. le
    plus grand des plus courts chemins entre deux sommets. La longueur des arcs 
    est supposée entière (1 par défaut). La sortie est la valeur
    <tt><b>d</b></tt> de la longueur du
    diamètre et <tt><b>p</b></tt> est le chemin correspondant.
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
ta=[1 1 2 2 2 3 4 5 5 7 8 8 9 10 10 10 10 11 12 13 13 14 15 16 16 17 17];
he=[2 10 3 5 7 4 2 4 6 8 6 9 7 7 11 13 15 12 13  9 14 11 16 1 17 14 15];
g=make_graph('foo',0,17,ta,he);
g('node_x')=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642];
g('node_y')=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301];
g('node_diam')=[1:(g('node_number'))]+20;
show_graph(g);
[d,p] = graph_diameter(g)
show_arcs(p);
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="graph_center.htm"><tt><b>graph_center</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
