<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>time_id</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>time_id -  SISO least square identification  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[H [,err]]=time_id(n,u,y)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>n  </b></tt>
    : order of transfer
  </li>
  <li><tt><b>u  </b></tt>
    : one of the following
  </li>
 <ul>
  <li><tt><b>u1  </b></tt>
    : a vector of inputs to the system
  </li>
  <li><tt><b>"impuls"  </b></tt>
    : if y is an impulse response
  </li>
  <li><tt><b>"step"  </b></tt>
    : if y is a step response.
  </li>
 </ul>
  <li><tt><b>y  </b></tt>
    : vector of response. 
  </li>
  <li><tt><b>H  </b></tt>
    : rational function with degree n denominator and  degree n-1 numerator if y(1)==0 or rational function with degree n denominator and  numerator if y(1)&lt;&gt;0.
  </li>
  <li><tt><b>err  </b></tt>
    : <tt><b>||y - impuls(H,npt)||^2</b></tt>, where <tt><b>impuls(H,npt)</b></tt> are the <tt><b>npt</b></tt> first coefficients of impulse response of <tt><b>H</b></tt>
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    Identification of discrete time response. If <tt><b>y</b></tt> is strictly
    proper (<tt><b>y(1)=0</b></tt>) then <tt><b>time_id</b></tt> computes the least square
    solution of the linear equation:  <tt><b>Den*y-Num*u=0</b></tt> with the
    constraint  <tt><b>coeff(Den,n):=1</b></tt>. if <tt><b>y(1)~=0</b></tt> then the algorithm
    first computes the proper part solution and then add  y(1) to the solution
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
z=poly(0,'z');
h=(1-2*z)/(z^2-0.5*z+5)
rep=[0;ldiv(h('num'),h('den'),20)]; //impulse response
H=time_id(2,'impuls',rep)
//  Same example with flts and u
u=zeros(1,20);u(1)=1;
rep=flts(u,tf2ss(h));        //impulse response
H=time_id(2,u,rep)
//  step response
u=ones(1,20);
rep=flts(u,tf2ss(h));     //step response.
H=time_id(2,'step',rep)
H=time_id(3,u,rep)    //with u as input and too high order required
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="imrep2ss.htm"><tt><b>imrep2ss</b></tt></a>&nbsp;&nbsp;<a href="arl2.htm"><tt><b>arl2</b></tt></a>&nbsp;&nbsp;<a href="../arma/armax.htm"><tt><b>armax</b></tt></a>&nbsp;&nbsp;<a href="frep2tf.htm"><tt><b>frep2tf</b></tt></a>&nbsp;&nbsp;</ul></p><H3><font color="blue">Auteur</font></H3><p><ul>Serge Steer INRIA  </ul></p></body></html>
