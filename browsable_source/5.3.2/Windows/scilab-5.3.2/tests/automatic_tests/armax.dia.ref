 
getf SCI/util/testexamples.sci
 
reinit_for_test()
 
%U=mopen('SCI/tests/automatic_tests/armax_data.ref','rb');
 
//-Ex1- Arma model : y(t) = 0.2*u(t-1)+0.01*e(t-1)
 
ny = 1;
 
if load_ref('ny') then   bugmes();quit;end,
 
nu = 1;
 
if load_ref('nu') then   bugmes();quit;end,
 
sig = 0.01;
 
Arma = armac(1, [0,0.2], [0,1], ny, nu, sig);
 
if load_ref('Arma') then   bugmes();quit;end,
 
//defining the above arma model
 
u = rand(1, 1000, 'normal');//a random input sequence u
 
y = arsimul(Arma, u);//simulation of a y output sequence associated with u.
 
Armaest = armax(0, 1, y, u);//Identified model given u and y.
  Standard deviation of the estimator a :
     0.00000
  Standard deviation of the estimator b :
     0.00302 0.00302
 
Acoeff = Armaest('a');//Coefficients of the polynomial A(x)
 
Bcoeff = Armaest('b');
 
if load_ref('Bcoeff') then   bugmes();quit;end,
 
//Coefficients of the polynomial B(x)
 
Dcoeff = Armaest('d');//Coefficients of the polynomial D(x)
 
[Ax,Bx,Dx] = arma2p(Armaest);
 
if load_ref('Dx') then   bugmes();quit;end,
 
if load_ref('Bx') then   bugmes();quit;end,
 
if load_ref('Ax') then   bugmes();quit;end,
 
//Results in polynomial form.
 
 
//-Ex2- Arma1: y_t -0.8*y_{t-1} + 0.2*y_{t-2} =  sig*e(t)
 
ny = 1;
 
if load_ref('ny') then   bugmes();quit;end,
 
nu = 1;sig = 0.001;
 
// First step: simulation the Arma1 model, for that we define
 
// Arma2: y_t -0.8*y_{t-1} + 0.2*y_{t-2} = sig*u(t)
 
// with normal deviates for u(t).
 
Arma2 = armac([1,-0.8,0.2], sig, 0, ny, nu, 0);
 
//Definition of the Arma2 arma model (a model with B=sig and without noise!)
 
u = rand(1, 10000, 'normal');// An input sequence for Arma2
 
y = arsimul(Arma2, u);// y = output of Arma2 with input u
 
//                     can be seen as output of Arma1.
 
// Second step: identification. We look for an Arma model
 
// y(t) + a1*y(t-1) + a2 *y(t-2) =  sig*e(t)
 
Arma1est = armax(2, -1, y, []);
  Standard deviation of the estimator a :
     0.00000 0.30879 0.30882
 
[A,B,D] = arma2p(Arma1est);
 
if load_ref('D') then   bugmes();quit;end,
 
if load_ref('B') then   bugmes();quit;end,
 
if load_ref('A') then   bugmes();quit;end,
 
 
xdel_run(winsid());
 
 
mclose(%U);
 
