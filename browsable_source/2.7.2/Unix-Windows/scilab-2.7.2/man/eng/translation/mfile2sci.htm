<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>mfile2sci</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>mfile2sci -  Matlab M_file to scilab translation function  </b></p><H3><font color="blue">Calling Sequence</font></H3><dl><dd><tt>mfile2sci(M_file_path [,result_path [,Imode [,Recmode]]])  </tt></dd></dl><H3><font color="blue">Parameters</font></H3><ul><ul>
  <li><tt><b>M_file_path  </b></tt>
    : a character string which gives the path of Matlab M_file to translate
  </li>
  <li><tt><b>result_path  </b></tt>
    : a character string which gives the directory where the result has to be written. Default value is current directory.
  </li>
  <li><tt><b>Imode  </b></tt>
    : Boolean flag, If true mfile2sci ask user for variable type and sizes when he cannot infer them. Default value : %f 
  </li>
  <li><tt><b>Recmode  </b></tt>
    : Boolean flag, used by translatepaths function. Must be %f to translate a single mfile. 
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    mfile2sci, is Matlab M-file to Scilab function traduction tools. It
    tries whenever possible to replace call to Matlab functions by the
    equivalent scilab primitives and functions.
  </p>
  <p>
     
    To translate a Matlab M-file just enter the scilab instruction:
    mfile2sci(file)
  </p>
  <p>
    where file is a character string giving the path name of the M-file
    mfile2sci will generate three files in the same directory
  </p>
 

  <li><b>&lt;function_name&gt;.sci</b> 
    : the scilab equivalent of the m_file
  </li>

  <li><b>&lt;function_name&gt;.cat</b> 
    : the scilab help file associated to the function
  </li>

  <li><b>sci_&lt;function_name&gt;.sci</b> 
     : the scilab function required to translate the calls to this  Matlab M_file in other Matlab M_files. This function may be improved "by hand". This function only useful for translation not for use of translated functions.
  </li>
 
  <p>
    Some functions like eye, ones, size, sum,... behave differently
    according to the dimension of their arguments. When mfile2sci cannot
    infer dimensions it replaces these function call by a call to an
    emulation function named mtlb_&lt;function_name&gt;. For efficiency these
    functions may be replaced by the proper scilab equivalent instructions.
  </p>
  <p>
    Some other functions like plot, has no straightforward translation in
    scilab. They are also replaced by an emulation function named
    mtlb_&lt;function_name&gt;.
  </p>
  <p>
    When translation may be incorrect or may be improved mfile2sci adds a
    comment which began by "//!"
  </p>
  </dl><H3><font color="blue">REMARKS</font></H3><ul><p>
    This function is a still under developpement and is delivered as beta test.  Some Matlab4 basic functions are not yet translated. It is quite simple to add it. See &lt;SCIDIR&gt;/macros/m2sci/README for more details. 
  </p></ul><H3><font color="blue">KNOWN BUGS</font></H3><ul><li><b><font color="maroon">1-</font></b>
: eval function instructions passed as strings are not translated.

  </li><li><b><font color="maroon">2-</font></b>
: most of plot function are not yet translated

  </li><li><b><font color="maroon">3-</font></b>
: if, for, endded by the end of file produce an error, add the closing end's 

  </li><li><b><font color="maroon">4-</font></b>
: Loop variable of for clause is available afterwards if loops terminates     normally in matlab; it is cleared  in Scilab generated code.

  </li><li><b><font color="maroon">5-</font></b>
: inequality comparison which implies complex numbers produce a run time error such as "undefined variable : %s_2_s". User can define these operation with Matlab meaning with the following function definition:  deff('r=%s_1_s(a,b)','r=real(a)&lt;real(b)')   deff('r=%s_2_s(a,b)','r=real(a)&gt;real(b)')    deff('r=%s_3_s(a,b)','r=real(a)&lt;=real(b)')   deff('r=%s_4_s(a,b)','r=real(a)&gt;=real(b)')  

  </li><li><b><font color="maroon">6-</font></b>
: When i is a vector, Matlab allows insertions like a(i)=v for any v. In scilab v must have the same shape as a(i). This produces run time errors "submatrix incorrectly defined". Rewrite them as  a(i)=v.' .

  </li></ul><H3><font color="blue">Examples</font></H3><ul><pre>
//create a simple m_file
write(TMPDIR+'/rot90.m',['function B = rot90(A,k)'
 '[m,n] = size(A);'
 'if nargin == 1'
 '    k = 1;'
 'else'
 '    k = rem(k,4);'
 '    if k &lt; 0'
 '        k = k + 4;'
 '    end'
 'end'
 'if k == 1'
 '    A = A.'';'
 '    B = A(n:-1:1,:);'
 'elseif k == 2'
 '    B = A(m:-1:1,n:-1:1);'
 'elseif k == 3'
 '    B = A(m:-1:1,:);'
 '    B = B.'';'
 'else'
 '    B = A;'
 'end']);
// translate it dor scilab
mfile2sci(TMPDIR+'/rot90.m',TMPDIR)
// show the new code
write(%io(2),read(TMPDIR+'/rot90.sci',-1,1,'(a)'))
// get it into scilab
getf(TMPDIR+'/rot90.sci')
//execute it
m=rand(4,2);rot90(m,1)
 </pre></ul><H3><font color="blue">See Also</font></H3><p><ul><a href="translatepaths.htm"><tt><b>translatepaths</b></tt></a>&nbsp;&nbsp;</ul></p><H3><font color="blue">Author</font></H3><p><ul>Serge Steer, INRIA  </ul></p></body></html>
