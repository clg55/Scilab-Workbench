<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>sensi</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>sensi -  sensitivity functions  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>[Se,Re,Te]=sensi(G,K)  </tt></dd><dd><tt>[Si,Ri,Ti]=sensi(G,K,flag)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>G  </b></tt>
    : standard plant (<tt><b>syslin</b></tt> list)
  </li>
  <li><tt><b>K  </b></tt>
    : compensator (<tt><b>syslin</b></tt> list)
  </li>
  <li><tt><b>flag  </b></tt>
    : character string <tt><b>'o'</b></tt> (default value) or <tt><b>'i'</b></tt>
  </li>
  <li><tt><b>Se  </b></tt>
    : output sensitivity function <tt><b>(I+G*K)^-1</b></tt>
  </li>
  <li><tt><b>Re  </b></tt>
    : <tt><b>K*Se</b></tt>
  </li>
  <li><tt><b>Te  </b></tt>
    : <tt><b>G*K*Se</b></tt> (output complementary sensitivity function)
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    <tt><b>sensi</b></tt> computes sensitivity functions. If <tt><b>G</b></tt> and <tt><b>K</b></tt> are
    given in state-space form, the systems returned are generically minimal. 
    Calculation is made by <tt><b>lft</b></tt>, e.g., 
    <tt><b>Se</b></tt> can be given by the commands 
    <tt><b> P = augment(G,'S')</b></tt>, <tt><b>Se=lft(P,K)</b></tt>.
    If <tt><b>flag</b></tt> = <tt><b>'i'</b></tt>, <tt><b>[Si,Ri,Ti]=sensi(G,K,'i')</b></tt>
    returns the input sensitivity functions.
  </p>
  <pre>
[Se;Re;Te]= [inv(eye()+G*K);K*inv(eye()+G*K);G*K*inv(eye()+G*K)];
[Si;Ri;Ti]= [inv(eye()+K*G);G*inv(eye()+K*G);K*G*inv(eye()+K*G)];
   </pre>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
G=ssrand(1,1,3);K=ssrand(1,1,3);
[Se,Re,Te]=sensi(G,K);
Se1=inv(eye()+G*K);  //Other way to compute
ss2tf(Se)    //Se seen in transfer form
ss2tf(Se1)
ss2tf(Te)
ss2tf(G*K*Se1)
[Si,Ri,Ti]=sensi(G,K,'i');
w1=[ss2tf(Si);ss2tf(Ri);ss2tf(Ti)]
w2=[ss2tf(inv(eye()+K*G));ss2tf(G*inv(eye()+K*G));ss2tf(K*G*inv(eye()+K*G))];
clean(w1-w2)
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="augment.htm"><tt><b>augment</b></tt></a>&nbsp;&nbsp;<a href="lft.htm"><tt><b>lft</b></tt></a>&nbsp;&nbsp;<a href="h_cl.htm"><tt><b>h_cl</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
