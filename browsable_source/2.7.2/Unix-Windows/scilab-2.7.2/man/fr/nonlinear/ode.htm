<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>ode</title></head><body bgcolor="FFFFFF"><CENTER>Scilab Function  </CENTER><p><b>ode -  solveur d'équations différentielles ordinaires  </b></p><H3><font color="blue">Sequence d'appel</font></H3><dl><dd><tt>y=ode(y0,t0,t,f)  </tt></dd><dd><tt>[y,w,iw]=ode([type],y0,t0,t [,rtol [,atol]],f [,jac] [,w,iw])  </tt></dd><dd><tt>[y,rd,w,iw]=ode("root",y0,t0,t [,rtol [,atol]],f  [,jac],ng,g [,w,iw])  </tt></dd><dd><tt>y=ode("discrete",y0,k0,kvect,f)  </tt></dd></dl><H3><font color="blue">Parametres</font></H3><ul><ul>
  <li><tt><b>y0  </b></tt>
    : vecteur ou matrice réelle (conditions initiales).
  </li>
  <li><tt><b>t0  </b></tt>
    : réel (instant initial).
  </li>
  <li><tt><b>t  </b></tt>
    : vecteur réel (instants où la solution est renvoyée).
  </li>
  <li><tt><b>f  </b></tt>
    : fonction externe (fonction Scilab ou chaîne de caractères ou liste).
  </li>
  <li><tt><b>type  </b></tt>
    : une des chaînes de caractères : <tt><b>"adams" "stiff" "rk" "rkf" "fix" "discrete" "roots"</b></tt>
  </li>
  <li><tt><b>rtol,atol  </b></tt>
    : constantes ou vecteurs réels de même taille que <tt><b>y</b></tt>.
  </li>
  <li><tt><b>jac  </b></tt>
    : fonction externe (fonction Scilab, chaîne de caractères ou liste).
  </li>
  <li><tt><b>w,iw  </b></tt>
    : vecteurs réels
  </li>
  <li><tt><b>ng  </b></tt>
    : entier
  </li>
  <li><tt><b>g  </b></tt>
    : fonction externe (fonction Scilab, chaîne de caractères ou liste).
  </li>
  <li><tt><b>k0  </b></tt>
    : entier (instant initial). kvect : vecteur d'entiers
  </li>
 </ul></ul><H3><font color="blue">Description</font></H3><dl>
  <p>
    <tt><b>ode</b></tt> est la fonction utilisée pour approcher la solution d'une équation différentielle ordinaire (EDO) explicite du premier ordre en temps, définie par :
  </p>
  <p>
     dy/dt=f(t,y) , y(t0)=y0.
  </p>
  <p>
    Il s'agit d'une interface vers diverses librairies, en particulier ODEPACK.
    Le type du problème et la méthode utilisée dépendent de la valeur du
    premier argument optionnel <tt><b>type</b></tt> qui peut être égal à :
  </p>
 

  <li><b>&lt;aucun&gt; :</b> 
    le solveur <tt><b>lsoda</b></tt> du package ODEPACK est utilisé par défaut. Il choisit automatiquement entre un schéma prédicteur-correcteur d'Adams et un schéma adapté au systèmes raides (stiff) de type "Backward Differentiation Formula" (BDF). Initialement le schéma adapté aux système non raides est choisi puis la méthode adaptée est ensuite choisie dynamiquement. 
  </li>

  <li><b>"adams" :</b> 
    Problèmes non raides. Le solveur <tt><b>lsode</b></tt> du package ODEPACK est utilisé (schéma d'Adams).
  </li>

  <li><b>"stiff" :</b> 
    Pour les systèmes raides. Le solveur <tt><b>lsode</b></tt> du package ODEPACK est utilisé avec le schéma BDF.
  </li>

  <li><b>"rk" :</b> 
    Schéma de Runge-Kutta adaptatif d'ordre 4 (RK4).
  </li>

  <li><b>"rkf" :</b> 
    Formules de Shampine et Watts basées sur les paires de Runge-Kutta Fehlberg d'ordre 4 et 5 (RKF45). Bien pour les problèmes non raides ou moyennement raides, lorsque le calcul du second membre n'est pas trop coûteux. Cette méthode est à éviter si l'on recherche une très grande précision.
  </li>

  <li><b>"fix":</b> 
    Identique à "rkf", mais l'interface est simplifiée, i.e. uniquement <tt><b>rtol</b></tt> et <tt><b>atol</b></tt>  sont communiqués au solveur. 
  </li>

  <li><b>"root":</b> 
    Solveur d'EDO avec recherche de racines.  Le solveur <tt><b>lsodar</b></tt> du package ODEPACK est utilisé. C'est une variante de <tt><b>lsoda</b></tt> permettant la recherche d'une racine d'une fonction vectorielle donnée. Voir ode_root pour plus de détails.
  </li>

  <li><b>"discrete":</b> 
    Simulation en temps discret. Voir ode_discrete pour plus de détails.
  </li>
 
  <p>
    Ici on ne décrit l'usage de <tt><b>ode</b></tt> que pour des EDO explicites.
  </p>
  <p>
    L'appel le plus simple de <tt><b>ode</b></tt> est du type :
    <tt><b>y=ode(y0,t0,t,f)</b></tt>
    où <tt><b>y0</b></tt> est le vecteur des conditions initiales, <tt><b>t0</b></tt> est le temps initial, et <tt><b>t</b></tt> est le vecteur des instants où l'on veut une approximation de la solution. 
    <tt><b>y</b></tt> est calculée et <tt><b>y</b></tt>  est la matrice 
    <tt><b>y=[y(t(1)),y(t(2)),...]</b></tt>.
  </p>
  <p>
    Le paramètre <tt><b>f</b></tt> de <tt><b>ode</b></tt> est par exemple une fonction Scilab, dont
    la syntaxe est imposée, ou le nom d'une subroutine Fortran ou C 
    (chaîne de caractères) ou une liste.
  </p>
  <p>
    Si <tt><b>f</b></tt> est une fonction Scilab, sa syntaxe doit être :
  </p>
  <pre>
ydot = f(t,y)
   </pre>
  <p>
    où <tt><b>t</b></tt> est un scalaire (le temps) et <tt><b>y</b></tt> un vecteur (l'état).
    Cette fonction renvoie le second membre de l'équation différentielle dy/dt=f(t,y).
  </p>
  <p>
    Si <tt><b>f</b></tt> est une chaîne de caractères, elle désigne le nom d'une subroutine Fortran
    ou C, i.e. si <tt><b>ode(y0,t0,t,"fex")</b></tt> est la
    commande, alors la subroutine <tt><b>fex</b></tt> est appelée. 
    Cette routine doit avoir la liste d'appel suivante : 
    <tt><b>f(n,t,y,ydot)</b></tt>. La routine doit être liée dynamiquement à Scilab avec la fonction
    <tt><b>link</b></tt>. Voir les exemples dans les fichiers
    <tt><b>SCIDIR/routines/default/README</b></tt> et 
    <tt><b>SCIDIR/routines/default/Ex-ode.f</b></tt>.
  </p>
  <p>
    L'argument <tt><b>f</b></tt> peut aussi être une liste :
    si <tt><b>ode(y0,t0,t,lst)</b></tt>
    est la commande, alors <tt><b>lst</b></tt> doit être une liste avec la structure suivante :
  </p>
  <pre>
lst=list(f,u1,u2,...un)
   </pre>
  <p>
    où <tt><b>f</b></tt> est une fonction avec la syntaxe :
  </p>
  <pre>
ydot = f(t,y,u1,u2,...,un)
   </pre>
  <p>
    cela permet de passer des paramètres sous forme d'arguments supplémentaires de <tt><b>f</b></tt>.
  </p>
  <p>
    La fonction <tt><b>f</b></tt> peut renvoyer une matrice <tt><b>p x q</b></tt> au lieu d'un vecteur. 
    Dans ce cas, on résout le système d'EDO <tt><b>n=p+q</b></tt> 
    <tt><b>dY/dt=F(t,Y)</b></tt> où <tt><b>Y</b></tt> est une matrice <tt><b>p x q</b></tt>.
    La condition initiale <tt><b>Y0</b></tt> doit aussi être une matrice <tt><b>p x q</b></tt> matrix et le résultat renvoyé par <tt><b>ode</b></tt> est la matrice
    <tt><b>p x q(T+1)</b></tt> égale à <tt><b>[Y(t_0),Y(t_1),...,Y(t_T)]</b></tt>.
  </p>
  <p>
    Des paramètres optionnels contrôlent la tolérance du schéma :
    <tt><b>rtol</b></tt> et <tt><b>atol</b></tt> 
    sont des valeurs seuil sur les erreurs estimées (relative et absolue) 
    L'erreur estimée sur <tt><b>y(i)</b></tt> est :
  </p>
  <pre>
rtol(i)*abs(y(i))+atol(i)
   </pre>
  <p>
    Si <tt><b>rtol</b></tt> et/ou <tt><b>atol</b></tt> sont des constantes <tt><b>rtol(i)</b></tt> et/ou 
    <tt><b>atol(i)</b></tt> prennent ces valeurs. Les valeurs par défaut de <tt><b>rtol</b></tt> et <tt><b>atol</b></tt>
    sont respectivement <tt><b>rtol=1.d-5</b></tt> et <tt><b>atol=1.d-7</b></tt> pour la plupart des solveurs et <tt><b>rtol=1.d-3</b></tt> et <tt><b>atol=1.d-4</b></tt> pour <tt><b>"rfk"</b></tt> et <tt><b>"fix"</b></tt>.
  </p>
  <p>
    Pour les problèmes raides, il est recommandé de fournir la jacobienne du second membre
    sous forme de l'argument optionnel <tt><b>jac</b></tt>. Le paramètre <tt><b>jac</b></tt> de <tt><b>ode</b></tt> est par exemple une fonction Scilab, dont la syntaxe est imposée, ou le nom d'une subroutine Fortran ou C 
    (chaîne de caractères) ou une liste.
  </p>
  <p>
    Si <tt><b>jac</b></tt> est une fonction Scilab sa syntaxe doit être :
  </p>
  <pre>
J=jac(t,y)
   </pre>
  <p>
    où <tt><b>t</b></tt> est un scalaire (le temps) et <tt><b>y</b></tt> un vecteur (l'état).
    La matrice <tt><b>J</b></tt> doit renvoyer df/dx i.e. 
    <tt><b>J(k,i) = dfk /dxi</b></tt> avec <tt><b>fk</b></tt> = k-ième composante de f.
  </p>
  <p>
    Si <tt><b>f</b></tt> est une chaîne de caractères, elle désigne le nom d'une subroutine Fortran
    ou C. Cette routine doit avoir la liste d'appel suivante : 
    <tt><b>jac(n,t,y,ml,mu,J,nrpd)</b></tt>. Dans la plupart des cas il n'est pas nécessaire d'utiliser <tt><b>ml</b></tt>,
    <tt><b>mu</b></tt> et <tt><b>nrpd</b></tt> (voir les exemples dans 
    <tt><b>SCIDIR/routines/default/Ex-ode.f</b></tt>).
  </p>
  <p>
    Si <tt><b>jac</b></tt> est une liste, les mêmes conventions que pour <tt><b>f</b></tt> s'appliquent.
  </p>
  <p>
    Les arguments optionnels <tt><b>w</b></tt> et <tt><b>iw</b></tt> sont 
    des vecteurs permettant de redémarrer l'intégration au point où elle s'était arrêtée à la sortie de ode.
  </p>
  <p>
    Plus d'options peuvent être passées aux solveurs d'ODEPACK en utilisant la variable
    <tt><b>%ODEOPTIONS</b></tt>. Voir le help de odeoptions.
  </p>
  </dl><H3><font color="blue">Exemples</font></H3><ul><pre>
// EDO à une dimension
// dy/dt=y^2-y sin(t)+cos(t), y(0)=0
deff("[ydot]=f(t,y)","ydot=y^2-y*sin(t)+cos(t)")
y0=0;t0=0;t=0:0.1:%pi;
y=ode(y0,t0,t,f)
plot(t,y)
// Simulation de dx/dt = A x(t) + B u(t) avec u(t)=sin(omega*t),
// x0=[1;0]
// la solution x(t) est désirée en t=0.1, 0.2, 0.5 ,1.
// A et u sont passées dans une liste 
// et B et omega sont des variables globales
deff("[xdot]=linear(t,x,A,u)","xdot=A*x+B*u(t)")
deff("[ut]=u(t)","ut=sin(omega*t)")
A=[1 1;0 2];B=[1;1];omega=5;
ode([1;0],0,[0.1,0.2,0.5,1],list(linear,A,u))
//
// EDO matricielle
// Equation différentielle de Ricatti
// Xdot=A'*X + X*A - X'*B*X + C , X(0)=Identité
// Solution en t=[1,2] 
deff("[Xdot]=ric(t,X)","Xdot=A''*X+X*A-X''*B*X+C")   
A=[1,1;0,2]; B=[1,0;0,1]; C=[1,0;0,1];
t0=0;t=0:0.1:%pi;
X=ode(eye(A),0,t,ric)
//
// Calcul de exp(A)
A=[1,1;0,2];
deff("[xdot]=f(t,x)","xdot=A*x");
ode(eye(A),0,1,f)
ode("adams",eye(A),0,1,f)
// EDO raide, avec la jacobienne fournie
A=[10,0;0,-1];
deff("[xdot]=f(t,x)","xdot=A*x");
deff("[J]=Jacobian(t,y)","J=A")
ode("stiff",[0;1],0,1,f,Jacobian)
 </pre></ul><H3><font color="blue">Voir aussi</font></H3><p><ul><a href="ode_discrete.htm"><tt><b>ode_discrete</b></tt></a>&nbsp;&nbsp;<a href="ode_root.htm"><tt><b>ode_root</b></tt></a>&nbsp;&nbsp;<a href="dassl.htm"><tt><b>dassl</b></tt></a>&nbsp;&nbsp;<a href="impl.htm"><tt><b>impl</b></tt></a>&nbsp;&nbsp;<a href="odedc.htm"><tt><b>odedc</b></tt></a>&nbsp;&nbsp;<a href="odeoptions.htm"><tt><b>odeoptions</b></tt></a>&nbsp;&nbsp;<a href="../control/csim.htm"><tt><b>csim</b></tt></a>&nbsp;&nbsp;<a href="../control/ltitr.htm"><tt><b>ltitr</b></tt></a>&nbsp;&nbsp;<a href="../control/rtitr.htm"><tt><b>rtitr</b></tt></a>&nbsp;&nbsp;</ul></p></body></html>
