
mprintf(1)                     Scilab Function                     mprintf(1)
NAME
   mprintf  - interface to the C printf function
   mfprintf - interface to the C fprintf function
   msprintf - interface to the C sprintf function

CALLING SEQUENCE
  mfprintf(fd,format,value_1,..,value_n)
  mprintf(format,value_1,..,value_n)
  str=msprintf(format,value_1,..,value_n)

PARAMETERS

  format    : a Scilab string describing  the format to use to write  the
            remaining  operands.  The format operand follows, as close as
            possible, the C printf format operand syntax.

  value_i   : Specifies the data to be converted according to the format
            parameter.

  str       : a Scilab string.

  fd:       The fd parameter returned by the function mopen is used as a file
            descriptor (it is a positive integer). When specifying the fd
            parameter, the value -1 refers to the default file (i.e the last
            opened file).

DESCRIPTION
  The mfprintf function writes formatted operands to the stream fd. The
  argument operands are formatted under control of the format operand.

  The mprintf function writes formatted operands to the standard Scilab out-
  put (i.e the Scilab window). The  argument operands are formatted under
  control of the format operand.

  The msprintf writes formatted operands in its returned value (a Scilab
  string).  The  argument operands are formatted under control of the format
  operand. Note that, in this case, the "0 ,.." escape sequences are treated
  as a normal sequence of characters.

EXAMPLES
  mprintf('For iteration %i,\tResult is:\nalpha=%f",10,0.535)

  t=msprintf('For iteration %i, Result is: alpha=%f",10,0.535)

  mprintf('The hexadecimal value of %i is %x',123456,123456)

  x=1.23456789;
  mprintf('!%f!%15f!%.1f!%#.0f!%.13f!',x,x,x,x,x);
  x=-341.234567;
  mprintf('!%g!%15g!%.1g!%#.0g!%.13g!',x,x,x,x,x);

  x=-0.0000023456;
  mprintf('!%e!%15e!%.1e!%#.0e!%.13e!',x,x,x,x,x);

  u=mopen(TMPDIR+'/foo','w')
  t=0:0.1:2*%pi;
  for tk=t
   mfprintf(u,'time = %6.3f value = %6.3f0,tk,sin(tk)) // write a line
  end
  mclose(u) //close the result file
  unix_g('cat '+TMPDIR+'/foo')

SEE ALSO
  mclose, meof, mfprintf, fprintfMat, mfscanf, fscanfMat, mget, mgetstr,
  mopen, mprintf, mput, mputstr, mscanf, mseek, mtell
