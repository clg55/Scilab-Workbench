%!PS-Adobe-2.0
%%Creator: dvipsk 5.55a Copyright 1986, 1994 Radical Eye Software
%%Title: slides_root.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips -o slides.ps slides_root.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1995.04.24:1431
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (slides_root.dvi)
@start /Fa 39 122 df<001E1338003F137CEA7F8014FC486C5A12F313C15CA213C35C
12FFEA7F875CEA3F07EA1E0F00005BA2131F91C7FCA25B133E137E137CA213FC5BA20001
133CEBF07E14FF120301E1138014E7120713C1A2120F138114FFD81F8013005B147E000E
133C192D7EA71E>37 D<120E121FEA3F8013C0121F120F1203A312071380A2120FEA1F00
127E5A5A12700A1276A21E>39 D<130C133E137E13FCEA01F8EA03E0EA07C01380120FEA
1F00121E123E123C127C1278A312F85AA97E1278A3127C123C123E121E121FEA0F801207
13C0EA03E0EA01F8EA00FC137E133E130C0F2D77A71E>I<126012F87E127E7EEA0F80EA
07C0120313E0EA01F0120013F81378137C133CA3133E131EA9133E133CA3137C137813F8
13F01201EA03E013C01207EA0F80EA3F00127E5A5A12600F2D7BA71E>I<1370A21378A3
0060133000F0137838FC79F8EAFF7F383FFFE06C13C000071300EA01FCEA07FF001F13C0
4813E038FF7FF8EAFC7938F078780060133000001300A31370A215197C9D1E>I<131C13
3EAA007FB5FCB61280A36C1400D8003EC7FCAA131C191B7E9E1E>I<121E123FEA7F8013
C0A3123F121F12071380120FEA1F00127E5A5A12700A1076871E>I<387FFFFCB512FEA3
6C13FC17057D931E>I<123C127E12FFA4127E123C080875871E>I<141C143EA2147E147C
14FC14F8A2130114F0130314E0130714C0130F1480131F1400A25B133E137E137C13FC5B
12015BA212035B12075B120F5B121F90C7FC5A123EA2127E127C12FC5AA21270172D7DA7
1E>I<137C48B4FC4813804813C0380F83E0381F01F0EA1E00481378A248133CA348131E
AA6C133E0078133CA2007C137C003C1378003E13F8001E13F0EA1F01380F83E03807FFC0
6C13806C1300EA007C17237DA21E>I<136013F0A21201A21203120F127F12FF12FE1278
1200B3A2383FFFC04813E0A26C13C013237BA21E>I<EA01FE3807FF80001F13E04813F0
387F03F8387C00FC48133C6C133E141EA212781230C7FC143E143CA2147C14F814F01301
EB03E0EB07C0EB1F80EB3F00137E5BEA01F0485A380FC00C381F801EEA3F00387FFFFEB5
FCA26C13FC17237DA21E>I<EBFF80000713E0487F487F383F80FCEB003E141EA2121E12
0CC7123E143C147C495AEB7FF0495A14F86D7EEB00FE143E80EC0F801407A21230127812
FC140FEC1F0048133E007F13FE6CB45A6C5B6C13E00001138019237EA21E>I<EB07C049
7E131F131D133D1379A213F1A2EA01E1120313C112071381120FEA1F01121E123E123C12
7C12F8B6FC1580A26C1400380001E0A6EB3FFF491380A26D130019237EA21E>I<381FFF
F04813F8A214F0003CC7FCA913FF003F13C014E014F0EB81F8383C007C0018133CC7123E
141EA21230127812FC143E143C48137C007C13F8387F03F0383FFFE06C13C00007138038
01FE0017237DA21E>I<EB1FC0EB7FE03801FFF04813F83807F07CEA0FC0381F00FC121E
003E1378003C1330007C13001278A2EAF8FF00F31380B512E014F0EB81F838FE00FC4813
3C48133E141EA31278A2127C003C133E003E137C001E13F8EA1F83380FFFF06C13E06C13
803800FE0017237DA21E>I<137F3803FFE0487F001F13FC1380383E003E487F00787FA4
6C131E003E133E381F80FC6CB45A000313E0A2000F13F8381FC1FC383E003E487F00787F
48EB0780A50078EB0F00007C5B007E5B383F80FE6CB45A6C5B000313E0C66CC7FC19237E
A21E>56 D<13FE3803FF804813C0001F13E0383F83F0383E00F848137848137C48133CA3
143EA37E0078137E007E13FEEA3F03EA1FFF7E0003139E3801FE1EC7123E143CA2001813
7C003C1378007E13F8EB01F0387C03E0387E0FC0383FFF806C13006C5AEA03F817237DA2
1E>I<121E123FEA7F80A4EA3F00121EC7FCA9121E123F5A1380A3123F121F120F13005A
123E127E5A5A1260092176981E>59 D<383FFFFE487FB61280A26C1400C9FCA5007FB5FC
B61280A26C14006C5B190F7E981E>61 D<1220127812FCB4FC6C7E6C7EEA1FF0EA07F8EA
03FE6C7E38007FC0EB3FE0EB0FF8EB07FCEB01FE13001301EB07FCEB0FF8EB3FE0EB7FC0
3801FF00485AEA07F8EA1FF0EA3FC0485A48C7FC12FC12781220171F7DA01E>I<3801FE
183807FFBC001F13FC5AEA7F03EA7C0048137C5A143CA214186C13001278127EEA3FE0EA
1FFE380FFFC0000313E038003FF0EB03F8EB007C143C143E141E126012F0A2143E6C133C
6C137C38FF01F8EBFFF014E000F713C00061130017237DA21E>83
D<EA0FFC48B4FC4813C0487F387E07F01301383C00F8C71278EB01F813FF1207121F4813
78EA7F80EAFC0012F0A46C13F8EA7E076CB512806C14C06C13BF3903FC0F801A197D981E
>97 D<127F487EA2127F1207A6EB8FE0EBBFF8EBFFFC80EBF83F9038E00F809038C007C0
1403138015E01401A5EBC00315C0A2EBE0079038F00F809038F83F00EBFFFE5CEB9FF838
030FE01B2380A21E>I<EBFFC0000313E04813F04813F8EA1FC1EA3E01387C00F0007813
00A212F85AA57E12781430007C13787E381F81F8380FFFF06C13E06C13C0C6130015197C
981E>I<EB03F8497EA21303EB003CA613FE3803FFBC4813FC5AEA1F83EA3E0048137C12
78143C12F85AA56C137C1278A2007C13FCEA3E01EA1F876CB512C06CEBBFE06C133F3900
FC1FC01B237EA21E>I<13FE3803FF804813C04813E0381F83F0383E00F8481378007813
7C143C12F8B512FCA314F800F0C7FC7E1278007C1318003C133C123F381FC0FC380FFFF8
6C13F0000113E038007F8016197D981E>I<EB03FCEB0FFEEB1FFF5BEB3E3FEB7C1EEB78
0C1400A3387FFFF8B512FCA26C13F838007800B1383FFFF04813F8A26C13F018237FA21E
>I<127F487EA2127F1207A6EB87F0EB9FF8EBFFFC80EBFC1FEBF00F13E013C0A21380AC
397FF87FF039FFFCFFF8A2397FF87FF01D2380A21E>104 D<136013F0487EA26C5A1360
90C7FCA5EA3FF0487EA2123FEA0078B1387FFFF0B512F8A26C13F015247CA31E>I<EA7F
F0487EA2127FEA0078B3A9387FFFF8B512FCA26C13F816237CA21E>108
D<387F07F038FF9FF8EBFFFC6C7F3807FC1FEBF00F13E013C0A21380AC397FF87FF039FF
FCFFF8A2397FF87FF01D1980981E>110 D<13FE3803FF804813C04813E0381F83F0383E
00F848137C0078133CA248131EA66C133E0078133C007C137CA26C13F8381F83F0380FFF
E06C13C06C13803800FE0017197D981E>I<387F0FE038FFBFF8EBFFFC6C7F3807F83F90
38E00F809038C007C01403138015E01401A5EBC00315C0A2EBE0079038F00F809038F83F
00EBFFFE5CEB9FF8EB8FE00180C7FCA9EA7FF8487EA26C5A1B2680981E>I<387FC07F39
FFE1FF8001E713C0EA7FEF3801FFC7EC038001FCC7FC5BA25BA25BAA387FFFC0B57EA26C
5B1A197F981E>114 D<3803FEC0381FFFE05A5AEAFE03EAF001A2EB00C06C1300EA7F80
EA3FFC381FFF806C13C0C613E0EB07F0386000F800F01378A27E6C13F838FF03F0EBFFE0
14C000F713803861FE0015197C981E>I<13C0487EA6387FFFFCB512FEA26C13FC3801E0
00AB1406140FA3EBF01F3800F83EEBFFFCEB7FF8EB3FF0EB0FE018207F9F1E>I<397FC1
FF80D8FFE313C0A2D87FC11380390F007C001478138012075CEA03C0A2EBC1E0EA01E1A2
5CEA00F3A3EB7380A2137B013FC7FCA27F131EA35BA3EA787CEAFC7813F8EAF1F0B45A6C
5A5B001EC8FC1A267E981E>121 D E /Fb 11 118 df<0503B5FC94B612FE040FEDFFE0
93B812FE0303EFFFC0031F18F0037F18FE4ABAFC14075C023FDB000714FC4A02E0EB003F
91B6C8120F010302FC15014902F0814902C0163F494AEE1FF84949CA120F4949170790B5
4817015D484A1700484A18704B18204891CDFC5A5C5A5C5A5CA2485BA24EB7FC60B55AA8
95C71201A36C7FA46C7FA2807E807E807E6C80816C806C80816D7F6D7F6D6D7E6D806D14
F06D14FC010002FF5D6E02E0141F6E02FF0107B6FC020F92B8FC8014016E7E031F18F803
0318C00300EFFE00040F16E0040003FCC7FC050391C8FC585377D16D>71
D<4BB5FC033F14FC0203B712C0020F16F8027F16FF49B912C04918F8130F5B5B90BA5AA2
489138FE00074802E0EB007F4891C8120F02FC15034801F003005B4A167F48181F4A160F
4818071903735A6E705A97C7FC14F880ECFF806C14F0EDFFC016FE6CEDFFF8EFFFC06C17
F818FF6C18C06C18F019FC6C84013F717E6D846D84010384010084023F83140F020183EC
001F0300821603DC000F15801700181F060714C0180184851208001C84123E123F6D1980
13E06D5F01FC190048B494B5FC02C04B5B02F0150702FE031F5BDAFFC0027F5B03FE010F
B5FCBB5A626262001F4EC7FC000760C618F0013F17C0010394C8FCD9007F15F8020315C0
DA000701F8C9FC4A5379D15B>83 D<92B5FC021F14F049B612FE010F6F7E017F16E048B8
12F8488384DBF80F7F9126FE0001148002F06D14C002C06E13E06C90C87E496F13F001F8
6F13F85B5B496F13FCCAFCA8173F4BB6FC157F0207B7FC143F49B612E70107ECF007011F
EBFE00017F13F048B512C04891C7FC485B4813F8485B5A5C485BA2B55AA65F806C5E6E5C
6C6D5C6E49B5FC6C6D13079139FF803FF76C91B512E76C16C717876CEDFE07C615FC6D14
F0011FDAC00313F8010749C66C13F0010001E090C8FC3E437BC14D>97
D<EA3FFE487EB57EB0EEFFC0030F13FC037F13FF0281B612C0028715F0028F8102BF8191
B77E84DBC01F809126FC00018002F06D804A023F7F028080717F717F838583A2717FA31A
80A284A21AC0AC1A80A295B5FCA21A00A24D5BA25F614D5B5F4D5B6E5C6E4A5B02F891B5
5A6E01075C9126FF803F91C7FC92B65A6002BF5D029F15E002875D028392C8FC6C010014
FC6C48013F13E0C8D807FEC9FC425477D251>I<923803FFFC037FEBFFE00203B612FC02
0FEDFF80023F16E091B812FC5B13075B499026FE000F13F84901F013004901C0143F90B5
48140F4891C812034A15014849ED00F0484916301900485B5C5AA2485BA25AA35CB5FCAB
7EA280A27EA2807E19186C6D16386E16786C18F86C6D15016E15076C6D150F6C6EEC3FFC
6D6D14FF6D01F013036D01FE133F6D90B7FC6D17F8010117F06D17C0023F1600020F15FC
020315E0DA007F91C7FC030713E03E437BC149>I<383FFF804813C0B5FC14E0A414C0A2
6C1380C8FCAAEA1FFF4813804813C0B3B3B3A66C13806C1300135478D324>105
D<EA3FFE487EB51280B3B3B3B3A76C13006C5A115377D224>108
D<923807FFC0037F13FC0203B67E020F15E0023F15F891B712FE4982010717C049834949
C6804901F0011F7F49018001037F90B5C76C7F48496E7F4A8148496F138048496F13C0A2
48496F13E0A248496F13F0A24819F8A24A814819FCA4B518FEAB6C19FCA26E5DA26C19F8
A26C6D4B13F0A26C19E06E5D6C19C06E5D6C6D4B13806C6D92B512006C6D4A5B03C01307
6D01F0011F5B6D01FE90B55A010F90B712E06D5F6D5F01004CC7FC6E5D021F15F0020315
80DA007F01FCC8FC030713C047437BC152>111 D<EEFFC0D83FFE010F13FC486C017F13
FFB50081B612C0028715F0028F8102BF8191B77E84DBC03F809126FC00078002F0010180
4A6D80028080717F717F83717FA2838583A2711480A47213C0AB95B5FC1A80A35F1A00A2
4D5BA25F4D5B615F4D5B6E5C6E49B55A02F8495C6E010F5C9126FF807F91C7FC92B65A60
02BF5D029F15E002875D028392C8FC028014FC033F13E0DB07FEC9FC92CBFCAE6C90CCFC
6C5A425277C051>I<EE0FC0D83FFC14FF486C1303B5130F153F5D92B5FC5C5C5C5CA25C
4AEBC00003FCC7FCEC7FE015804AC8FC14FC5C5C5CA25CA25CB3B3A26C90C9FC6C5A2A41
77C036>114 D<D83FFE923801FFF0486C4B13F8B56C4A13FCB3B3A65FA35FA25F6C5EA2
17F76E13016CED07E76E130F6C01FCEB7FC76C90B6128717076C15FE6C15F8C615F0013F
DAC00313F8010FDA000113F09026007FF890C8FC3E4177BF51>117
D E /Fc 16 117 df<001FB912E048F0FF804819F0BB12FEF2FFC01BF01BFC1BFF881CE0
88881CFE881D804AC97E070315C0DF007F14E0081F14F0867414F8867414FC861DFE87A2
1DFFA287A6631DFEA398B5FC1DFC625014F8625014F0083F14E097B612C00707158096B7
120091BB5A6464641CC06451C7FC1BF81BE098C8FC1AF81A8007E0C9FC4ACEFCB3AF7E6C
5B6C5B606271E17B>80 D<0407B5FC4BB612FE031FEDFFE092B812FE0203EFFFC0020F18
F8023F18FE4AF0FF8049BB12C05B130F5B491A805B90B638FC000F480380EB007F03FCC8
120F4802F015034802C00300140092CA123F4849170F4A8348854A17001B7E481A3E1B1E
1B0C6E95C7FCA2808015C015F015FE6CECFFE0EEFF8017FC6CEEFFF0F0FF806C18F819FF
6C19E06C19F81AFE6C856D19C06D856D19F86D850103856D856D6C19806E19C0020F19E0
14016E6C18F0030F18F8ED007F040317FCEE001FDD007F15FE1803F0003F190F070114FF
851A3F86A286120C001E85121F13C0486C1AFE7F6D6013FE6D4E13FC14C04801F04D13F8
02FC94B5FC02FF4C14F003C0030714E003F8151FDBFF8091B612C0B700FC011F158093B9
120063636C62001F1AE0000762000162D8003F4EC7FC010F18F8010118E0D9001F178002
0104FCC8FCDA001F15E0DB001F01F8C9FC586677E36D>83 D<D83FFF070FB56C953807FF
C04801C0063F02E0061F13E0B56C4E6E4E13F08098B66C606CA114E06E5F7895B5FC6CA1
14C06E5F785F6CA114806E5F785F6CA114006E5F795E6CA15B6F4C01FB618B6C6E06F963
5001F1618B6C6E06F063504961777F6C6E6A97B500C061777F6D6D6A4F02806E93B5FC89
6D6D6A4F02006E5D896D6D6A4F496F5D6D7597C7FC814F49705C6D7561705E4F725C6D75
61704A5B7A5C6D7561704A5B7A5C6D76607091B55A7A5C6E756070495C7A91B5FC6E7560
704991C8FC7A5B6E7560704949618C6E6D7395C8FC4E49617814806E0280664E49617814
C06E02C0664E49725A8A6E02E0664E49725A8B6E02F06695B548725A8B6F6D6605F94A72
B5FC6F755E17FD94B6CA91B6FC6F755E61A26F7593C9FC61A26F755D61A26F755D61A26F
755D618C6F4B63704A725C041F91CC000F1480AC637CE1B5>87 D<0303B5FC4AB612F802
1F15FF49B812C0010F17F0013F17FC90BAFC48858686DCC01F809226F800038003800100
804AC86C7F6C01F86F7F02E08102806F148091C915C0498213F84919E001608290CAFCA9
0503B6FC040FB7FC4BB8FC153F4AB9FC140F027F15FB49B6EAF80301071500011F14F801
7F14C090B6C7FC4814FC4814F0485C4814804891C8FC5A5C5A5CB5FC5CA560A2806C5F6E
5DA26E157F6C6E91B6FC6F13036C02F0131F6C02FEEBFFFB92B612F36C17E36C17C36C17
836C17036D15FC6D15F0010F15C00103DB000114C0010002F86D1480021F90CBFC4B507A
CE5C>97 D<381FFFE0487F487FB5FCB2933801FFE0041F13FE93B612C0030715F0031F15
FC4B8192B8FC02F917C002FB8391B97E86DC803F809226F800038003C0130092C8003F7F
4A6F148002F86F14C0847214E0841BF0841BF8851BFCA285A21BFEA3851BFFAE1BFE61A4
1BFC61A21BF896B5FC1BF0601BE0604E14C06E1880606E033F14006E6C4A5B6F49B55A03
F0010F5C03FE90B65A92B85A6202FB5F02F994C7FC02F816FC6F5D6F15E06C020F15806C
D9F0034AC8FC6C49C614F0C9D80FFEC9FC506476E261>I<93381FFFFC4BB612F0030F15
FE037FEDFFC04AB812F8020717FE021FEFFF804A18C05C49BAFC5B499126FC001F148049
02E01301490280EB003F4949C8120F4949150390B500F01500F27F00484A161F484A824B
16064896C7FC4891CCFCA25A5CA25A5CA25AA35CB5FCAD6C7FA47E80A27E807EF201806C
6EEE03C06F16076C190F6C6E163F6F167F6C6EED01FF6D6D030713E06D6D151F6D6D6C14
7F6D02E00103B5FC6D02FC137F6D91B8FC7F6D19C0023F18806EEFFE00020717F8020117
C06E6C93C7FC031F15F803011580DB001F01E0C8FC4B507ACE57>I<93381FFF800303B5
12FC031FECFF80037F15F04AB712FC020782021F707E4A8391B97E4984498449DAFC0380
499126E0007F7F490280011F7F4949C76C14804949140390B54817C0484A804B6E14E048
5C487213F05D488492C914F85A5C85485B1BFCA2485B91BAFCA3BCFCA31BF81BF002F0CC
FCA580A27EA3807EA2807EA26C7FA26C6E17606F17F06C19016F16076C6E160F6C6E163F
6D6D167F6D6D923801FFF86F6C14076D02E0143F6D02F849B5FC010302FF133F6D92B7FC
6D19F06E18E0021F18806EEFFE00020317F8020017E0033F93C7FC030715FC030015C004
0701F0C8FC4E507BCE59>101 D<DC7FF0903807FFFC030FB54913FE037FDAC01F13FF4A
B612E0020715F8021F15FC4A15FE91B8FC49179F4917DF4994B6FC491580499138F8001F
4902E013074902807F90B6C77E484A8003F881484A815A4B81485CA2485CA24891C9FCA2
5C5AA25CA3B5FC5CA861A2807EA261807E8096B6FC6C80606C806F5C7E6C6E5C03FC5C6C
6E15DF6C6E6C133F6D02E0EB7F9F6D9138FC03FF6D91B6121F6D16FE7F010116FC6D16F8
023F15F06E15E0020715C002001500031F13FC030013E093C8FCA41BFEA34F13FC13E0D8
01F84D13F813FE6D6C93B512F002F0030314E002FE5DDAFFE0023F14C09226FF8001B612
8093B81200621AF862621A806C4EC7FC011F17F8010117C0D900074BC8FCDA000714C050
657ACD61>103 D<381FFFE0487F487FB5FCB294383FFF800403B512FC040F14FF043F15
C093B712F00303824B824B824B824B17805D9226FFF80315C002F9903880003FDAFBFEC7
000F14E0DAFFF8805D03C0804B17F0A292C87E5CA25CA35CB3B3AE7E6C496F14E06C4970
13C04C6376E261>I<383FFFF04813F8B512FCA214FEA314FCA26C13F86C13F0C8FCAC38
0FFFF04813F84813FC5AB3B3B3B17E6C13F86C13F0176477E32A>I<381FFFE04813F048
13F8B5FCB3B3B3B3B3A37E6C13F06C13E0156376E22A>108 D<94383FFF80261FFFE001
03B512FC486D010F14FF486D013F15C0B591B712F00303824B824B824B824B17805D9226
FFF80315C002F9903880003FDAFBFEC7000F14E0DAFFF8805D03C0804B17F0A292C87E5C
A25CA35CB3B3AE7E6C496F14E06C497013C04C4E76CD61>110 D<933807FFC093B512FE
0307ECFFC0033F15F892B712FE0203707E020F17E0023F17F84A8391B97E0103727E4991
26FC007F804902C00107804991C70001804901FC6E6C7F49496F7F4B8190B5486F7F484A
6F7F484A6F148092C97E481BC04A82481BE0A248497113F0A2481BF8A348497113FCA5B5
1AFEAC6C1BFCA26E5FA26C1BF8A36C6D94B512F0A26C1BE06E5E6C1BC06F5D6C1B806C6E
4B14006F5D6C6E4B5B6D6D4B5B6D01FE92B55A6D6D4A5C6D02E0010F5C6D02FC017F5C6D
91B85A6D96C7FC6D60023F17F86E5F020717C0020194C8FC6E6C15FC030F15E0030192C9
FCDB000713C057507BCE62>I<EF1FC0261FFFC0903801FFE0486D1307486D131FB5147F
93B5FC5D15075D5D5DA25D92B6FC14F118C002F3ECE00002F701FCC7FC16E091B512804B
C8FC15F815E05D5D92C9FCA25CA25CA35CB3B3A77E6C5B6C5B334E76CD41>114
D<92387FFFC0020FB512FE91B712E0010316FC010F16FF4917C04917F090B97E5A5AA248
6048EC800102FCC7121F4801F014034A14004849153FF00FE04A1507481703F000C096C7
FC80A2808014FCECFFC015FE6CECFFF0EEFFC017F86C16FF18C06C17F06C17FC846C836C
846C846D836D83010F836D8313016D6C82140F020182EC000FED003F04011580EE003F17
0783000882001C82123E003F837F7F6D1800D87FF893B5FC7F01FF5D02C05E02F0140702
FE021F5BB6D8E001B5FC92B75A61616C606C60000F95C7FC00015F6C6C16F8010F5E0101
1680D9001F02FCC8FCDA007F138041507BCE4B>I<903801FFFE497F49805BB3001FB812
FE4883481880BAFCA66C18006C5FD8000F0280C8FCB3B3AC82F00180F003C06D160770EB
1FE0183F9338F001FF6DECF80F93B612F0A27F6D17E019806EEDFE006E15F86E15C06E4A
C7FC020314E09126007FFCC8FC3C647CE247>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 0 576 a Fc(Signal)0 825 y(Pro)5 b(cessing)0 1074
y(With)0 1323 y(Scilab)0 2903 y Fb(Scilab)53 b(Group)p
eop
%%Page: 1 2
1 1 bop 527 724 1292 3 v 527 1645 3 922 v 550 1625 a
@beginspecial 100 @hscale 100 @vscale @setspecial
%%BeginDocument: /usr1/home/scilab-2.1/doc/signal/Nfigs_source/bode7.epsf

/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------
/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev WhiteLev le {closepath glev Setgray eofill}
	{ 0 Setgray closepath stroke} ifelse 
} def 



%------------------------------------------------------
% trace de polygones rempli ou de polylignes 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev WhiteLev le 
	{ % polygone ferme et gris
	  closepath glev Setgray eofill}
	{ glev WhiteLev 2 add ge 
	   {%polygone ferme dont on efface l'interieur 
		%(peint avec un niveau de gris en blanc)
	    closepath WhiteLev 2 mul 2 add glev sub Setgray 
		  gsave eofill grestore 
	    0 Setgray stroke}
	   {%polygone simple eventuellement ferme
	    0 Setgray closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto stroke 
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto stroke 
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	0 setgray fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	glev Setgray eofill}
	{newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath 0 Setgray stroke} ifelse 
	Cmsave1 setmatrix clear} def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show CtmRestore } def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto}
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 



%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix 
	[1 0 0 -1 0 0 ] concat 
	arg concat } def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { 2 div /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
0 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scalefont setfont
fillsolid
/WhiteLev 16 def
/localsave save def 
clear (drawbox) 4 [ 17]
[750 242 4500 1450 
] dogrey localsave restore
fillsolid
 0 [1 4] [1125.000000 14.500000 2.000000] [750 1692] drawaxis
/Times-Roman findfont 80 scalefont setfont
(-1) 704 1817 0  0.00 [704 1747 92 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 590 1937 0  0.00 [590 1827 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(0) 1852 1817 0  0.00 [1852 1747 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 1738 1937 0  0.00 [1738 1827 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(1) 2977 1817 0  0.00 [2977 1747 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 2863 1937 0  0.00 [2863 1827 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(2) 4102 1817 0  0.00 [4102 1747 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 3988 1937 0  0.00 [3988 1827 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(3) 5227 1817 0  0.00 [5227 1747 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 5113 1937 0  0.00 [5113 1827 134 140] Show
/Times-Roman findfont 80 scalefont setfont
/Times-Roman findfont 120 scalefont setfont
 -90 [10 7] [20.714286 -30.000000 2.000000] [750 1692] drawaxis
(-160) 409 1727 0  0.00 [409 1617 269 140] Show
(-150) 409 1519 0  0.00 [409 1409 269 140] Show
(-140) 409 1312 0  0.00 [409 1202 269 140] Show
(-130) 409 1105 0  0.00 [409 995 269 140] Show
(-120) 409 898 0  0.00 [409 788 269 140] Show
(-110) 409 691 0  0.00 [409 581 269 140] Show
(-100) 409 484 0  0.00 [409 374 269 140] Show
(-90) 476 277 0  0.00 [476 167 202 140] Show
750 242 4500 1450 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 452 [ 17]
[750 287 761 287 773 287 784 287 795 287 806 287 818 287 829 287 840 287 851 287 
863 287 874 287 885 287 896 288 908 288 919 288 930 288 941 288 953 288 964 288 
975 288 986 288 998 288 1009 288 1020 289 1031 289 1043 289 1054 289 1065 289 1076 289 
1088 289 1099 290 1110 290 1121 290 1133 290 1144 290 1155 290 1166 291 1178 291 1189 291 
1200 291 1211 292 1223 292 1234 292 1245 292 1256 293 1268 293 1279 293 1290 294 1301 294 
1313 294 1324 295 1335 295 1346 296 1358 296 1369 296 1380 297 1391 297 1403 298 1414 298 
1425 299 1436 300 1448 300 1459 301 1470 301 1481 302 1493 303 1504 304 1515 304 1526 305 
1538 306 1549 307 1560 308 1571 308 1583 309 1594 310 1605 311 1616 312 1628 313 1639 315 
1650 316 1661 317 1673 318 1684 319 1695 321 1706 322 1718 323 1729 325 1740 326 1751 328 
1763 329 1774 331 1785 333 1796 334 1808 336 1819 338 1830 340 1841 341 1853 343 1864 345 
1875 347 1886 349 1898 352 1909 354 1920 356 1931 358 1943 360 1954 363 1965 365 1976 367 
1988 370 1999 372 2010 375 2021 378 2033 380 2044 383 2055 385 2066 388 2078 391 2089 394 
2100 397 2111 400 2123 402 2134 405 2145 408 2156 411 2168 414 2179 417 2190 421 2201 424 
2213 427 2224 430 2235 433 2246 436 2258 440 2269 443 2280 446 2291 449 2303 453 2314 456 
2325 459 2336 463 2348 466 2359 469 2370 473 2381 476 2393 479 2404 483 2415 486 2426 490 
2438 493 2449 496 2460 500 2471 503 2483 506 2494 510 2505 513 2516 516 2528 520 2539 523 
2550 526 2561 530 2573 533 2584 536 2595 540 2606 543 2618 546 2629 549 2640 553 2651 556 
2663 559 2674 562 2685 565 2696 568 2708 571 2719 574 2730 577 2741 580 2753 583 2764 586 
2775 589 2786 592 2798 594 2809 597 2820 600 2831 602 2843 605 2854 608 2865 610 2876 613 
2888 615 2899 618 2910 620 2921 622 2933 624 2944 627 2955 629 2966 631 2978 633 2989 635 
3000 637 3011 639 3023 641 3034 643 3045 644 3056 646 3068 648 3079 650 3090 651 3101 653 
3113 654 3124 656 3135 657 3146 658 3158 659 3169 661 3180 662 3191 663 3203 664 3214 665 
3225 666 3236 667 3248 668 3259 669 3270 670 3281 670 
] dogrey localsave restore
/localsave save def 
clear (drawpoly) 350 [17]
[3293 671 3304 672 3315 672 3326 673 3338 673 3349 674 3360 674 3371 675 3383 675 3394 675 
3405 676 3416 676 3428 676 3439 676 3450 676 3461 676 3473 676 3484 676 3495 676 3506 676 
3518 676 3529 675 3540 675 3551 675 3563 674 3574 674 3585 673 3596 672 3608 672 3619 671 
3630 670 3641 669 3653 668 3664 667 3675 666 3686 665 3698 664 3709 662 3720 661 3731 659 
3743 657 3754 656 3765 654 3776 652 3788 649 3799 647 3810 644 3821 642 3833 639 3844 636 
3855 633 3866 629 3878 625 3889 621 3900 617 3911 613 3923 608 3934 603 3945 597 3956 591 
3968 585 3979 578 3990 571 4001 563 4013 554 4024 546 4035 536 4046 527 4058 517 4069 507 
4080 498 4091 489 4103 483 4114 479 4125 479 4136 483 4148 492 4159 504 4170 519 4181 536 
4193 553 4204 572 4215 590 4226 608 4238 626 4249 643 4260 659 4271 676 4283 691 4294 706 
4305 721 4316 736 4328 749 4339 763 4350 776 4361 789 4373 802 4384 814 4395 826 4406 838 
4418 850 4429 861 4440 873 4451 884 4463 895 4474 906 4485 916 4496 927 4508 937 4519 947 
4530 958 4541 968 4553 978 4564 988 4575 997 4586 1007 4598 1017 4609 1026 4620 1036 4631 1045 
4643 1055 4654 1064 4665 1074 4676 1083 4688 1092 4699 1101 4710 1110 4721 1119 4733 1128 4744 1137 
4755 1146 4766 1155 4778 1164 4789 1173 4800 1182 4811 1191 4823 1199 4834 1208 4845 1217 4856 1226 
4868 1234 4879 1243 4890 1252 4901 1260 4913 1269 4924 1278 4935 1286 4946 1295 4958 1303 4969 1312 
4980 1321 4991 1329 5003 1338 5014 1346 5025 1355 5036 1363 5048 1372 5059 1380 5070 1388 5081 1397 
5093 1405 5104 1414 5115 1422 5126 1431 5138 1439 5149 1448 5160 1456 5171 1464 5183 1473 5194 1481 
5205 1489 5216 1498 5228 1506 5239 1515 5250 1523 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
[20 50 20 50 ] 0 setdash
/localsave save def 
clear (drawsegs) 24 [ 0]
[750 449 5250 449 750 656 5250 656 750 863 5250 863 750 1071 5250 1071 750 1278 5250 1278 
750 1485 5250 1485 
] dogrey localsave restore
/localsave save def 
clear (drawsegs) 144 [ 0]
[750 1692 750 242 1089 1692 1089 242 1287 1692 1287 242 1427 1692 1427 242 1536 1692 1536 242 
1625 1692 1625 242 1701 1692 1701 242 1766 1692 1766 242 1824 1692 1824 242 1875 1692 1875 242 
2214 1692 2214 242 2412 1692 2412 242 2552 1692 2552 242 2661 1692 2661 242 2750 1692 2750 242 
2826 1692 2826 242 2891 1692 2891 242 2949 1692 2949 242 3000 1692 3000 242 3339 1692 3339 242 
3537 1692 3537 242 3677 1692 3677 242 3786 1692 3786 242 3875 1692 3875 242 3951 1692 3951 242 
4016 1692 4016 242 4074 1692 4074 242 4125 1692 4125 242 4464 1692 4464 242 4662 1692 4662 242 
4802 1692 4802 242 4911 1692 4911 242 5000 1692 5000 242 5076 1692 5076 242 5141 1692 5141 242 
5199 1692 5199 242 
] dogrey localsave restore
[] 0 setdash
(Magnitude  ) 2596 205 0  0.00 [2596 95 741 140] Show
( Hz ) 5457 1655 0  0.00 [5457 1545 269 140] Show
(db ) 991 218 0  0.00 [991 108 202 140] Show
/localsave save def 
clear (drawbox) 4 [ 17]
[750 2277 4500 1450 
] dogrey localsave restore
fillsolid
 0 [1 4] [1125.000000 14.500000 2.000000] [750 3727] drawaxis
/Times-Roman findfont 80 scalefont setfont
(-1) 704 3852 0  0.00 [704 3782 92 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 570 3992 0  0.00 [570 3882 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(0) 1852 3852 0  0.00 [1852 3782 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 1718 3992 0  0.00 [1718 3882 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(1) 2977 3852 0  0.00 [2977 3782 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 2843 3992 0  0.00 [2843 3882 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(2) 4102 3852 0  0.00 [4102 3782 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 3968 3992 0  0.00 [3968 3882 134 140] Show
/Times-Roman findfont 80 scalefont setfont
(3) 5227 3852 0  0.00 [5227 3782 46 90] Show
/Times-Roman findfont 120 scalefont setfont
(10) 5093 3992 0  0.00 [5093 3882 134 140] Show
/Times-Roman findfont 80 scalefont setfont
/Times-Roman findfont 120 scalefont setfont
 -90 [10 2] [72.500000 -30.000000 2.000000] [750 3727] drawaxis
(-180) 409 3762 0  0.00 [409 3652 269 140] Show
(-90) 476 3037 0  0.00 [476 2927 202 140] Show
(0) 611 2312 0  0.00 [611 2202 67 140] Show
750 2277 4500 1450 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 452 [ 17]
[750 2319 761 2319 773 2320 784 2321 795 2322 806 2324 818 2325 829 2326 840 2327 851 2328 
863 2329 874 2330 885 2332 896 2333 908 2334 919 2335 930 2337 941 2338 953 2340 964 2341 
975 2342 986 2344 998 2345 1009 2347 1020 2349 1031 2350 1043 2352 1054 2354 1065 2355 1076 2357 
1088 2359 1099 2361 1110 2363 1121 2365 1133 2367 1144 2369 1155 2371 1166 2373 1178 2375 1189 2377 
1200 2379 1211 2382 1223 2384 1234 2386 1245 2389 1256 2391 1268 2394 1279 2396 1290 2399 1301 2401 
1313 2404 1324 2407 1335 2410 1346 2413 1358 2416 1369 2418 1380 2421 1391 2425 1403 2428 1414 2431 
1425 2434 1436 2437 1448 2441 1459 2444 1470 2447 1481 2451 1493 2454 1504 2458 1515 2462 1526 2465 
1538 2469 1549 2473 1560 2477 1571 2480 1583 2484 1594 2488 1605 2492 1616 2496 1628 2500 1639 2504 
1650 2509 1661 2513 1673 2517 1684 2521 1695 2525 1706 2530 1718 2534 1729 2538 1740 2543 1751 2547 
1763 2551 1774 2556 1785 2560 1796 2564 1808 2569 1819 2573 1830 2578 1841 2582 1853 2586 1864 2591 
1875 2595 1886 2599 1898 2603 1909 2608 1920 2612 1931 2616 1943 2620 1954 2624 1965 2628 1976 2632 
1988 2636 1999 2640 2010 2644 2021 2648 2033 2651 2044 2655 2055 2658 2066 2662 2078 2665 2089 2669 
2100 2672 2111 2675 2123 2678 2134 2681 2145 2684 2156 2687 2168 2689 2179 2692 2190 2695 2201 2697 
2213 2699 2224 2702 2235 2704 2246 2706 2258 2708 2269 2709 2280 2711 2291 2713 2303 2714 2314 2716 
2325 2717 2336 2718 2348 2719 2359 2720 2370 2721 2381 2722 2393 2722 2404 2723 2415 2723 2426 2723 
2438 2724 2449 2724 2460 2724 2471 2723 2483 2723 2494 2723 2505 2722 2516 2721 2528 2721 2539 2720 
2550 2719 2561 2718 2573 2717 2584 2715 2595 2714 2606 2713 2618 2711 2629 2709 2640 2707 2651 2705 
2663 2703 2674 2701 2685 2699 2696 2697 2708 2694 2719 2692 2730 2689 2741 2687 2753 2684 2764 2681 
2775 2678 2786 2675 2798 2672 2809 2669 2820 2666 2831 2663 2843 2659 2854 2656 2865 2652 2876 2649 
2888 2645 2899 2642 2910 2638 2921 2634 2933 2630 2944 2627 2955 2623 2966 2619 2978 2615 2989 2611 
3000 2607 3011 2603 3023 2599 3034 2595 3045 2591 3056 2587 3068 2583 3079 2579 3090 2575 3101 2571 
3113 2568 3124 2564 3135 2560 3146 2556 3158 2552 3169 2548 3180 2544 3191 2541 3203 2537 3214 2533 
3225 2530 3236 2526 3248 2523 3259 2519 3270 2516 3281 2512 
] dogrey localsave restore
/localsave save def 
clear (drawpoly) 350 [17]
[3293 2509 3304 2506 3315 2503 3326 2499 3338 2496 3349 2493 3360 2490 3371 2488 3383 2485 3394 2482 
3405 2479 3416 2477 3428 2474 3439 2472 3450 2470 3461 2467 3473 2465 3484 2463 3495 2461 3506 2459 
3518 2457 3529 2456 3540 2454 3551 2453 3563 2451 3574 2450 3585 2448 3596 2447 3608 2446 3619 2445 
3630 2445 3641 2444 3653 2443 3664 2443 3675 2442 3686 2442 3698 2442 3709 2442 3720 2442 3731 2443 
3743 2443 3754 2444 3765 2445 3776 2446 3788 2448 3799 2449 3810 2451 3821 2453 3833 2456 3844 2458 
3855 2461 3866 2465 3878 2469 3889 2473 3900 2478 3911 2484 3923 2490 3934 2497 3945 2505 3956 2514 
3968 2524 3979 2536 3990 2549 4001 2564 4013 2581 4024 2602 4035 2625 4046 2652 4058 2685 4069 2722 
4080 2766 4091 2817 4103 2875 4114 2940 4125 3009 4136 3079 4148 3148 4159 3213 4170 3271 4181 3322 
4193 3366 4204 3403 4215 3436 4226 3463 4238 3487 4249 3508 4260 3525 4271 3541 4283 3555 4294 3567 
4305 3577 4316 3587 4328 3596 4339 3604 4350 3611 4361 3617 4373 3623 4384 3628 4395 3633 4406 3638 
4418 3642 4429 3646 4440 3649 4451 3653 4463 3656 4474 3659 4485 3661 4496 3664 4508 3666 4519 3669 
4530 3671 4541 3673 4553 3675 4564 3676 4575 3678 4586 3680 4598 3681 4609 3683 4620 3684 4631 3686 
4643 3687 4654 3688 4665 3689 4676 3690 4688 3692 4699 3693 4710 3694 4721 3695 4733 3695 4744 3696 
4755 3697 4766 3698 4778 3699 4789 3700 4800 3700 4811 3701 4823 3702 4834 3702 4845 3703 4856 3704 
4868 3704 4879 3705 4890 3705 4901 3706 4913 3707 4924 3707 4935 3708 4946 3708 4958 3709 4969 3709 
4980 3709 4991 3710 5003 3710 5014 3711 5025 3711 5036 3711 5048 3712 5059 3712 5070 3713 5081 3713 
5093 3713 5104 3714 5115 3714 5126 3714 5138 3715 5149 3715 5160 3715 5171 3715 5183 3716 5194 3716 
5205 3716 5216 3716 5228 3717 5239 3717 5250 3717 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
[20 50 20 50 ] 0 setdash
/localsave save def 
clear (drawsegs) 4 [ 0]
[750 3002 5250 3002 
] dogrey localsave restore
/localsave save def 
clear (drawsegs) 144 [ 0]
[750 3727 750 2277 1089 3727 1089 2277 1287 3727 1287 2277 1427 3727 1427 2277 1536 3727 1536 2277 
1625 3727 1625 2277 1701 3727 1701 2277 1766 3727 1766 2277 1824 3727 1824 2277 1875 3727 1875 2277 
2214 3727 2214 2277 2412 3727 2412 2277 2552 3727 2552 2277 2661 3727 2661 2277 2750 3727 2750 2277 
2826 3727 2826 2277 2891 3727 2891 2277 2949 3727 2949 2277 3000 3727 3000 2277 3339 3727 3339 2277 
3537 3727 3537 2277 3677 3727 3677 2277 3786 3727 3786 2277 3875 3727 3875 2277 3951 3727 3951 2277 
4016 3727 4016 2277 4074 3727 4074 2277 4125 3727 4125 2277 4464 3727 4464 2277 4662 3727 4662 2277 
4802 3727 4802 2277 4911 3727 4911 2277 5000 3727 5000 2277 5076 3727 5076 2277 5141 3727 5141 2277 
5199 3727 5199 2277 
] dogrey localsave restore
[] 0 setdash
(Phase  ) 2731 2240 0  0.00 [2731 2130 471 140] Show
( Hz ) 5457 3690 0  0.00 [5457 3580 269 140] Show
(degrees ) 822 2253 0  0.00 [822 2143 539 140] Show
 showpage

 clear end saved restore 
%%EndDocument
 @endspecial 1816 1645 V 527 1647 1292 3 v 527 1858 V
527 2779 3 922 v 1134 x @beginspecial 100 @hscale 100
@vscale @setspecial
%%BeginDocument: /usr1/home/scilab-2.1/doc/signal/Nfigs_source/kf2.epsf

/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------
/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev WhiteLev le {closepath glev Setgray eofill}
	{ 0 Setgray closepath stroke} ifelse 
} def 



%------------------------------------------------------
% trace de polygones rempli ou de polylignes 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev WhiteLev le 
	{ % polygone ferme et gris
	  closepath glev Setgray eofill}
	{ glev WhiteLev 2 add ge 
	   {%polygone ferme dont on efface l'interieur 
		%(peint avec un niveau de gris en blanc)
	    closepath WhiteLev 2 mul 2 add glev sub Setgray 
		  gsave eofill grestore 
	    0 Setgray stroke}
	   {%polygone simple eventuellement ferme
	    0 Setgray closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto stroke 
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto stroke 
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	0 setgray fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	glev Setgray eofill}
	{newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath 0 Setgray stroke} ifelse 
	Cmsave1 setmatrix clear} def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show CtmRestore } def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto}
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 



%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix 
	[1 0 0 -1 0 0 ] concat 
	arg concat } def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { 2 div /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
0 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scalefont setfont
fillsolid
/WhiteLev 16 def
/localsave save def 
clear (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey localsave restore
fillsolid
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(4.64) 636 3906 0  0.00 [636 3816 229 120] Show
(7.44) 1086 3906 0  0.00 [1086 3816 229 120] Show
(10.23) 1507 3906 0  0.00 [1507 3816 287 120] Show
(13.02) 1957 3906 0  0.00 [1957 3816 287 120] Show
(15.82) 2407 3906 0  0.00 [2407 3816 287 120] Show
(18.61) 2857 3906 0  0.00 [2857 3816 287 120] Show
(21.41) 3307 3906 0  0.00 [3307 3816 287 120] Show
(24.20) 3757 3906 0  0.00 [3757 3816 287 120] Show
(27.00) 4207 3906 0  0.00 [4207 3816 287 120] Show
(29.79) 4657 3906 0  0.00 [4657 3816 287 120] Show
(32.58) 5107 3906 0  0.00 [5107 3816 287 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(0.19) 449 3740 0  0.00 [449 3650 229 120] Show
(1.51) 449 3422 0  0.00 [449 3332 229 120] Show
(2.84) 449 3104 0  0.00 [449 3014 229 120] Show
(4.16) 449 2786 0  0.00 [449 2696 229 120] Show
(5.49) 449 2468 0  0.00 [449 2378 229 120] Show
(6.81) 449 2150 0  0.00 [449 2060 229 120] Show
(8.14) 449 1832 0  0.00 [449 1742 229 120] Show
(9.47) 449 1514 0  0.00 [449 1424 229 120] Show
(10.79) 391 1196 0  0.00 [391 1106 287 120] Show
(12.12) 391 878 0  0.00 [391 788 287 120] Show
(13.44) 391 560 0  0.00 [391 470 287 120] Show
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 6 [ 17]
[750 530 750 3710 5250 3710 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[20 50 20 50 ] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 22 [ 17]
[1289 1502 1544 1944 1820 2303 2154 2597 2460 2767 2764 2998 3075 3139 3359 3287 3757 3367 4176 3431 
4522 3570 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 22 [ 17]
[1613 1356 1446 1997 1866 2380 2088 2620 2402 2867 2704 3076 3021 3216 3436 3319 3762 3423 4184 3469 
4569 3536 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[1744 1502 1742 1434 1735 1367 1724 1301 1708 1237 1688 1176 1665 1119 1637 1065 1606 1015 1572 970 
1535 931 1495 897 1454 869 1410 848 1366 833 1321 825 1275 823 1230 829 1185 841 1141 860 
1099 885 1059 916 1021 953 985 996 953 1043 924 1096 898 1152 877 1212 859 1274 846 1339 
838 1406 833 1473 834 1541 839 1609 848 1675 862 1740 880 1802 902 1861 928 1917 958 1968 
991 2015 1027 2057 1065 2093 1106 2123 1149 2147 1193 2165 1238 2176 1283 2180 1328 2178 1374 2168 
1418 2152 1461 2130 1502 2101 1541 2066 1578 2026 1611 1980 1642 1930 1669 1875 1692 1817 1711 1755 
1726 1691 1737 1625 1743 1558 1744 1490 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[1904 1906 1902 1867 1897 1829 1888 1792 1876 1756 1860 1723 1841 1692 1819 1663 1795 1637 1768 1614 
1738 1595 1707 1578 1674 1566 1640 1557 1605 1553 1569 1552 1533 1555 1497 1562 1462 1572 1427 1587 
1394 1605 1362 1626 1332 1651 1304 1679 1278 1709 1255 1741 1235 1776 1218 1812 1205 1850 1194 1888 
1187 1927 1184 1967 1184 2006 1188 2044 1196 2081 1207 2118 1221 2152 1238 2184 1259 2214 1282 2241 
1308 2265 1337 2286 1367 2304 1400 2318 1433 2328 1468 2334 1503 2337 1539 2336 1575 2330 1611 2321 
1646 2308 1680 2291 1713 2271 1744 2248 1772 2222 1799 2193 1823 2161 1844 2127 1863 2092 1878 2055 
1890 2016 1898 1977 1903 1938 1904 1899 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[2138 2261 2137 2233 2132 2206 2124 2180 2113 2155 2099 2132 2083 2110 2064 2090 2042 2072 2018 2057 
1992 2044 1965 2034 1936 2026 1905 2021 1875 2019 1843 2020 1811 2024 1780 2030 1748 2039 1718 2051 
1688 2065 1660 2082 1633 2101 1609 2122 1586 2144 1566 2169 1548 2194 1533 2221 1521 2249 1512 2277 
1506 2305 1503 2333 1503 2362 1507 2389 1513 2416 1523 2441 1535 2465 1551 2488 1569 2508 1590 2527 
1613 2543 1638 2557 1665 2568 1693 2577 1723 2583 1753 2586 1785 2587 1817 2584 1848 2579 1880 2571 
1911 2560 1941 2547 1969 2531 1997 2513 2022 2493 2046 2471 2067 2448 2086 2423 2102 2396 2115 2369 
2126 2341 2133 2313 2137 2284 2138 2256 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[2448 2556 2447 2534 2442 2513 2435 2492 2425 2473 2412 2455 2397 2438 2379 2423 2359 2410 2337 2398 
2313 2388 2287 2381 2261 2376 2233 2373 2204 2372 2175 2373 2145 2377 2116 2382 2087 2390 2059 2400 
2031 2412 2005 2426 1981 2442 1958 2459 1937 2477 1918 2497 1902 2517 1888 2539 1877 2561 1868 2583 
1863 2606 1860 2628 1860 2650 1863 2672 1869 2692 1878 2712 1890 2731 1904 2748 1921 2764 1940 2778 
1962 2790 1985 2801 2010 2809 2036 2815 2064 2819 2092 2821 2121 2821 2150 2818 2180 2813 2209 2806 
2237 2797 2265 2786 2292 2773 2317 2758 2341 2742 2362 2724 2382 2705 2400 2684 2414 2663 2427 2642 
2436 2619 2443 2597 2447 2574 2448 2552 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[2740 2729 2738 2711 2734 2693 2727 2676 2718 2660 2705 2645 2691 2631 2674 2618 2655 2608 2634 2598 
2611 2590 2587 2585 2561 2580 2535 2578 2508 2578 2480 2579 2452 2583 2424 2588 2397 2595 2370 2604 
2344 2614 2319 2626 2296 2640 2274 2654 2254 2670 2236 2687 2220 2704 2207 2722 2197 2741 2189 2760 
2183 2779 2181 2797 2181 2816 2184 2834 2190 2851 2198 2868 2209 2883 2223 2898 2239 2911 2257 2922 
2277 2932 2299 2941 2323 2947 2348 2952 2374 2955 2401 2956 2429 2955 2457 2953 2485 2948 2512 2942 
2539 2934 2566 2924 2591 2913 2615 2900 2638 2886 2658 2871 2677 2854 2694 2837 2708 2819 2719 2801 
2729 2782 2735 2763 2739 2744 2740 2726 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[3034 2962 3032 2946 3028 2930 3022 2915 3012 2901 3001 2888 2987 2876 2970 2865 2952 2856 2932 2848 
2910 2841 2886 2836 2862 2832 2836 2831 2810 2831 2783 2832 2756 2835 2729 2840 2702 2847 2676 2855 
2651 2864 2627 2875 2605 2887 2584 2900 2565 2914 2547 2929 2532 2944 2520 2960 2509 2977 2502 2993 
2496 3010 2494 3027 2494 3043 2497 3059 2503 3074 2511 3088 2522 3102 2535 3114 2550 3126 2568 3136 
2587 3145 2609 3152 2631 3157 2656 3162 2681 3164 2707 3165 2733 3164 2760 3161 2787 3157 2814 3151 
2840 3144 2866 3135 2890 3125 2913 3114 2935 3101 2955 3088 2973 3073 2989 3058 3003 3042 3014 3026 
3023 3009 3029 2992 3033 2976 3034 2959 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[3338 3105 3337 3090 3333 3076 3327 3062 3318 3049 3306 3037 3292 3026 3276 3016 3259 3008 3239 3000 
3217 2994 3194 2990 3170 2987 3145 2985 3120 2985 3094 2987 3067 2990 3041 2994 3015 3000 2990 3008 
2965 3016 2942 3026 2920 3037 2900 3049 2881 3062 2864 3076 2849 3090 2837 3105 2827 3120 2819 3136 
2814 3151 2812 3166 2812 3181 2815 3196 2820 3210 2828 3223 2839 3235 2852 3247 2867 3257 2884 3266 
2903 3274 2924 3281 2946 3286 2969 3289 2994 3292 3019 3292 3045 3291 3072 3289 3098 3285 3124 3280 
3150 3273 3175 3265 3198 3255 3221 3245 3242 3233 3262 3221 3279 3207 3295 3193 3308 3178 3319 3163 
3328 3148 3334 3133 3337 3118 3338 3103 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[3617 3254 3616 3240 3612 3227 3606 3214 3597 3202 3586 3190 3572 3180 3556 3171 3539 3163 3519 3156 
3498 3150 3476 3146 3452 3143 3428 3141 3402 3142 3377 3143 3351 3146 3325 3150 3300 3156 3275 3163 
3251 3171 3228 3180 3206 3191 3186 3202 3168 3215 3151 3227 3137 3241 3125 3255 3115 3269 3107 3284 
3102 3298 3100 3313 3100 3327 3103 3341 3108 3354 3116 3366 3126 3378 3139 3389 3154 3399 3171 3407 
3189 3415 3210 3421 3232 3426 3255 3429 3279 3431 3304 3432 3329 3431 3355 3429 3381 3425 3407 3420 
3432 3413 3456 3406 3480 3397 3502 3387 3523 3376 3542 3364 3559 3351 3574 3338 3588 3324 3598 3310 
3607 3295 3613 3281 3616 3266 3617 3252 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[4012 3336 4011 3322 4007 3309 4001 3297 3992 3285 3981 3274 3968 3264 3952 3255 3935 3247 3915 3240 
3895 3235 3873 3231 3849 3228 3825 3227 3800 3227 3775 3228 3749 3231 3724 3235 3699 3241 3674 3247 
3650 3255 3628 3264 3606 3274 3587 3285 3568 3297 3552 3310 3538 3323 3526 3336 3516 3350 3509 3364 
3504 3378 3502 3392 3502 3406 3504 3419 3510 3432 3518 3444 3528 3455 3540 3466 3555 3475 3571 3483 
3590 3491 3610 3497 3631 3501 3654 3505 3678 3506 3703 3507 3728 3506 3754 3504 3779 3500 3804 3495 
3829 3489 3853 3482 3876 3473 3898 3464 3919 3453 3938 3441 3955 3429 3970 3416 3983 3403 3994 3389 
4002 3375 4008 3361 4011 3347 4012 3334 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[4429 3401 4427 3387 4424 3375 4417 3362 4409 3351 4398 3340 4384 3330 4369 3321 4352 3314 4333 3307 
4312 3302 4290 3298 4267 3295 4243 3294 4219 3294 4194 3295 4168 3298 4143 3302 4118 3307 4094 3314 
4070 3321 4048 3330 4027 3340 4007 3351 3989 3362 3973 3375 3959 3387 3947 3401 3937 3414 3930 3428 
3925 3442 3923 3455 3923 3469 3926 3482 3931 3494 3939 3506 3949 3517 3961 3527 3976 3536 3992 3545 
4010 3552 4030 3558 4052 3562 4074 3565 4098 3567 4122 3568 4147 3567 4173 3565 4198 3561 4223 3557 
4247 3551 4271 3543 4294 3535 4316 3525 4336 3515 4355 3504 4372 3492 4387 3479 4400 3466 4410 3453 
4419 3439 4424 3425 4428 3412 4429 3398 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 128 [ 17]
[4773 3540 4772 3527 4768 3514 4762 3502 4753 3491 4742 3480 4729 3470 4714 3462 4697 3454 4678 3448 
4657 3442 4636 3438 4613 3436 4589 3434 4564 3434 4539 3436 4514 3438 4489 3442 4465 3447 4440 3454 
4417 3462 4395 3470 4374 3480 4354 3491 4336 3502 4320 3514 4306 3527 4295 3540 4285 3553 4278 3567 
4273 3580 4271 3594 4271 3607 4274 3620 4279 3632 4286 3644 4296 3655 4309 3665 4323 3674 4339 3682 
4357 3689 4377 3695 4399 3699 4421 3703 4444 3704 4469 3705 4494 3704 4519 3702 4544 3699 4569 3694 
4593 3688 4617 3681 4639 3672 4661 3663 4681 3653 4700 3642 4717 3630 4731 3618 4744 3605 4755 3592 
4763 3578 4769 3565 4772 3551 4773 3538 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
/Symbol findfont 80 scalefont setfont
HardMark 0 16#b4 put
/localsave save def 
clear (drawpolymark) 22 [ 0]
[1289 1502 1544 1944 1820 2303 2154 2597 2460 2767 2764 2998 3075 3139 3359 3287 3757 3367 4176 3431 
4522 3570 
] dogrey localsave restore
/absolu true def
/Times-Roman findfont 100 scalefont setfont
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
/Symbol findfont 80 scalefont setfont
HardMark 0 16#c5 put
/localsave save def 
clear (drawpolymark) 22 [ 0]
[1613 1356 1446 1997 1866 2380 2088 2620 2402 2867 2704 3076 3021 3216 3436 3319 3762 3423 4184 3469 
4569 3536 
] dogrey localsave restore
/absolu true def
/Times-Roman findfont 100 scalefont setfont
[] 0 setdash
-1 -1 200000 200000 setclipzone
 showpage

 clear end saved restore 
%%EndDocument
 @endspecial 1816 2779 V 527 2781 1292 3 v eop
%%Page: 1 3
1 2 bop 945 511 a Fa(-->a=-2*)q(\045p)q(i;)q(b=)q(1;)q(c=)q(18)q(*\045)
q(pi)q(;d)q(=1)q(;)945 710 y(-->sl=sy)q(sl)q(in)q(\(')q(c')q(,a)q(,b)q
(,c)q(,d)q(\);)945 909 y(-->bode\()q(sl)q(,.)q(1,)q(10)q(0\))q(;)945
1108 y(-->s=pol)q(y\()q(0,)q('s)q('\))q(;)945 1308 y(-->S1=s+)q(2*)q
(\045p)q(i*)q(\(1)q(5+)q(10)q(0*)q(\045i)q(\);)945 1507
y(-->S2=s+)q(2*)q(\045p)q(i*)q(\(1)q(5-)q(10)q(0*)q(\045i)q(\);)945
1706 y(-->h1=1/)q(re)q(al)q(\(S)q(1*)q(S2)q(\))976 1839
y(h1)61 b(=)1433 1972 y(1)1067 2038 y(--------)q(--)q(--)q(--)q(--)q
(--)q(--)q(--)q(--)q(-)1860 2105 y(2)1067 2171 y(403666.8)q(2)34
b(+)d(188.4955)q(6s)j(+)d(s)945 2370 y(-->h1=sy)q(sl)q(in)q(\(')q(c')q
(,h)q(1\))q(;)945 2569 y(-->bode\()q(h1)q(,1)q(0,)q(10)q(00)q(,.)q(01)q
(\);)945 2769 y(-->h2=ss)q(2t)q(f\()q(sl)q(\);)945 2968
y(-->bode\()q(h1)q(*h)q(2,)q(.1)q(,1)q(00)q(0,)q(.0)q(1\))q(;)p
eop
%%Page: 1 4
1 3 bop eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
