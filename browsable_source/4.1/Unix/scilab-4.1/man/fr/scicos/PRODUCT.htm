<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Product </TITLE>
<META NAME="description" CONTENT="Product ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html4028"
  HREF="PRODUCT.htm#SECTION005412100000000000000">Library</A>
<LI><A NAME="tex2html4029"
  HREF="PRODUCT.htm#SECTION005412200000000000000">Description</A>
<LI><A NAME="tex2html4030"
  HREF="PRODUCT.htm#SECTION005412300000000000000">Dialog Box</A>
<LI><A NAME="tex2html4031"
  HREF="PRODUCT.htm#SECTION005412400000000000000">Default properties</A>
<LI><A NAME="tex2html4032"
  HREF="PRODUCT.htm#SECTION005412500000000000000">Interfacing function</A>
<LI><A NAME="tex2html4033"
  HREF="PRODUCT.htm#SECTION005412600000000000000">Computational function (type 4)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION005412000000000000000"></A><A NAME="PRODUCT"></A>
<BR>
Product 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=PRODUCT.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="144" HEIGHT="242" ALIGN="BOTTOM" BORDER="0"
 SRC="img95.gif"
 ALT="\epsfig{file=PRODUCT.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION005412100000000000000">
Library</A>
</font></H3>
Non_linear

<H3><font color="blue"><A NAME="SECTION005412200000000000000">
Description</A>
</font></H3>
The Product block performs multiplication or division of its
inputs. This block produces outputs using either element-wise or
matrix multiplication, depending on the value of the Multiplication
parameter. You specify the operations with the Number of inputs
parameter. Multiply(+1) and divide (-1) characters indicate the
operations to be performed on the inputs: 

<H3><font color="blue"><A NAME="SECTION005412300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set multiplication block parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">Number of inputs or sign vector (multiplication: + 1, division: -1)</TD>
<TD ALIGN="CENTER">[1;-1]</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>Number of inputs or sign vector : Enter the number of inputs.  
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION005412400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: no
</LI>
<LI>direct-feedthrough: yes
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 2 / -1  -1
</LI>
<LI>number/sizes of outputs: 1 / -1
</LI>
<LI>number/sizes of activation inputs: 0 / 
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: no
</LI>
<LI>discrete-time state: no
</LI>
<LI>name of computational function: <EM>product</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION005412500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/nonlinear/PRODUCT.sci</TT>

<H3><font color="blue"><A NAME="SECTION005412600000000000000">
Computational function (type 4)</A>
</font></H3>
<BR>
<PRE>#include "scicos_block.h"
#include &lt;math.h&gt;

void product(scicos_block *block,int flag)
{
  int j,k;
  if(flag==1){
    if (block-&gt;nin==1){
      block-&gt;outptr[0][0]=1.0;
      for (j=0;j&lt;block-&gt;insz[0];j++) {
	block-&gt;outptr[0][0]=block-&gt;outptr[0][0]*block-&gt;inptr[0][j];
      }
    }
    else {
      for (j=0;j&lt;block-&gt;insz[0];j++) {
	block-&gt;outptr[0][j]=1.0;
	for (k=0;k&lt;block-&gt;nin;k++) {
	  if(block-&gt;ipar[k]&gt;0){
	    block-&gt;outptr[0][j]=block-&gt;outptr[0][j]*block-&gt;inptr[k][j];
	  }else{
	    if(block-&gt;inptr[k][j]==0){
	      set_block_error(-2);
	      return;
	    }else{
	      block-&gt;outptr[0][j]=block-&gt;outptr[0][j]/block-&gt;inptr[k][j];
	    }
	  }
	}
      }
    }
  }
}
</PRE>
<HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
