<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Saturation </TITLE>
<META NAME="description" CONTENT="Saturation ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html4082"
  HREF="SATURATION.htm#SECTION005415100000000000000">Library</A>
<LI><A NAME="tex2html4083"
  HREF="SATURATION.htm#SECTION005415200000000000000">Description</A>
<LI><A NAME="tex2html4084"
  HREF="SATURATION.htm#SECTION005415300000000000000">Dialog Box</A>
<LI><A NAME="tex2html4085"
  HREF="SATURATION.htm#SECTION005415400000000000000">Default properties</A>
<LI><A NAME="tex2html4086"
  HREF="SATURATION.htm#SECTION005415500000000000000">Interfacing function</A>
<LI><A NAME="tex2html4087"
  HREF="SATURATION.htm#SECTION005415600000000000000">Computational function (type 4)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION005415000000000000000"></A><A NAME="SATURATION"></A>
<BR>
Saturation 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=SATURATION.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="img106.gif"
 ALT="\epsfig{file=SATURATION.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION005415100000000000000">
Library</A>
</font></H3>
Non_linear

<H3><font color="blue"><A NAME="SECTION005415200000000000000">
Description</A>
</font></H3>
The Saturation block imposes upper and lower bounds on a signal. When
the input signal is within the range specified by the Lower limit and
Upper limit parameters, the input signal passes through
unchanged. When the input signal is outside these bounds, the signal
is clipped to the upper or lower bound. When the Lower limit and Upper
limit parameters are set to the same value, the block outputs that
value. 

<H3><font color="blue"><A NAME="SECTION005415300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set Saturation parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">Upper limit</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">Lower limit</TD>
<TD ALIGN="CENTER">-1</TD>
</TR>
<TR><TD ALIGN="CENTER">zero crossing (0:no, 1:yes)</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>Upper limit: Specify the upper bound on the input signal. When
  the input signal to the Saturation block is above this value, the
  output of the block is clipped to this value. 
</LI>
<LI>Lower limit: Specify the lower bound on the input signal. When
  the input signal to the Saturation block is below this value, the
  output of the block is clipped to this value. 
</LI>
<LI>zero crossing : Select to enable zero crossing detection.  
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION005415400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: no
</LI>
<LI>direct-feedthrough: yes
</LI>
<LI>zero-crossing: yes
</LI>
<LI>mode: yes
</LI>
<LI>number/sizes of inputs: 1 / 1
</LI>
<LI>number/sizes of outputs: 1 / 1
</LI>
<LI>number/sizes of activation inputs: 0 / 
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: no
</LI>
<LI>discrete-time state: no
</LI>
<LI>name of computational function: <EM>satur</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION005415500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/nonlinear/SATURATION.sci</TT>

<H3><font color="blue"><A NAME="SECTION005415600000000000000">
Computational function (type 4)</A>
</font></H3>
<BR>
<PRE>#include "scicos_block.h"
#include &lt;math.h&gt;

void  satur(scicos_block *block,int flag)
{/* rpar[0]:upper limit,  rpar[1]:lower limit */
  if (flag==1){
    if (get_phase_simulation()==1||block-&gt;ng==0) {
      if (*block-&gt;inptr[0]&gt;=block-&gt;rpar[0]){
	block-&gt;outptr[0][0]=block-&gt;rpar[0];
      }else if (*block-&gt;inptr[0]&lt;=block-&gt;rpar[1]){
	block-&gt;outptr[0][0]=block-&gt;rpar[1];
      }else {
	block-&gt;outptr[0][0]=block-&gt;inptr[0][0];
      }
    }else{
      if (block-&gt;mode[0]==1){
	block-&gt;outptr[0][0]=block-&gt;rpar[0];
      }else if(block-&gt;mode[0]==2) {
	block-&gt;outptr[0][0]=block-&gt;rpar[1];
      }else{
	block-&gt;outptr[0][0]=block-&gt;inptr[0][0];
      } 
    }
  } else if (flag==9){
    block-&gt;g[0]=*block-&gt;inptr[0]-(block-&gt;rpar[0]);
    block-&gt;g[1]=*block-&gt;inptr[0]-(block-&gt;rpar[1]);
    if (get_phase_simulation()==1) {
      if (block-&gt;g[0]&gt;=0){
	block-&gt;mode[0]=1;
      }else if (block-&gt;g[1]&lt;=0){
	block-&gt;mode[0]=2;
      }else {
	block-&gt;mode[0]=3;
      }
    }
  }
}
</PRE>
<HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
