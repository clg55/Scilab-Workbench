<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Scilab </TITLE>
<META NAME="description" CONTENT="Scilab ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html4635"
  HREF="scifunc_block.htm#SECTION00574100000000000000">Library</A>
<LI><A NAME="tex2html4636"
  HREF="scifunc_block.htm#SECTION00574200000000000000">Description</A>
<LI><A NAME="tex2html4637"
  HREF="scifunc_block.htm#SECTION00574300000000000000">Dialog Box</A>
<LI><A NAME="tex2html4638"
  HREF="scifunc_block.htm#SECTION00574400000000000000">Default properties</A>
<LI><A NAME="tex2html4639"
  HREF="scifunc_block.htm#SECTION00574500000000000000">Interfacing function</A>
<LI><A NAME="tex2html4640"
  HREF="scifunc_block.htm#SECTION00574600000000000000">Computational function (type 3)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION00574000000000000000"></A><A NAME="scifunc_block"></A>
<BR>
Scilab 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=scifunc_block.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="img127.gif"
 ALT="\epsfig{file=scifunc_block.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION00574100000000000000">
Library</A>
</font></H3>
Others

<H3><font color="blue"><A NAME="SECTION00574200000000000000">
Description</A>
</font></H3>
This block can realize any type of Scicos block. The function of the
block is defined interactively using dialogue boxes and in Scilab
language. During simulation, these instructions are interpreted by
Scilab; the simulation of diagrams that include these types of blocks
is slower. For more information see Scicos reference manual.   

<H3><font color="blue"><A NAME="SECTION00574300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set scifunc_block parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">input ports sizes</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">output port sizes</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">input event ports sizes</TD>
<TD ALIGN="CENTER">[]</TD>
</TR>
<TR><TD ALIGN="CENTER">output events ports sizes</TD>
<TD ALIGN="CENTER">[]</TD>
</TR>
<TR><TD ALIGN="CENTER">initial continuous state</TD>
<TD ALIGN="CENTER">[]</TD>
</TR>
<TR><TD ALIGN="CENTER">initial discrete state</TD>
<TD ALIGN="CENTER">[]</TD>
</TR>
<TR><TD ALIGN="CENTER">System parameters vector</TD>
<TD ALIGN="CENTER">[]</TD>
</TR>
<TR><TD ALIGN="CENTER">initial firing vector (<IMG
 WIDTH="18" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="img1.gif"
 ALT="$ &lt;$">0 for no firing)</TD>
<TD ALIGN="CENTER">[]</TD>
</TR>
<TR><TD ALIGN="CENTER">is block always active (0:no, 1:yes)</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>input ports sizes: a scalar. Number of regular input ports 
</LI>
<LI>output port sizes: a scalar. Number of regular output ports 
</LI>
<LI>input event ports sizes: a scalar. Number of input event ports 
</LI>
<LI>output events ports sizes: a scalar. Number of output event ports 
</LI>
<LI>initial continuous state:a column vector. 
</LI>
<LI>initial discrete state:  a column vector. 
</LI>
<LI>System parameters vector:a string: c or d (<B>CBB</B> or <B>  DBB</B>, other  types are not supported).   
</LI>
<LI>initial firing vector :vector. Size of this vector corresponds
  to the number of event outputs. The value of the i-th entry
  specifies the time of the preprogrammed event firing on the i-th
  output event port. If less than zero, no event is preprogrammed.  
</LI>
<LI>is block always active :other dialogues are opened
  consecutively where used may input Scilab code associated with the
  computations needed (block initialization, outputs, continuous and
  discrete state, output events date, block ending)
 
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00574400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: no
</LI>
<LI>direct-feedthrough: yes
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 1 / 1
</LI>
<LI>number/sizes of outputs: 1 / 1
</LI>
<LI>number/sizes of activation inputs: 0 / 
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: no
</LI>
<LI>discrete-time state: no
</LI>
<LI>name of computational function: <EM>scifunc</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00574500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/misc/scifunc_block.sci</TT>

<H3><font color="blue"><A NAME="SECTION00574600000000000000">
Computational function (type 3)</A>
</font></H3>
<BR>
<PRE>      subroutine scifunc(mlhs,mrhs)
c     execute scilab function with mrhs input args and mlhs output
c     variables
c     input args are supposed to be stored in the top of the stack
c     at positions top-mrhs+1:top
c     function adress is given by the integer ptr in the common /scsptr/
c
c     Copyright INRIA
      include "../stack.h"
      integer ptr
      integer mlhs,mrhs
      integer iadr
      logical allowptr
C
      common /scsptr/ ptr   
c
      iadr(l) = l + l - 1
c   

C     macro execution 
C     
      pt = pt + 1
      if (pt .gt. psiz) then
        call error(26)
        goto 9999
      endif
      ids(1,pt) = lhs
      ids(2,pt) = rhs
      rstk(pt) = 1001
      lhs = mlhs
      rhs = mrhs
      niv = niv + 1
      fun = 0
      fin = ptr
C     
      icall = 5
      krec = -1
      include "../callinter.h"
 200  lhs = ids(1,pt)
      rhs = ids(2,pt)
      pt = pt - 1
      niv = niv - 1
C+    
 9999 continue
      iero=1
      niv=niv-1
      return
      end
</PRE>
<HR>

<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
