<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Discrete transfer function </TITLE>
<META NAME="description" CONTENT="Discrete transfer function ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html4964"
  HREF="DLR_f.htm#SECTION00581100000000000000">Library</A>
<LI><A NAME="tex2html4965"
  HREF="DLR_f.htm#SECTION00581200000000000000">Description</A>
<LI><A NAME="tex2html4966"
  HREF="DLR_f.htm#SECTION00581300000000000000">Dialog Box</A>
<LI><A NAME="tex2html4967"
  HREF="DLR_f.htm#SECTION00581400000000000000">Default properties</A>
<LI><A NAME="tex2html4968"
  HREF="DLR_f.htm#SECTION00581500000000000000">Interfacing function</A>
<LI><A NAME="tex2html4969"
  HREF="DLR_f.htm#SECTION00581600000000000000">Computational function (type 0)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION00581000000000000000"></A><A NAME="DLR_f"></A>
<BR>
Discrete transfer function 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=DLR_f.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="img139.gif"
 ALT="\epsfig{file=DLR_f.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION00581100000000000000">
Library</A>
</font></H3>
Linear

<H3><font color="blue"><A NAME="SECTION00581200000000000000">
Description</A>
</font></H3>
This block realizes a SISO linear system represented by its rational
transfer function (in the symbolic variable z). The rational function
must be proper.   

<H3><font color="blue"><A NAME="SECTION00581300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set discrete SISO transfer parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">Numerator (z)</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">Denominator (z)</TD>
<TD ALIGN="CENTER">1+z</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>Numerator :A polynomial in <B>z</B>. 
</LI>
<LI>Denominator : A polynomial in <B>z</B>. 
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00581400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: no
</LI>
<LI>direct-feedthrough: no
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 1 / 1
</LI>
<LI>number/sizes of outputs: 1 / 1
</LI>
<LI>number/sizes of activation inputs: 1 / 1
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: no
</LI>
<LI>discrete-time state: yes
</LI>
<LI>name of computational function: <EM>dsslti</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00581500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/linear/DLR_f.sci</TT>

<H3><font color="blue"><A NAME="SECTION00581600000000000000">
Computational function (type 0)</A>
</font></H3>
<BR>
<PRE>      subroutine dsslti(flag,nevprt,t,xd,x,nx,z,nz,tvec,ntvec,
     &amp;     rpar,nrpar,ipar,nipar,u,nu,y,ny)
c     Copyright INRIA

c     Scicos block simulator
c     discrete state space linear system simulator
c     rpar(1:nx*nx)=A
c     rpar(nx*nx+1:nx*nx+nx*nu)=B
c     rpar(nx*nx+nx*nu+1:nx*nx+nx*nu+nx*ny)=C
c
      double precision t,xd(*),x(*),z(*),tvec(*),rpar(*),u(*),y(*)
      integer flag,nevprt,nx,nz,ntvec,nrpar,ipar(*)
      integer nipar,nu,ny
      double precision w(100)
c
c
      la=1
      lb=nz*nz+la
      lc=lb+nz*nu
      if(flag.eq.4) then
         if(nz.gt.100) then
            flag=-1
            return
         endif
      elseif(flag.eq.2) then
c     x+=a*x+b*u
         call dcopy(nz,z,1,w,1)
         call dmmul(rpar(la),nz,w,nz,z,nz,nz,nz,1)
         call dmmul1(rpar(lb),nz,u,nu,z,nz,nz,nu,1)
      elseif(flag.eq.1.or.flag.eq.6) then
c     y=c*x+d*u
         ld=lc+nz*ny
         call dmmul(rpar(lc),ny,z,nz,y,ny,ny,nz,1)
         call dmmul1(rpar(ld),ny,u,nu,y,ny,ny,nu,1)
      endif
      end
</PRE>
<BR><HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
