<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>bloc2ss</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>April 1993</DATE>
  <SHORT_DESCRIPTION name="bloc2ss"> block-diagram to state-space conversion</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>[sl]=bloc2ss(blocd)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>blocd</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: list</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>sl</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: list</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P>
    Given a block-diagram representation of a linear system
    <VERB>bloc2ss</VERB> converts this representation to a state-space
    linear system.
    The first element of the list <VERB>blocd</VERB> must be the string <VERB>'blocd'</VERB>.
    Each other element of this list is itself a list of one
    the following types :</P>
    <VERBATIM>
<![CDATA[
list('transfer','name_of_linear_system')
   ]]>
    </VERBATIM>
    <VERBATIM>
<![CDATA[
list('link','name_of_link',
             [number_of_upstream_box,upstream_box_port],
             [downstream_box_1,downstream_box_1_portnumber],
             [downstream_box_2,downstream_box_2_portnumber],
             ...)
   ]]>
    </VERBATIM>
    <P>
    The strings <VERB>'transfer'</VERB> and <VERB>'links'</VERB> are keywords which
    indicate the type of element in the block diagram.</P>
    <P>
    Case 1 :  the second parameter of the list is a character string which 
    may refer (for a possible further evaluation) 
    to the Scilab name of a linear system given
    in state-space representation (<VERB>syslin</VERB> list) or in transfer
    form (matrix of rationals).</P>
    <P>
    To each transfer block is associated an integer.
    To each input and output of a transfer block is also
    associated its number, an integer (see examples)</P>
    <P>
    Case 2 :  the second kind of element in a block-diagram representation
    is a link.
    A link links one output of a block represented by the pair
    <VERB>[number_of_upstream_box,upstream_box_port]</VERB>, to different
    inputs of other blocks. Each such input is represented by 
    the pair <VERB>[downstream_box_i,downstream_box_i_portnumber]</VERB>.</P>
    <P>
    The different elements of a block-diagram can be defined
    in an arbitrary order.</P>
    <P>
    For example</P>
    <P>
    [1] <VERB>S1*S2</VERB> with unit feedback.</P>
    <P>
    There are 3 transfers <VERB>S1</VERB> (number <VERB>n_s1=2</VERB>) , <VERB>S2</VERB> (number <VERB>n_s2=3</VERB>)
    and an adder (number <VERB>n_add=4</VERB>) with symbolic transfer 
    function <VERB>['1','1']</VERB>.</P>
    <P>
    There are 4 links. The first one (named <VERB>'U'</VERB>) links the input 
    (port 0 of fictitious block -1, omitted) to port 1 of the adder.
    The second and third one link respectively (output)port 1 
    of the adder to (input)port 1 of system <VERB>S1</VERB>, and 
    (output)port 1 of <VERB>S1</VERB> to (input)port 1 of <VERB>S2</VERB>.
    The fourth link (named <VERB>'Y'</VERB>) links (output)port 1 of <VERB>S2</VERB> to 
    the output (port 0 of fictitious block -1, omitted) and to 
    (input)port 2 of the adder.</P>
    <VERBATIM>
<![CDATA[
//Initialization
syst=list('blocd'); l=1;
//
//Systems
l=l+1;n_s1=l;syst(l)=list('transfer','S1');  //System 1
l=l+1;n_s2=l;syst(l)=list('transfer','S2');  //System 2
l=l+1;n_adder=l;syst(l)=list('transfer',['1','1']);  //adder
//
//Links
// Inputs  -1 --> input 1
l=l+1;syst(l)=list('link','U1',[-1],[n_adder,1]);
// Internal 
l=l+1;syst(l)=list('link',' ',[n_adder,1],[n_s1,1]);
l=l+1;syst(l)=list('link',' ',[n_s1,1],[n_s2,1]);
// Outputs // -1 -> output 1
l=l+1;syst(l)=list('link','Y',[n_s2,1],[-1],[n_adder,2]);
   ]]>
    </VERBATIM>
    <P>
    With <VERB>s=poly(0,'s');S1=1/(s+1);S2=1/s;</VERB> the result of the evaluation call
    <VERB>sl=bloc2ss(syst);</VERB> is a state-space representation for
    <VERB>1/(s^2+s-1)</VERB>.</P>
    <P>
    [2] LFT example</P>
    <VERBATIM>
<![CDATA[
//Initialization
syst=list('blocd'); l=1;
//
//System (2x2 blocks plant)
l=l+1;n_s=l;syst(l)=list('transfer',['P11','P12';'P21','P22']); 
// 
//Controller
l=l+1;n_k=l;syst(l)=list('transfer','k');
// 
//Links
l=l+1;syst(l)=list('link','w',[-1],[n_s,1]);
l=l+1;syst(l)=list('link','z',[n_s,1],[-1]);
l=l+1;syst(l)=list('link','u',[n_k,1],[n_s,2]);
l=l+1;syst(l)=list('link','y',[n_s,2],[n_k,1]);
   ]]>
    </VERBATIM>
    <P>
    With</P>
    <VERBATIM>
<![CDATA[
P=syslin('c',A,B,C,D);
P11=P(1,1); 
P12=P(1,2);
P21=P(2,1); 
P22=P(2,2);
K=syslin('c',Ak,Bk,Ck,Dk);
   ]]>
    </VERBATIM>
    <P><VERB>bloc2exp(syst)</VERB>
    returns the evaluation the lft of <VERB>P</VERB>
    and <VERB>K</VERB>.</P>
  </DESCRIPTION>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>bloc2exp</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
  <AUTHOR>S. S., F. D. (INRIA)  </AUTHOR>
</MAN>
