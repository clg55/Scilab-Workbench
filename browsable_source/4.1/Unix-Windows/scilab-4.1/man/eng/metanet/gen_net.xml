<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>gen_net</TITLE>
  <TYPE>Scilab function</TYPE>
  <DATE>September 1996</DATE>
  <SHORT_DESCRIPTION name="gen_net"> interactive or random generation of a network</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>g = gen_net(name,directed,v)  </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>g = gen_net()  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>name</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: string, the name of the graph</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>directed</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:  integer, 0 (undirected graph) or 1 (directed graph)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>v</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: row vector with 12 values for defining the network</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>g</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: graph list</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P><VERB>gen_net</VERB> generates a network <VERB>g</VERB>.
    The arguments are the name of the graph, a flag equal to 0
    (undirected graph) or  to 1 (directed graph) and a vector describing
    the network (see below).</P>
    <P>
    If no argument are given, a dialog box for the definition
    of all the arguments is opened.</P>
    <P><VERB>v</VERB> must be a row vector with 12 values.
    The meaning of the values are:</P>
    <P>
    Seed for random: used for initialization of random generation</P>
    <P>
    Number of nodes</P>
    <P>
    Number of sources</P>
    <P>
    Number of sinks</P>
    <P>
    Minimum cost</P>
    <P>
    Maximum cost</P>
    <P>
    Input supply</P>
    <P>
    Output supply</P>
    <P>
    Minimum capacity</P>
    <P>
    Maximum capacity</P>
    <P>
    Percentage of edges with costs: between 0 and 100</P>
    <P>
    Percentage of edges with capacities: between 0 and 100</P>
    <P>
    The cost of edges without cost are put to minimum cost.
    The maximum capacity of edges without capacity are put to maximum upply</P>
    <P>
    The result is a network <VERB>g</VERB> built on a planar connected graph, by using a
    triangulation method. Moreover, computations are made in order to have
    a coherent network. Values of costs and maximum capacities are
    put on the edges. Minimum capacities are reduced to 0.</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
v=[1,10,2,1,0,10,100,100,0,100,50,50];
g=gen_net('foo',1,v);
show_graph(g)
// generating using dialogs
g=gen_net();
show_graph(g)
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>mesh2d</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
