<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>

  <TITLE>contour2d</TITLE>

  <TYPE>Scilab Function</TYPE>

  <DATE>April 1993</DATE>

  <SHORT_DESCRIPTION name="contour2d">level curves of a surface on a 2D
  plot</SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>contour2d(x,y,z,nz,[style,strf,leg,rect,nax])</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>contour2d(x,y,z,nz,&lt;opt_args&gt;)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>x,y</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: two real row vectors of size n1 and n2: the grid.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>z</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: real matrix of size (n1,n2), the values of the function on the
	    grid or a  Scilab function which defines the surface  <VERB>z=f(x,y)</VERB>. </SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>nz</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: the level values or the number of levels.</SP>

          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>-</PARAM_NAME>

              <PARAM_DESCRIPTION>
                <SP>If <VERB>nz</VERB> is an integer, its value gives the
                number of level curves equally spaced from zmin to zmax as
                follows:</SP>

                <VERBATIM>z= zmin + (1:nz)*(zmax-zmin)/(nz+1)</VERBATIM>

                <P>Note that the <VERB>zmin</VERB> and <VERB>zmax</VERB>
                levels are not drawn (generically they are reduced to points)
                but they can be added with</P>

                <VERBATIM>[im,jm] = find(z == zmin); // or zmax
plot2d(x(im)',y(jm)',-9,"000")</VERBATIM>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>

            <PARAM_ITEM>
              <PARAM_NAME>-</PARAM_NAME>

              <PARAM_DESCRIPTION>
                <SP>If <VERB>nz</VERB> is a vector, <VERB>nz(i)</VERB> gives
                the value of the ith level curve.</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>&lt;opt_args&gt;</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: This represents a sequence of statements 
          <VERB>key1=value1,key2=value2</VERB>,... where <VERB>key1</VERB>,
          <VERB>key2,...</VERB> can be one of the following: style, leg, rect,
          nax, strf or axesflag and frameflag (see <LINK>plot2d</LINK>)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>style,strf,leg,rect,nax</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: see <LINK>plot2d</LINK>. The argument <VERB>style</VERB> gives
          the dash styles or colors which are to be used for level curves. It
          must have the same size as the number of levels.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>

  <DESCRIPTION>
    <P><VERB>contour2d</VERB> draws level curves of a surface
    <VERB>z=f(x,y)</VERB> on a 2D plot. The values of <VERB>f(x,y)</VERB> are
    given by the matrix <VERB>z</VERB> at the grid points defined by
    <VERB>x</VERB> and <VERB>y</VERB>.</P>

    <P>You can change the format of the floating point number printed on the
    levels by using <VERB>xset("fpf",string)</VERB> where <VERB>string</VERB>
    gives the format in C format syntax (for example
    <VERB>string="%.3f"</VERB>). Use <VERB>string=""</VERB> to switch back to
    default format and Use <VERB>string=" "</VERB> to suppress printing. This
    last feature is useful in conjunction with <LINK>legends</LINK> to display
    the level numbers in a legend and not directly onto the level curves as 
    usual (see Examples).</P>

    <P>The optional arguments <VERB>style,strf,leg,rect,nax</VERB>, can be
    passed by a sequence of statements <VERB>key1=value1, key2=value2</VERB>,
    ... where keys may be
    <VERB>style</VERB>,<VERB>strf</VERB>,<VERB>leg</VERB>,<VERB>rect</VERB>,<VERB>nax</VERB>.
    In this case, the order has no special meaning.</P>

    <P>Use <VERB>contour</VERB> to draw levels curves on a 3D surface.</P>
  </DESCRIPTION>

  <EXAMPLE><![CDATA[
contour2d(1:10,1:10,rand(10,10),5,rect=[0,0,11,11])
// changing the format of the printing of the levels
xset("fpf","%.2f")
clf()
contour2d(1:10,1:10,rand(10,10),5,rect=[0,0,11,11])
 
// now an example with level numbers drawn in a legend
// Caution there are a number of tricks...
x = linspace(0,4*%pi,80);
z = cos(x')*cos(x);
clf(); f=gcf();
xset("fpf"," ")  // trick 1: this implies that the level numbers are not
                 //          drawn on the level curves
f.color_map=jetcolormap(7);
// trick 2: to be able to put the legend on the right without
//          interfering with the level curves use rect with a xmax
//          value large enough 
contour2d(x,x,z,-0.75:0.25:0.75,frameflag=3,rect=[0,0,5*%pi,4*%pi])
// trick 3: use legends (note that the more practical legend function
//          will not work as soon as one of the level is formed by 2 curves)  
legends(string(-0.75:0.25:0.75),1:7,"lr");
xtitle("Some level curves of the function cos(x)cos(y)")
  ]]></EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>contour</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>contour2di</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>plot2d</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>

  <AUTHOR>J.Ph.C.</AUTHOR>
</MAN>
