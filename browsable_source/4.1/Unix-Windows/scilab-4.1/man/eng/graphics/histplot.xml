<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>

  <TITLE>histplot</TITLE>

  <TYPE>Scilab Function</TYPE>

  <DATE>April 1993, revised 2005</DATE>

  <SHORT_DESCRIPTION name="histplot">plot a histogram</SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>histplot(n, data, &lt;opt_args&gt;)</CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>histplot(x, data, &lt;opt_args&gt;)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>n</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: positive integer (number of classes)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>x</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: increasing vector defining the classes (<VERB>x</VERB> may have at least 2 components)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>data</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: vector (datas to be analysed)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
        <PARAM_NAME>&lt;opt_args&gt;</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: This represents a sequence of statements <VERB>key1=value1,key2=value2</VERB>
          ,... where <VERB>key1</VERB>,
          <VERB>key2,...</VERB> can be any optional <LINK>plot2d</LINK> parameter (<TT>style,strf,leg,
          rect,nax, logflag,frameflag, axesflag</TT>) or normalization. For this last one the corresponding
          value must be a boolean scalar (default value %t). </SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>

  <DESCRIPTION>
    <P> This function plot an histogram of the <VERB>data</VERB> vector using the
        classes <VERB>x</VERB>. When the number <VERB>n</VERB> of classes is provided
        instead of <VERB>x</VERB>, the classes are choosen equally spaced and
        <EM>x(1) = min(data) &lt;  x(2) = x(1) + dx  &lt;  ...  &lt; x(n+1) = max(data)</EM>
        with <EM>dx = (x(n+1)-x(1))/n</EM>.
    </P>

    <P> The classes are defined by C1 = [x(1), x(2)] and  Ci = ( x(i), x(i+1)] for i &gt;= 2.
        Noting Nmax the total number of <VERB>data</VERB> (Nmax = length(data)) and Ni the number 
        of <VERB>data</VERB> components falling in Ci, the value of the histogram for x in Ci 
        is equal to <EM>Ni/(Nmax (x(i+1)-x(i)))</EM> when <VERB>normalization</VERB> is true
        (default case) and else, simply equal to <EM>Ni</EM>. When normalization occurs the
        histogram verifies: 
    </P> 
    <VERBATIM>
<![CDATA[            x(n+1)
           /  
           |   h(x) dx = 1,  when x(1)<=min(data) and max(data) <= x(n+1)) 
           /
           x(1)
     ]]>
    </VERBATIM>

    <P>Any <LINK>plot2d</LINK> (optional) parameter may be provided; for instance to
       plot an histogram with the color number 2 (blue if std colormap is used) and
       to restrict the plot inside the rectangle [-3,3]x[0,0.5],
       you may use <TT>histplot(n,data, style=2, rect=[-3,0,3,0.5])</TT>.
    </P> 

    <P>Enter the command <VERB>histplot()</VERB> to see a demo.</P>

  </DESCRIPTION>

  <EXAMPLE><![CDATA[
// example #1: variations around an histogram of a gaussian random sample 
d=rand(1,10000,'normal');  // the gaussian random sample
clf();histplot(20,d)
clf();histplot(20,d,normalization=%f)
clf();histplot(20,d,leg='rand(1,10000,''normal'')',style=5)
clf();histplot(20,d,leg='rand(1,10000,''normal'')',style=16, rect=[-3,0,3,0.5]); 

// example #2: histogram of a binomial (B(6,0.5)) random sample
d = grand(1000,1,"bin", 6, 0.5);
c = linspace(-0.5,6.5,8);
xbasc()
subplot(2,1,1)
   histplot(c, d, style=2)
   xtitle("normalized histogram")
subplot(2,1,2)
   histplot(c, d, normalization=%f, style=5)
   xtitle("non normalized histogram")

// example #3: histogram of an exponential random sample 
lambda = 2;
X = grand(100000,1,"exp", 1/lambda);
Xmax = max(X);
xbasc()
histplot(40, X, style=2)
x = linspace(0,max(Xmax),100)';
plot2d(x,lambda*exp(-lambda*x),strf="000",style=5)
legend(["exponential random sample histogram" "exact density curve"]);
// Note: if you use the old graphic mode use instead 
// legends(["exponential random sample histogram" "exact density curve"],[2 5],"ur");
  ]]></EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>hist3d</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>plot2d</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>dsearch</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
