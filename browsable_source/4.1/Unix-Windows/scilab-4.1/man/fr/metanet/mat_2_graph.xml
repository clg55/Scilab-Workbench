<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>fr</LANGUAGE>
  <TITLE>mat_2_graph  </TITLE>
  <TYPE>Scilab function  </TYPE>
  <DATE>September 1995  </DATE>
  <SHORT_DESCRIPTION name="mat_2_graph"> graphe à partir de matrice d&apos;incidence sommets-arcs ou sommets-sommets  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>g = mat_2_graph(a,oriented,[mat])  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>a  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : matrice creuse d&apos;incidence sommets-arcs ou  sommets-sommets
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>orienté  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : entier, 0 (graphe non-orienté ) ou 1 (graphe orienté)
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>mat  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : chaîne optionnelle, &apos;node-arc&apos; ou &apos;node-node&apos;
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>g  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : graphe (liste)
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    <VERB>mat_2_graph</VERB> calcule le graphe <VERB>g</VERB> correspondant à la matrice creuse d&apos;incidence sommets-arcs ou 
    sommets-sommets <VERB>a</VERB>.
    Vérification est faite que <VERB>a</VERB> est une matrice d&apos;incidence sommets-arcs ou 
    sommets-sommets d&apos;un graphe orienté (<VERB>orienté = 1</VERB>) ou non-orienté 
    (<VERB>non-orienté = 0</VERB>).
    Si l&apos;argument optionnel <VERB>mat</VERB> est omis ou est la chaîne de caractères 
    <VERB>&apos;node-arc&apos;</VERB>, a doit être une matrice sommets-arcs. Si <VERB>mat</VERB> est la chaîne de caractères
    <VERB>&apos;node-node&apos;</VERB>, a doit être une matrice sommets-sommets.
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
g=load_graph(SCI+'/demos/metanet/colored');
show_graph(g);
a=graph_2_mat(g);
g1=mat_2_graph(a,1);
g1('node_x')=g('node_x'); g1('node_y')=g('node_y');
show_graph(g1,'new');
a=graph_2_mat(g,'node-node');
g1=mat_2_graph(a,1,'node-node');
g1('node_x')=g('node_x'); g1('node_y')=g('node_y');
show_graph(g1,'new');
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>adj_lists</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>chain_struct</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>graph_2_mat</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
