<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>

  <TITLE>ScilabEval</TITLE>

  <TYPE>TCL Function</TYPE>

  <DATE>04 June 1998 - Last update: 20 November 2004</DATE>

  <SHORT_DESCRIPTION name="ScilabEval">tcl instruction : Evaluate a string
  with scilab interpreter</SHORT_DESCRIPTION>

  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>ScilabEval instruction</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>ScilabEval instruction
    "seq"</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>ScilabEval instruction
    "sync"</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>ScilabEval instruction "sync"
    "seq"</CALLING_SEQUENCE_ITEM>

    <CALLING_SEQUENCE_ITEM>ScilabEval "flush"</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>

  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>instruction</PARAM_NAME>

        <PARAM_DESCRIPTION>
          <SP>: tcl string character contains a Scilab instruction to evaluate
          with the current Scilab interpreter.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>

  <DESCRIPTION>
    <P>This function must be called in a tcl/tk script executed from Scilab.
    It allows to associate Scilab actions to tcl/tk widgets (graphic objects)
    or to use Scilab to perform some computations within a tcl script.</P>

    <P></P>

    <ITEMIZE>
      <ITEM label="ScilabEval instruction">
        <P>If the <VERB>ScilabEval instruction </VERB> syntax is used, the
        <VERB>instruction</VERB> is first stored in a FIFO queue,
        <VERB>ScilabEval</VERB> returns immediately. Scilab executes the
        queued <VERB>instructions</VERB> when possible (it should be at the
        prompt but also at the end of each instructions of the currently
        running function) in the order they were submitted. This syntax can be
        used to associate Scilab actions to tcl/tk widgets but not into a tcl
        script executed by <LINK>TCL_EvalFile</LINK> or <LINK>TCL_EvalStr</LINK>
        because in this situation the Scilab interpreter is blocked up to the
        end of the script. Note that with the<VERB>ScilabEval
        instruction</VERB> syntax, if there are many <VERB>ScilabEval</VERB>
        commands stored in the queue the execution of the second one can be
        started in the middle of the execution of the first one (in particular
        if the first one contains more than a simple expression).</P>

        <P>If the <VERB>"seq"</VERB> option is added, the associated
        instruction evaluation should be finished (or paused) before the next
        queued instruction evaluation can be started. The next callback stored
        in the command queue will only be taken into account when the current
        one will be finished or paused.</P>

        <P></P>
      </ITEM>

      <ITEM label="ScilabEval instruction &quot;sync&quot;">
        <P>If the <VERB>ScilabEval instruction "sync"</VERB> syntax is used,
        the instruction is executed immediately (not queued) and the
        <VERB>ScilabEval</VERB>returns when the <VERB>instruction
        </VERB>evaluation is finished. The scilab <VERB>instruction</VERB>
        evaluation may be interrupted by new or queued commands.</P>

        <P>If the <VERB>"seq"</VERB> option is added, the associated
        instruction evaluation should be finished (or paused) before any
        queued instruction evaluation can be started. The scilab
        <VERB>instruction</VERB> evaluation may not be interrupted by new or
        queued commands (except if it is paused).</P>

        <P></P>
      </ITEM>

      <ITEM label="ScilabEval &quot;flush&quot;">
        <P>If the <VERB>ScilabEval "flush"</VERB> syntax is used, all the
        previously queued <VERB>instructions</VERB> are executed immediately
        and the ScilabEval returns when the execution is finished. Each
        <VERB>instruction</VERB> is executed with the option used at the time
        of queuing up (i.e. <VERB>seq</VERB> or no option).</P>
      </ITEM>
    </ITEMIZE>

    <P>The evaluation context of all these cases is the current Scilab context
    when the<VERB>instruction</VERB> evaluation starts.</P>
  </DESCRIPTION>

  <EXAMPLE>

//Callbacks and "seq" option usage

//create tcl instructions
tcl_script=['toplevel .w1'
'button .w1.b -text ""Click here to execute without seq option""  -command WithoutSeq'
'button .w1.b1 -text ""Click here to execute with seq option""  -command  WithSeq'
'pack .w1.b .w1.b1'
'proc  WithoutSeq {} { ';
'  ScilabEval ""cont=%f;;cont=%t;"" '
'  ScilabEval ""if cont then disp(''ok''),else disp(''wrong'');end;cont=%f;"" '
'}'
'proc WithSeq {} { ';
'  ScilabEval ""cont=%f;;cont=%t;""  ""seq""'
'  ScilabEval ""if cont then disp(''ok''),else disp(''wrong'');end;cont=%f;"" '
'}'];
mputl(tcl_script,TMPDIR+'/test.tcl') //write them to a file
// Execute the tcl script
cont=%f;
TCL_EvalFile(TMPDIR+'/test.tcl');;

//scripts and "sync" option usage

//----------------without "sync"----------------
tcl_script=['  set t ""0""'
    '  while {$t != ""10""} {'
    '     ScilabEval ""a=$t;mprintf(''%d '',a);""'
    '     incr t'
    '  }'];

mputl(tcl_script,TMPDIR+'/test.tcl') //write them to a file
// Execute the tcl script
TCL_EvalFile(TMPDIR+'/test.tcl');mprintf('TCL_EvalFile finished\n');
// The ScilabEval are executed  after the and of TCL_EvalFile

//----------------with "sync"----------------
tcl_script=['  set t ""0""'
    '  while {$t != ""10""} {'
    '     ScilabEval ""a=$t;mprintf(''%d '',a);"" ""sync""'
    '     incr t'
    '  }'];

mputl(tcl_script,TMPDIR+'/test.tcl') //write them to a file
// Execute the tcl script
TCL_EvalFile(TMPDIR+'/test.tcl');mprintf('TCL_EvalFile finished\n');
// The ScilabEval are executed  synchronously with TCL_EvalFile

 
  </EXAMPLE>

  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>TCL_EvalFile</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>TCL_EvalStr</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>TCL_GetVar</LINK>
    </SEE_ALSO_ITEM>

    <SEE_ALSO_ITEM>
      <LINK>TCL_SetVar</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>

  <AUTHOR>Bertrand Guiheneuf</AUTHOR>
</MAN>