<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>findR</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>April 1999</DATE>
  <SHORT_DESCRIPTION name="findR"> Preprocessor for estimating the matrices of a linear time-invariant dynamical system</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>[R,N [,SVAL,RCND]] = findR(S,Y,U,METH,ALG,JOBD,TOL,PRINTW)  </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>[R,N] = findR(S,Y)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>S</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: the number of block rows in the block-Hankel matrices.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>Y</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>U</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>METH</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: an option for the method to use:</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>1</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>:  MOESP method with past inputs and outputs;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>2</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>:  N4SI15     0     1     1  1000D method.</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
          <P>
    Default:    METH = 1.
  </P>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>ALG</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: an option for the algorithm to compute the triangular factor of the concatenated block-Hankel matrices built from the input-output data:</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>1</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>:   Cholesky algorithm on the correlation matrix;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>2</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>:   fast QR algorithm;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>3</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>:   standard QR algorithm.</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
          <P>
    Default:    ALG = 1.
  </P>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>JOBD</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: an option to specify if the matrices B and D should later be computed using the MOESP approach:</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>=  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>1 :  the matrices B and D should later be computed using the MOESP approach;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>=  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>2 :  the matrices B and D should not be computed using the MOESP approach.</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
          <P>
    Default: JOBD = 2. This parameter is not relevant for METH = 2.
  </P>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>TOL</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: a vector of length 2 containing tolerances:</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>TOL</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>(1) is the tolerance for estimating the rank of matrices. If  TOL(1) &gt; 0,  the given value of  TOL(1)  is used as a lower bound for the reciprocal condition number.</SP>
                <P>
    Default:    TOL(1) = prod(size(matrix))*epsilon_machine where epsilon_machine is the relative machine precision.
  </P>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>TOL</PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>(2) is the tolerance for estimating the system order. If  TOL(2) &gt;= 0,  the estimate is indicated by the index of the last singular value greater than or equal to  TOL(2).  (Singular values less than  TOL(2) are considered as zero.)</SP>
                <P>
    When  TOL(2) = 0,  then  S*epsilon_machine*sval(1)  is used instead TOL(2),  where  sval(1)  is the maximal singular value. When  TOL(2) &lt; 0,  the estimate is indicated by the index of the singular value that has the largest logarithmic gap to its successor. Default:    TOL(2) = -1.
  </P>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>PRINTW</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: a switch for printing the warning messages.</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>=  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>1: print warning messages;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>=  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>0: do not print warning messages.</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
          <P>
    Default:    PRINTW = 0.
  </P>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>R</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>:</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>N</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: the order of the discrete-time realization</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>SVAL</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: singular values SVAL, used for estimating the order.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>RCND</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: vector of length 2 containing the reciprocal condition numbers of the matrices involved in rank decisions or least squares solutions.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P>
    findR   Preprocesses the input-output data for estimating the matrices 
    of a linear time-invariant dynamical system, using Cholesky or
    (fast) QR factorization and subspace identification techniques 
    (MOESP or N4SID), and estimates the system order.</P>
    <P>
    [R,N] = findR(S,Y,U,METH,ALG,JOBD,TOL,PRINTW)  returns the processed
    upper triangular factor  R  of the concatenated block-Hankel matrices 
    built from the input-output data, and the order  N  of a discrete-time
    realization. The model structure is:</P>
    <VERBATIM>
<![CDATA[
     x(k+1) = Ax(k) + Bu(k) + w(k),   k >= 1,
     y(k)   = Cx(k) + Du(k) + e(k).
   ]]>
    </VERBATIM>
    <P>
    The vectors y(k) and u(k) are transposes of the k-th rows of Y and U,
    respectively.</P>
    <P>
    [R,N,SVAL,RCND] = findR(S,Y,U,METH,ALG,JOBD,TOL,PRINTW)  also returns
    the singular values SVAL, used for estimating the order, as well as,
    if meth = 2, the vector RCND of length 2 containing the reciprocal
    condition numbers of the matrices involved in rank decisions or least
    squares solutions.</P>
    <P>
    [R,N] = findR(S,Y)  assumes U = [] and default values for the
    remaining input arguments.</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
//generate data from a given linear system
A = [ 0.5, 0.1,-0.1, 0.2;
      0.1, 0,  -0.1,-0.1;      
     -0.4,-0.6,-0.7,-0.1;  
      0.8, 0,  -0.6,-0.6];      
B = [0.8;0.1;1;-1];
C = [1 2 -1 0];
SYS=syslin(0.1,A,B,C);
U=(ones(1,1000)+rand(1,1000,'normal')); 
Y=(flts(U,SYS)+0.5*rand(1,1000,'normal'));
// Compute R

[R,N,SVAL] = findR(15,Y',U');
SVAL
N
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>findABCD</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>findAC</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>findBD</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>findBDK</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>sorder</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>sident</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
