 
// Example ex11
 
//[1] call intersci with Makefile
 
//
 
V=G_make('ex11fi.c','ex11fi.c');
 
//[2] run the builder generated by intersci.
 
//    Since files and libs were nor transmited
 
//    to intersci we give them here
 
files = ['ex11fi.o';'ex11c.o'];
 
libs  = [] ;
 
exec ex11fi_builder.sce
 
// generated with intersci
 
ilib_name = 'libex11fi'		// interface library name
 ilib_name  =
 
 libex11fi   
 
 
table =["ext11c","intsext11c"];
 
ilib_build(ilib_name,table,files,libs);
   generate a gateway file
   generate a loader file
   generate a Makefile: Makelib
   running the makefile
 
 
 
//[3] run the loader to load the interface
 
//    Note that the file loader.sce
 
//    is changed each time you run a demo
 
//    if several0.desc are present in a directory
 
exec loader.sce
 
// generated by builder.sce: Please do not edit this file
 
// ------------------------------------------------------
 
libex11fi_path=get_file_path('loader.sce');
 
functions=[ 'ext11c';
];
 
addinter(libex11fi_path+'/libex11fi.so','libex11fi',functions);
Loading shared executable0./libex11fi.so

shared archive loaded

Linking libex11fi 

Interface 0 libex11fi

 
 
 
//[4] test the loaded function
 
 
a=[1,2,3]+%i*[4,5,6];
 
b=ext11c(a);
 
if norm(b-([4,5,6]+%i*[1,2,3])) > %eps then bugmes();quit;end
 
 
 
 
