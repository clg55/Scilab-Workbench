 
// Example ex09
 
//[1] call intersci with Makefile
 
//
 
V=G_make('ex09fi.c','ex09fi.c');
 
//[2] run the builder generated by intersci.
 
//    Since files and libs were nor transmited
 
//    to intersci we give them here
 
files = ['ex09fi.o';'ex09f.o'];
 
libs  = [] ;
 
exec ex09fi_builder.sce
 
// generated with intersci
 
ilib_name = 'libex09fi'		// interface library name
 ilib_name  =
 
 libex09fi   
 
 
table =["calc9","intscalc9"];
 
ilib_build(ilib_name,table,files,libs);
   generate a gateway file
   generate a loader file
   generate a Makefile: Makelib
   running the makefile
 
 
 
//[3] run the loader to load the interface
 
//    Note that the file loader.sce
 
//    is changed each time you run a demo
 
//    if several0.desc are present in a directory
 
exec loader.sce
 
// generated by builder.sce: Please do not edit this file
 
// ------------------------------------------------------
 
libex09fi_path=get_file_path('loader.sce');
 
functions=[ 'calc9';
];
 
addinter(libex09fi_path+'/libex09fi.so','libex09fi',functions);
Loading shared executable0./libex09fi.so

shared archive loaded

Linking libex09fi 

Interface 0 libex09fi

 
 
 
//[4] test the loaded function
 
//calc7: function with two optional values, a string and a scilab variable.
 
bb=33;  //scilab optional variable
 
[a,b,c,d]=calc9(10);
 
if c<>'toto' then bugmes();quit;end
 
if norm(d-[2,4,6,8])> %eps then bugmes();quit;end
 
if b<>bb then bugmes();quit;end
 
 
 
 
 
 
 
 
 
 
 
