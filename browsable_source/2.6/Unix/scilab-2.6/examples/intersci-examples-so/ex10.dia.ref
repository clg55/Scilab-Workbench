 
// Example ex10
 
//[1] call intersci with Makefile
 
//
 
V=G_make('ex10fi.c','ex10fi.c');
 
//[2] run the builder generated by intersci.
 
//    Since files and libs were nor transmited
 
//    to intersci we give them here
 
files = ['ex10fi.o';'ex10f.o'];
 
libs  = [] ;
 
exec ex10fi_builder.sce
 
// generated with intersci
 
ilib_name = 'libex10fi'		// interface library name
 ilib_name  =
 
 libex10fi   
 
 
table =["calc10","intscalc10"];
 
ilib_build(ilib_name,table,files,libs);
   generate a gateway file
   generate a loader file
   generate a Makefile: Makelib
   running the makefile
 
 
 
//[3] run the loader to load the interface
 
//    Note that the file loader.sce
 
//    is changed each time you run a demo
 
//    if several0.desc are present in a directory
 
exec loader.sce
 
// generated by builder.sce: Please do not edit this file
 
// ------------------------------------------------------
 
libex10fi_path=get_file_path('loader.sce');
 
functions=[ 'calc10';
];
 
addinter(libex10fi_path+'/libex10fi.so','libex10fi',functions);
Loading shared executable0./libex10fi.so

shared archive loaded

Linking libex10fi 

Interface 0 libex10fi

 
 
 
//[4] test the loaded function
 
// calc1: 3 matrix input variables and at most 3 output variables of
 
// types double, real, int
 
l=calc10(list(1,[2,3],[1,2;3,4]));
 
if norm(l(1)-2) > %eps then bugmes();quit;end
 
if norm(l(2)-([2,3]+[1,2])) > %eps then bugmes();quit;end
 
if norm(l(3)-([1,2;3,4]+[1,3;2,4])) > %eps then bugmes();quit;end
 
 
 
 
 
 
