<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>fr</LANGUAGE>
  <TITLE>min_lcost_cflow  </TITLE>
  <TYPE>Scilab function  </TYPE>
  <DATE>September 1995  </DATE>
  <SHORT_DESCRIPTION name="min_lcost_cflow"> flot contraint de coût linéaire minimum  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[c,phi,v,flag] = min_lcost_cflow(i,j,cv,g)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>i  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : entier, numéros des sommets sources
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>j  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : entier, numéros des sommets puits
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>cv  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : scalaire, valeur du flot contraint
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>g  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : graphe (liste)
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>c  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : valeur du coût
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>phi  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : vecteur ligne des valeurs des flots sur les arcs
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>v  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : vecteur ligne des flots des sources aux puits
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>flag  </PARAM_NAME>
  <PARAM_DESCRIPTION>
  <SP>
    : problème soluble ou pas (0 ou 1)
</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    <VERB>min_lcost_cflow</VERB> calcule flot de coût linéaire minimum dans un réseau 
    <VERB>g</VERB>, avec les valeurs des flots des sommets sources <VERB>i</VERB> aux
    puits <VERB>j</VERB> contraints à valoir <VERB>cv</VERB>.
  </P>
  <P>
    Elle renvoie le coût total du flot sur les arcs <VERB>c</VERB> et
    le vecteur ligne des flots sur les arcs <VERB>phi</VERB> et les valeurs des flots 
    <VERB>v</VERB> sur les arcs virtuels des sources aux puits. Si <VERB>v</VERB> est plus petit que <VERB>cv</VERB>, un message est affiché, mais le calcul est fait quand même. Dans ce cas<VERB>flag</VERB> est égal à 0, sinon il est égal à 1.
  </P>
  <P>
    es bornes sur les flots sont données par les éléments <VERB>edge_min_cap</VERB> et
    <VERB>edge_max_cap</VERB> du graphe. 
    La valeur de la capacité minimum doit être égal à zéro. Les valeurs des capacités maximum doivent être entières et positives.
    Si les valeurs <VERB>edge_min_cap</VERB> ou <VERB>edge_max_cap</VERB> ne sont pas données (vecteur vide <VERB>[]</VERB>), elles sont supposées nulles sur chaque arête.
  </P>
  <P>
    Les coûts sur les arêtes sont donnés par les éléments <VERB>edge_cost</VERB> du graphe.
    Les coûts doivent être positifs.
  </P>
  <P>
    Si la valeur de <VERB>edge_cost</VERB> n&apos;est pas donnée (vecteur vide <VERB>[]</VERB>), 
    elle est supposé nulle sur chaque arête.
  </P>
  <P>
    Si la valeur de <VERB>edge_cost</VERB> n&apos;est pas donnée (vecteur vide <VERB>[]</VERB>), 
    elle est supposé nulle sur chaque arête.
  </P>
  <P>
    Cette fonction utilise l&apos;algorithme de Busacker et Goven.
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
ta=[1 1 2 2 2 3 4 4 5 6 6 6 7 7 7 8 9 10 12 12 13 13 13 14 15 14 9 11 10];
he=[2 6 3 4 5 1 3 5 1 7 10 11 5 8 9 5 8 11 10 11 9 11 15 13 14 4 6 9 1];
g=make_graph('foo',1,15,ta,he);
g('node_x')=[194 191 106 194 296 305 305 418 422 432 552 550 549 416 548];
g('node_y')=[56 181 276 278 276 103 174 281 177 86 175 90 290 397 399];
show_graph(g);
g1=g; ma=arc_number(g1); n=g1('node_number');
g1('edge_min_cap')=0*ones(1,ma);
rand('uniform');
g1('edge_max_cap')=round(20*rand(1,ma))+ones(1,ma);
g1('edge_cost')=10*rand(1,ma)+ones(1,ma);
source=15; sink=1; cv=5;
[c,phi,v]=min_lcost_cflow(source,sink,cv,g1);
x_message(['Le cout est: '+string(c);
           'Voici les flots sur les arcs']);
nodetype=0*ones(1,n); nodetype(source)=2; nodetype(sink)=1;
g1('node_type')=nodetype;
ii=find(phi<>0); edgecolor=phi; edgecolor(ii)=11*ones(ii);
g1('edge_color')=edgecolor;
edgefontsize=8*ones(1,ma); edgefontsize(ii)=18*ones(ii);
nodecolor=0*ones(1,n); nodecolor(source)=11; nodecolor(sink)=11;
g1('node_color')=nodecolor;
g1('edge_font_size')=edgefontsize;
g1('edge_label')=string(phi);
show_graph(g1);
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>min_lcost_flow1</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>min_lcost_flow2</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>min_qcost_flow</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
