 
getf SCI/util/testexamples.sci
 
reinit_for_test()
 
%U=mopen('SCI/tests/automatic_tests/abinv_data.ref','rb');
 
nu = 3;ny = 4;nx = 7;
 
nrt = 2;ngt = 3;ng0 = 3;nvt = 5;rk = 2;
 
flag = list('on', nrt, ngt, ng0, nvt, rk);
 
Sys = ssrand(ny, nu, nx, flag);alfa = -1;beta = -2;
Warning :redefining function: beta                    
 
 
[X,dims,F,U,k,Z] = abinv(Sys, alfa, beta);
WARNING:system not stabilizable (or detectable)=>stabilizing the stabilizable part
 
[A,B,C,D] = abcd(Sys);dimV = dims(3);dimR = dims(1);
 
V = X(:, 1:dimV);X2 = X(:, dimV + 1:nx);
 
%ans = X2' * (A + B * F) * V;
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
%ans = (C + D * F) * V;
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
X0 = X(:, dimR + 1:dimV);%ans = spec(X0' * (A + B * F) * X0);
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
%ans = trzeros(Sys);
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
%ans = spec(A + B * F);
 
if load_ref('%ans') then   bugmes();quit;end,
 
//nr=2 evals at -1 and noc-dimV=2 evals at -2.
 
%ans = clean(ss2tf(Sys * Z));
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
// 2nd Example
 
nx = 6;ny = 3;nu = 2;
 
A = diag(1:6);A(2, 2) = -7;A(5, 5) = -9;B = [1,2;0,3;0,4;0,5;0,0;0,0];
 
C = [zeros(ny, ny),eye(ny, ny)];D = [0,1;0,2;0,3];
 
sl = syslin('c', A, B, C, D);//sl=ss2ss(sl,rand(6,6))*rand(2,2);
 
[A,B,C,D] = abcd(sl);//The matrices of sl.
 
alfa = -1;beta = -2;
Warning :redefining function: beta                    
 
 
[X,dims,F,U,k,Z] = abinv(sl, alfa, beta);dimVg = dims(2);
WARNING:system not stabilizable (or detectable)=>stabilizing the stabilizable part
WARNING:system not stabilizable (or detectable)=>stabilizing the stabilizable part
 
%ans = clean(X' * (A + B * F) * X);
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
%ans = clean(X' * B * U);
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
%ans = clean((C + D * F) * X);
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
%ans = clean(D * U);
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
G = X(:, dimVg + 1:$)';
 
B2 = G * B;nd = 3;
 
R = rand(nu, nd);Q2T = -[B2;D] * R;
 
p = size(G, 1);Q2 = Q2T(1:p, :);T = Q2T(p + 1:$, :);
 
Q = G\Q2;//a valid [Q;T] since
 
%ans = [G * B;D] * R + [G * Q;T];
 
if load_ref('%ans') then   bugmes();quit;end,
 
// is zero
 
closed = syslin('c', A + B * F, Q + B * R, C + D * F, T + D * R);// closed loop: d-->y
 
%ans = ss2tf(closed);
 
if load_ref('%ans') then   bugmes();quit;end,
 
// Closed loop is zero
 
%ans = spec(closed('A'));
 
if load_ref('%ans') then   bugmes();quit;end,
 
//The plant is not stabilizable!
 
[ns,nc,W,sl1] = st_ility(sl);
 
[A,B,C,D] = abcd(sl1);A = A(1:ns, 1:ns);B = B(1:ns, :);C = C(:, 1:ns);
 
slnew = syslin('c', A, B, C, D);//Now stabilizable
 
//Fnew=stabil(slnew('A'),slnew('B'),-11);
 
//slnew('A')=slnew('A')+slnew('B')*Fnew;
 
//slnew('C')=slnew('C')+slnew('D')*Fnew;
 
[X,dims,F,U,k,Z] = abinv(slnew, alfa, beta);dimVg = dims(2);
WARNING:system not stabilizable (or detectable)=>stabilizing the stabilizable part
 
[A,B,C,D] = abcd(slnew);
 
G = X(:, dimVg + 1:$)';
 
B2 = G * B;nd = 3;
 
R = rand(nu, nd);Q2T = -[B2;D] * R;
 
p = size(G, 1);Q2 = Q2T(1:p, :);T = Q2T(p + 1:$, :);
 
Q = G\Q2;//a valid [Q;T] since
 
%ans = [G * B;D] * R + [G * Q;T];
 
if load_ref('%ans') then   bugmes();quit;end,
 
// is zero
 
closed = syslin('c', A + B * F, Q + B * R, C + D * F, T + D * R);// closed loop: d-->y
 
%ans = ss2tf(closed);
 
if load_ref('%ans') then   bugmes();quit;end,
 
// Closed loop is zero
 
%ans = spec(closed('A'));
 
if load_ref('%ans') then   bugmes();quit;end,
 
 
xdel_run(winsid());
 
 
mclose(%U);
 
