<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Multi-port switch </TITLE>
<META NAME="description" CONTENT="Multi-port switch ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html3660"
  HREF="M_SWITCH.htm#SECTION005311100000000000000">Library</A>
<LI><A NAME="tex2html3661"
  HREF="M_SWITCH.htm#SECTION005311200000000000000">Description</A>
<LI><A NAME="tex2html3662"
  HREF="M_SWITCH.htm#SECTION005311300000000000000">Dialog Box</A>
<LI><A NAME="tex2html3663"
  HREF="M_SWITCH.htm#SECTION005311400000000000000">Default properties</A>
<LI><A NAME="tex2html3664"
  HREF="M_SWITCH.htm#SECTION005311500000000000000">Interfacing function</A>
<LI><A NAME="tex2html3665"
  HREF="M_SWITCH.htm#SECTION005311600000000000000">Computational function (type 4)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION005311000000000000000"></A><A NAME="M_SWITCH"></A>
<BR>
Multi-port switch 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=M_SWITCH.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="img70.gif"
 ALT="\epsfig{file=M_SWITCH.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION005311100000000000000">
Library</A>
</font></H3>
Branching

<H3><font color="blue"><A NAME="SECTION005311200000000000000">
Description</A>
</font></H3>
Multiple switch block. The output comes from the input indiacted by
the control input.
<P>

<H3><font color="blue"><A NAME="SECTION005311300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">number of inputs</TD>
<TD ALIGN="CENTER">2</TD>
</TR>
<TR><TD ALIGN="CENTER">zero base indexing (0), otherwise 1</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">rounding rule: int (0), round (1), ceil (2), floor (3)</TD>
<TD ALIGN="CENTER">3</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>number of inputs: it changes the number of input ports
</LI>
<LI>zero base indexing : how to count, from 0 or from 1.
</LI>
<LI>rounding rule: if first input is not an integer, how should it be
rounded to one.
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION005311400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: no
</LI>
<LI>direct-feedthrough: yes
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 3 / 1  -1  -1
</LI>
<LI>number/sizes of outputs: 1 / -1
</LI>
<LI>number/sizes of activation inputs: 0 / 
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: no
</LI>
<LI>discrete-time state: no
</LI>
<LI>name of computational function: <EM>mswitch</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION005311500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/branching/M_SWITCH.sci</TT>

<H3><font color="blue"><A NAME="SECTION005311600000000000000">
Computational function (type 4)</A>
</font></H3>
<BR>
<PRE>#include "scicos_block.h"
#include &lt;math.h&gt;

#define max(a,b) ((a) &gt;= (b) ? (a) : (b))
#define min(a,b) ((a) &lt;= (b) ? (a) : (b))

void  mswitch(scicos_block *block,int flag)
{
  int i,j;
  i=block-&gt;ipar[1];
  if (i==0) {
    if (*block-&gt;inptr[0]&gt;0) {
      j=floor(*block-&gt;inptr[0]);
    }else{
      j=ceil(*block-&gt;inptr[0]);
    }
  }else if (i==1) {
    if (*block-&gt;inptr[0]&gt;0) {
      j=floor(*block-&gt;inptr[0]+.5);
    }else{
      j=ceil(*block-&gt;inptr[0]-.5);
    }
  }else if (i==2) {
    j=ceil(*block-&gt;inptr[0]);
  }else if (i==3) {
    j=floor(*block-&gt;inptr[0]);
  }
  j=j+1-block-&gt;ipar[0];
  j=max(j,1);
  j=min(j,block-&gt;nin-1);
  for (i=0;i&lt;block-&gt;insz[j];i++) {
    block-&gt;outptr[0][i]=block-&gt;inptr[j][i];
  }
}
</PRE>
<BR><HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
