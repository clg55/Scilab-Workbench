<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>sensi</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>April 1993</DATE>
  <SHORT_DESCRIPTION name="sensi"> sensitivity functions</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>[Se,Re,Te]=sensi(G,K)  </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>[Si,Ri,Ti]=sensi(G,K,flag)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>G</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: standard plant (<VERB>syslin</VERB> list)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>K</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: compensator (<VERB>syslin</VERB> list)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>flag</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: character string <VERB>'o'</VERB> (default value) or <VERB>'i'</VERB></SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>Se</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: output sensitivity function <VERB>(I+G*K)^-1</VERB></SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>Re</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: <VERB>K*Se</VERB></SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>Te</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: <VERB>G*K*Se</VERB> (output complementary sensitivity function)</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P><VERB>sensi</VERB> computes sensitivity functions. If <VERB>G</VERB> and <VERB>K</VERB> are
    given in state-space form, the systems returned are generically minimal. 
    Calculation is made by <VERB>lft</VERB>, e.g., 
    <VERB>Se</VERB> can be given by the commands 
    <VERB> P = augment(G,'S')</VERB>, <VERB>Se=lft(P,K)</VERB>.
    If <VERB>flag</VERB> = <VERB>'i'</VERB>, <VERB>[Si,Ri,Ti]=sensi(G,K,'i')</VERB>
    returns the input sensitivity functions.</P>
    <VERBATIM>
<![CDATA[
[Se;Re;Te]= [inv(eye()+G*K);K*inv(eye()+G*K);G*K*inv(eye()+G*K)];
[Si;Ri;Ti]= [inv(eye()+K*G);G*inv(eye()+K*G);K*G*inv(eye()+K*G)];
   ]]>
    </VERBATIM>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
G=ssrand(1,1,3);K=ssrand(1,1,3);
[Se,Re,Te]=sensi(G,K);
Se1=inv(eye()+G*K);  //Other way to compute
ss2tf(Se)    //Se seen in transfer form
ss2tf(Se1)
ss2tf(Te)
ss2tf(G*K*Se1)
[Si,Ri,Ti]=sensi(G,K,'i');
w1=[ss2tf(Si);ss2tf(Ri);ss2tf(Ti)]
w2=[ss2tf(inv(eye()+K*G));ss2tf(G*inv(eye()+K*G));ss2tf(K*G*inv(eye()+K*G))];
clean(w1-w2)
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>augment</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>lft</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>h_cl</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
