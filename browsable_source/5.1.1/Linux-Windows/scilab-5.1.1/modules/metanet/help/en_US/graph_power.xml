<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="graph_power">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>graph_power</refname>
    <refpurpose> kth power of a directed 1-graph</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>g1 = graph_power(g,k)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Parameters</title>
    <variablelist>
      <varlistentry>
        <term>g</term>
        <listitem>
          <para> a <link linkend="graph_data_structure">graph_data_structure</link> defining a directed graph.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>k</term>
        <listitem>
          <para>integer</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>g1</term>
        <listitem>
          <para>graph data structure of the new graph</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>graph_power</literal> computes the directed graph <literal>g1</literal> which is the kth power 
    of directed 1-graph <literal>g</literal>.
    There is an arc between two nodes in <literal>g1</literal> if there exists a path between 
    these nodes of length at most k in <literal>g</literal>.
    <literal>graph_power(g,1)</literal> is graph <literal>g</literal>.</para>
    <para>
    If such a graph does not exist, an empty vector is returned.</para>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[

ta=[1 1 2 4 4 5 6 7 2 3 5 1];
he=[2 6 3 6 7 8 8 8 4 7 3 5];
g=make_graph('foo',1,8,ta,he);
g.nodes.graphics.x=[285  284  335  160  405  189  118  45];
g.nodes.graphics.y=[266  179   83  176  368  252  64  309];
show_graph(g);

g2=graph_power(g,2);
show_graph(g2,'new');

 
  ]]></programlisting>
  </refsection>
</refentry>
