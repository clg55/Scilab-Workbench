<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="fr" xml:id="qr">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>qr</refname>
    <refpurpose> factorisation QR  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Séquence d'appel</title>
    <synopsis>[Q,R]=qr(X [,"e"])
[Q,R,E]=qr(X [,"e"])
[Q,R,rk,E]=qr(X [,tol])</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Paramètres</title>
    <variablelist>
      <varlistentry>
        <term>X  </term>
        <listitem>
          <para>matrice réelle ou complexe
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>tol  </term>
        <listitem>
          <para>nombre réel positif
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Q  </term>
        <listitem>
          <para>matrice carrée unitaire
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>R  </term>
        <listitem>
          <para>matrice de même dimensions que <literal>X</literal>
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>E  </term>
        <listitem>
          <para>matrice de permutation
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>rk  </term>
        <listitem>
          <para>entier (rang de <literal>X</literal>)
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>[Q,R] = qr(X)</literal> renvoie une matrice triangulaire supérieure
      <literal>R</literal> de même
      dimensions que <literal>X</literal> et une matrice carrée othogonale
      (unitaire dans le cas complexe) <literal>Q</literal> telles que
      <literal>X = Q*R</literal>.

      <literal>[Q,R] = qr(X,"e")</literal>  renvoie une decomposition de
      taille réduite: si <literal>X</literal> est une matrice <literal>m x
	n</literal> avec <literal>m &gt; n</literal> alors seulement les
      <literal>n</literal> premières colonnes de <literal>Q</literal> sont calculées
      ainsi que les <literal>n</literal> premières lignes de
      <literal>R</literal>.   
    </para>
    <para>
      Il découle de <literal>Q*R = X</literal> que la
      <literal>k</literal>ième colonne de <literal>X</literal> peut s'exprimer comme
      une combinaison linéaire des <literal>k</literal> premieres colonnes de
      <literal>Q</literal> (avec les coefficients <literal>R(1,k), ...,
	R(k,k)</literal>. Les <literal>k</literal> premieres colonnes de
      <literal>Q</literal> forment une base orthogonale du sous espace généré
      par les Les <literal>k</literal> premieres colonnes de
      <literal>X</literal>. Si la colonne <literal>k</literal> de <literal>X</literal> est
      une combinaison linéaire des <literal>p</literal> premiéres colonnes de
      <literal>X</literal> alors les éléments <literal>R(p+1,k), ...,
	R(k,k)</literal> sont nuls. Dans cette situation <literal>R</literal> est
      une matrice trapézoidale supérieure. Si <literal>X</literal> est de rang
      <literal>rk</literal> alors les lignes  <literal>R(rk+1,:), R(rk+2,:),
	...</literal> sont nulles.

    </para>
    <para><literal>[Q,R,E] = qr(X)</literal> renvoie une matrice de permutations (de
      colonnes) <literal>E</literal>,
      une matrice triangulaire supérieure <literal>R</literal> dont les
      éléments diagonaux sont classés par ordre décroissant et une
      matrice unitaire <literal>Q</literal> telles que <literal>X*E = Q*R</literal>.
      si <literal>rk</literal> est le rang de <literal>X</literal> les
      <literal>rk</literal> premiers éléménts diagonaux de <literal>R</literal> sont
      tous non nuls. <literal>[Q,R,E] = qr(X,"e")</literal>  renvoie une decomposition de
      taille réduite: si <literal>X</literal> est une matrice <literal>m x
	n</literal> avec <literal>m &gt; n</literal> alors seulement les
      <literal>n</literal> premières colonnes de <literal>Q</literal> sont calculées
      ainsi que les <literal>n</literal> premières lignes de
      <literal>R</literal>.   
    </para>
    <para><literal>[Q,R,rk,E] = qr(X [,tol])</literal>renvoie de plus 
      <literal>rk</literal> =rang estimé de <literal>X</literal>. 
      Plus précisément, 
      <literal>rk</literal> est le nombre d'éléments diagonaux de
      <literal>R</literal> supérieurs à <literal>tol</literal>. La valeur par défaut
      de <literal>tol</literal> est <literal>R(1,1)*%eps*max(size(R))</literal> 
    </para>
    <para>
      renvoie <literal>rk</literal> = rang estimé de <literal>X</literal>. Ici,
      <literal>rk</literal> est le nombre d'éléments diagonaux de <literal>R</literal>
      supérieurs à <literal>R(1,1)*%eps*max(size(R)</literal>.
    </para>
  </refsection>
  <refsection>
    <title>Exemples</title>
    <programlisting role="example"><![CDATA[
    // QR factorization, generic case
    // X is tall (full rank)
    X=rand(5,2);[Q,R]=qr(X); [Q'*X R]
    //X is fat (full rank)
    X=rand(2,3);[Q,R]=qr(X); [Q'*X R]
    //Column 4 of X is a linear combination of columns 1 and 2:
    X=rand(8,5);X(:,4)=X(:,1)+X(:,2); [Q,R]=qr(X); R, R(:,4)
    //X has rank 2, rows 3 to $ of R are zero:
    X=rand(8,2)*rand(2,5);[Q,R]=qr(X); R
    //Evaluating the rank rk: column pivoting ==> rk first
    //diagonal entries of R are non zero :
    A=rand(5,2)*rand(2,5);
    [Q,R,rk,E] = qr(A,1.d-10);
    norm(Q'*A-R)
    svd([A,Q(:,1:rk)])    //span(A) =span(Q(:,1:rk))
    ]]></programlisting>
  </refsection>
  <refsection>
    <title>Voir Aussi</title>
    <simplelist type="inline">
      <member>
        <link linkend="rank">rank</link>
      </member>
      <member>
        <link linkend="svd">svd</link>
      </member>
      <member>
        <link linkend="rowcomp">rowcomp</link>
      </member>
      <member>
        <link linkend="colcomp">colcomp</link>
      </member>
    </simplelist>
  </refsection>
  <refsection>
    <title>Fonctions Utilisées</title>
    <para>La décomposition QR est basée sur les routines Lapack  DGEQRF, DGEQPF,
      DORGQR pour les matrices réelles et ZGEQRF, ZGEQPF, ZORGQR pour le cas
      complexe.</para>
  </refsection>
</refentry>
