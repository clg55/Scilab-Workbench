<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2006-2008 - INRIA
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="sci2for">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>sci2for</refname>
    <refpurpose> scilab function to Fortran routine conversion</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>txt=sci2for(fun,nam,vtps [,lvtps])</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Parameters</title>
    <variablelist>
      <varlistentry>
        <term>fun</term>
        <listitem>
          <para>Scilab function</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>nam</term>
        <listitem>
          <para>character string, the name of generated subroutine</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>vtps</term>
        <listitem>
          <para>list</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>lvtps</term>
        <listitem>
          <para>list</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>txt</term>
        <listitem>
          <para>string, text of the subroutine Fortran code</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para>
  </para>
    <para>
    The elements of the list <literal>vtps</literal> give the type and dimensions
    of the input variables of the calling sequence and <literal>lvtps</literal>
    optionally gives the type and dimensions of the output variables. This
    last parameter is usefull if type and/or dimension inference cannot be
    able to determine the desired values.
  </para>
    <para>
    These lists are  structured as described below:
  </para>
    <programlisting><![CDATA[

vtps(i)=list(typ,row_dim,col_dim)
   
    ]]></programlisting>
    <para>
    where :
  </para>
    <variablelist>
      <varlistentry>
        <term>typ</term>
        <listitem>
          <para>is a character string giving the type of the variable :</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"0"</term>
        <listitem>
          <para>constant,integer vector or matrix</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"1"</term>
        <listitem>
          <para>constant,double precision vector or matrix</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"10"</term>
        <listitem>
          <para>character string</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>row_dim</term>
        <listitem>
          <para>character string (row dimension)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>col_dim</term>
        <listitem>
          <para>character string (column dimension)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>txt</term>
        <listitem>
          <para>Fortran code</para>
          <para>
    Generated code may use routines of scilab libraries and some others
    whose source code may be found in &lt;SCIDIR&gt;/util/sci2for.f</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Remarks</title>
    <para>
    This function is just a try. Only simple function may be translated. Many function calls have not  yet Fortran equivalent, to add the translation of a new function call you may define a scilab function. whose name is f_&lt;name of function&gt;. see &lt;SCIDIR&gt;/macros/sci2for/f_*.sci files for examples.</para>
    <para>
    The following keywords :</para>
    <programlisting><![CDATA[

 work,iwork,ierr
 iw*  iiw*
 ilbN   (N integer)
   
    ]]></programlisting>
    <para>
    may not appear in the function code.</para>
  </refsection>
  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="function">function</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
