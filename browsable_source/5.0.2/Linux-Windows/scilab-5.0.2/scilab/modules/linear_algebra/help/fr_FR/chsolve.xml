<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="fr" xml:id="chsolve">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>chsolve</refname>
    <refpurpose> solveur de Cholesky creux  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Séquence d'appel</title>
    <synopsis>sol=chsolve(spcho,rhs)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Paramètres</title>
    <variablelist>
      <varlistentry>
        <term>spcho  </term>
        <listitem>
          <para>liste contenant les facteurs de Cholesky renvoyés par chfact 
	  </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>rhs, sol  </term>
        <listitem>
          <para>vecteurs
	  </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>sol=chsolve(spcho,rhs)</literal> calcule la solution de 
      <literal>rhs=A*sol</literal>, où <literal>A</literal> est une matrice symétrique
      définie positive. Cette fonction est basée sur le programme Ng-Peyton
      (ORNL). Voir le programme Fortran pour une description complète des
      variables de la liste <literal>spcho</literal>. 
    </para>
  </refsection>
  <refsection>
    <title>Exemples</title>
    <programlisting role="example"><![CDATA[
    A=sprand(20,20,0.1);
    A=A*A'+eye();  
    spcho=chfact(A);
    sol=(1:20)';rhs=A*sol;
    spcho=chfact(A);
    chsolve(spcho,rhs)
    ]]></programlisting>
  </refsection>
  <refsection>
    <title>Voir Aussi</title>
    <simplelist type="inline">
      <member>
        <link linkend="chfact">chfact</link>
      </member>
      <member>
        <link linkend="sparse">sparse</link>
      </member>
      <member>
        <link linkend="lufact">lufact</link>
      </member>
      <member>
        <link linkend="luget">luget</link>
      </member>
      <member>
        <link linkend="spchol">spchol</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
