<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) ENPC - Jean-Philippe Chancelier
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="plot3d_old_version">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>plot3d_old_version</refname>
    <refpurpose>3D plot of a
  surface</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>plot3d(x,y,z,[theta,alpha,leg,flag,ebox])
plot3d(x,y,z,&lt;opt_args&gt;)

plot3d(xf,yf,zf,[theta,alpha,leg,flag,ebox])
plot3d(xf,yf,zf,&lt;opt_args&gt;)

plot3d(xf,yf,list(zf,colors),[theta,alpha,leg,flag,ebox])
plot3d(xf,yf,list(zf,colors),&lt;opt_args&gt;)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Parameters</title>
    <variablelist>
      <varlistentry>
        <term>x,y</term>
        <listitem>
          <para>row vectors of sizes n1 and n2 (x-axis and y-axis
          coordinates). These coordinates must be monotone.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>z</term>
        <listitem>
          <para>matrix of size (n1,n2). <literal>z(i,j)</literal> is the value of
          the surface at the point (x(i),y(j)).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>xf,yf,zf</term>
        <listitem>
          <para>matrices of size (nf,n). They define the facets used to draw
          the surface. There are <literal>n</literal> facets. Each facet
          <literal>i</literal> is defined by a polygon with <literal>nf</literal> points.
          The x-axis, y-axis and z-axis coordinates of the points of the ith
          facet are given respectively by <literal>xf(:,i)</literal>,
          <literal>yf(:,i)</literal> and <literal>zf(:,i)</literal>.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>colors</term>
        <listitem>
          <para>a vector of size n giving the color of each facets or a matrix
          of size (nf,n) giving color near each facet boundary (facet color is
          interpolated )</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>&lt;opt_args&gt;</term>
        <listitem>
          <para>This represents a sequence of statements <literal>key1=value1, key2=value2</literal>,... where <literal>key1</literal>,
          <literal>key2,...</literal> can be one of the following: theta, alpha
          ,leg,flag,ebox (see definition below)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>theta, alpha</term>
        <listitem>
          <para>real values giving in degree the spherical coordinates of the
          observation point.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>leg</term>
        <listitem>
          <para>string defining the captions for each axis with @ as a field
          separator, for example "X@Y@Z".</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>flag</term>
        <listitem>
          <para>a real vector of size three
          <literal>flag=[mode,type,box]</literal>.</para>
          <variablelist>
            <varlistentry>
              <term>mode</term>
              <listitem>
                <para>string (treatment of hidden parts).</para>
                <variablelist>
                  <varlistentry>
                    <term>mode&gt;0</term>
                    <listitem>
                      <para>the hidden parts of the surface are removed and the
                      surface is painted with color <literal>mode</literal>.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>mode=0</term>
                    <listitem>
                      <para>the hidden parts of the surface are drawn.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>mode&lt;0</term>
                    <listitem>
                      <para>only the backward facing facets are painted with
                      color or pattern id <literal>-mode</literal>. Use
                      <literal>xset()</literal> to see the meaning of the ids.</para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>type</term>
              <listitem>
                <para>an integer (scaling).</para>
                <variablelist>
                  <varlistentry>
                    <term>type=0</term>
                    <listitem>
                      <para>the plot is made using the current 3D scaling (set
                      by a previous call to <literal>param3d</literal>,
                      <literal>plot3d</literal>, <literal>contour</literal> or
                      <literal>plot3d1</literal>).</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>type=1</term>
                    <listitem>
                      <para>rescales automatically 3d boxes with extreme aspect
                      ratios, the boundaries are specified by the value of the
                      optional argument <literal>ebox</literal>.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>type=2</term>
                    <listitem>
                      <para>rescales automatically 3d boxes with extreme aspect
                      ratios, the boundaries are computed using the given
                      data.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>type=3</term>
                    <listitem>
                      <para>3d isometric with box bounds given by optional
                      <literal>ebox</literal>, similarily to
                      <literal>type=1</literal></para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>type=4</term>
                    <listitem>
                      <para>3d isometric bounds derived from the data, to
                      similarily<literal>type=2</literal></para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>type=5</term>
                    <listitem>
                      <para>3d expanded isometric bounds with box bounds given
                      by optional <literal>ebox</literal>, similarily to
                      <literal>type=1</literal></para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>type=6</term>
                    <listitem>
                      <para>3d expanded isometric bounds derived from the data,
                      similarily to <literal>type=2</literal></para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>box</term>
              <listitem>
                <para>an integer (frame around the plot).</para>
                <variablelist>
                  <varlistentry>
                    <term>box=0</term>
                    <listitem>
                      <para>nothing is drawn around the plot.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>box=1</term>
                    <listitem>
                      <para>unimplemented (like box=0).</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>box=2</term>
                    <listitem>
                      <para>only the axes behind the surface are drawn.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>box=3</term>
                    <listitem>
                      <para>a box surrounding the surface is drawn and captions
                      are added.</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>box=4</term>
                    <listitem>
                      <para>a box surrounding the surface is drawn, captions and
                      axes are added.</para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>ebox</term>
        <listitem>
          <para>used when <literal>type</literal> in <literal>flag</literal> is 1. It
          specifies the boundaries of the plot as the vector
          <literal>[xmin,xmax,ymin,ymax,zmin,zmax]</literal>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>plot3d(x,y,z,[theta,alpha,leg,flag,ebox])</literal> draws the
    parametric surface <literal>z=f(x,y)</literal>.</para>
    <para><literal>plot3d(xf,yf,zf,[theta,alpha,leg ,flag,ebox])</literal> draws a
    surface defined by a set of facets. You can draw multiple plots by
    replacing <literal>xf</literal>, <literal>yf</literal> and <literal>zf</literal> by multiple
    matrices assembled by rows as <literal>[xf1 xf2 ...]</literal>, 
    <literal>[yf1 yf2 ...]</literal> and <literal>[zf1 zf2 ...]</literal>.</para>
    <para>You can give a specific color for each facet by using
    <literal>list(zf,colors)</literal> instead of <literal>zf</literal>, where
    <literal>colors</literal> is a vector of size <literal>n</literal>. If
    <literal>colors(i)</literal> is positive it gives the color of facet
    <literal>i</literal> and the boundary of the facet is drawn with current line
    style and color. If <literal>colors(i)</literal> is negative, color id
    <literal>-colors(i)</literal> is used and the boundary of the facet is not
    drawn. Use <literal>xset()</literal> to see the ids of the colors.</para>
    <para>It is also possible to get interpolated color for facets. For that the
    color argument must be a matrix of size nfxn giving the color near each
    boundary of each facets. In this case positive values for colors mean that
    the boundary are not drawn.</para>
    <para>The optional arguments <literal>theta,alpha,leg ,flag,ebox</literal>, can be
    passed by a sequence of statements <literal>key1=value1, key2=value2</literal>,
    ... In this case, the order has no special meaning.</para>
    <para>You can use the function <literal>genfac3d</literal> to compute four sided
    facets from the surface <literal>z=f(x,y)</literal>. <literal>eval3dp</literal> can
    also be used.</para>
    <para>Enter the command <literal>plot3d()</literal> to see a demo.</para>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[

// simple plot using z=f(x,y)
t=[0:0.3:2*%pi]'; z=sin(t)*cos(t');
plot3d(t,t,z)
// same plot using facets computed by genfac3d
[xx,yy,zz]=genfac3d(t,t,z);
xbasc()
plot3d(xx,yy,zz)
// multiple plots
xbasc()
plot3d([xx xx],[yy yy],[zz 4+zz])
// multiple plots using colors
xbasc()
plot3d([xx xx],[yy yy],list([zz zz+4],[4*ones(1,400) 5*ones(1,400)]))
// simple plot with viewpoint and captions
xbasc()
plot3d(1:10,1:20,10*rand(10,20),35,45,"X@Y@Z",[2,2,3])
// plot of a sphere using facets computed by eval3dp
deff("[x,y,z]=sph(alp,tet)",["x=r*cos(alp).*cos(tet)+orig(1)*ones(tet)";..
  "y=r*cos(alp).*sin(tet)+orig(2)*ones(tet)";..
  "z=r*sin(alp)+orig(3)*ones(tet)"]);
r=1; orig=[0 0 0];
[xx,yy,zz]=eval3dp(sph,linspace(-%pi/2,%pi/2,40),linspace(0,%pi*2,20));
xbasc();plot3d(xx,yy,zz)

xbasc();xset('colormap',hotcolormap(128));
r=0.3;orig=[1.5 0 0];
[xx1,yy1,zz1]=eval3dp(sph,linspace(-%pi/2,%pi/2,40),linspace(0,%pi*2,20));
cc=(xx+zz+2)*32;cc1=(xx1-orig(1)+zz1/r+2)*32;   
xbasc();plot3d1([xx xx1],[yy yy1],list([zz,zz1],[cc cc1]),70,80)

xbasc();plot3d1([xx xx1],[yy yy1],list([zz,zz1],[cc cc1]),theta=70,alpha=80,flag=[5,6,3])
 
  ]]></programlisting>
  </refsection>
  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="eval3dp">eval3dp</link>
      </member>
      <member>
        <link linkend="genfac3d">genfac3d</link>
      </member>
      <member>
        <link linkend="geom3d">geom3d</link>
      </member>
      <member>
        <link linkend="param3d">param3d</link>
      </member>
      <member>
        <link linkend="plot3d1">plot3d1</link>
      </member>
      <member>
        <link linkend="xset">xset</link>
      </member>
    </simplelist>
  </refsection>
  <refsection>
    <title>Authors</title>
    <para>J.Ph.C.</para>
  </refsection>
</refentry>
