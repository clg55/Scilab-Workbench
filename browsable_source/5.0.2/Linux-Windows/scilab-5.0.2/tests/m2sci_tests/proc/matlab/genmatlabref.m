% Copyright INRIA

% Global test variables
TESTS_SUITE_DIR='../../generated_files/';

% Get all test file names
%unix(['rm -f ',TESTS_SUITE_DIR,'*_ref.m']);
test_files=dir([TESTS_SUITE_DIR,'*.m']);
%test_files=struct('name','CONV.m')
% Create reference files
for file_ind=1:size(test_files,1)
  
  testfilename=test_files(file_ind).name;
  if strfind(testfilename,'_ref.m') 
    continue
  end
  
  % ref file
  point=strfind(testfilename,'.');
  reffilename=[testfilename(1:point-1),'_ref.m'];
  
  if exist([TESTS_SUITE_DIR,reffilename],'file')
    disp([TESTS_SUITE_DIR,reffilename,' already exists, generation skipped...'])
    continue
  end
  
  % Open testfile
  testfile=fopen([TESTS_SUITE_DIR,testfilename]);
  
  % Read testfile
  tline=fgetl(testfile);
  testfiletxt=[];
  while ischar(tline)
    testfiletxt{end+1}=tline;
    tline=fgetl(testfile);
  end
  
  % Kill all useless lines
  % - comments which do not give a test number 
  % - empty lines
  lind=1;
  while lind<size(testfiletxt,2)
    testline=char(testfiletxt{lind});
    if ~isempty(strfind(testline,'%')) & isempty(strfind(testline,'TEST'))
      testfiletxt(lind)=[];
    elseif strcmp(testline,'')
      testfiletxt(lind)=[];
    else      
      lind=lind+1;
    end
  end

  % Ref file header
  reffiletxt=[];
  reffiletxt{end+1}=['% Results of execution of ',TESTS_SUITE_DIR,testfilename];
  reffiletxt{end+1}='% Copyright INRIA';
  reffiletxt{end+1}='% File generated by Matlab: PLEASE DO NOT EDIT !';
  reffiletxt{end+1}=['% Matlab version: ',version ];
  reffiletxt{end+1}='';
  
  lind=1;

  while lind<size(testfiletxt,2)
    % Get test number
    testnbline=char(testfiletxt{lind});
    lind=lind+1;
    reffiletxt{end+1}=testnbline;
    
    % Get line to eval
    evalline=char(testfiletxt{lind});
    lind=lind+1;
    
    % Eval test line
    disp(evalline);
    eval(evalline);
    
    % Search output variable names
    outvars=evalline(1:min(strfind(evalline,'='))-1);
    outvars(findstr(outvars,' ')) = '';
    if isempty(strfind(outvars,'['))
      beg=1;
      closebracket=length(outvars)+1;
    else
      beg=2;
      closebracket=strfind(outvars,']');
    end
    comma=strfind(outvars,',');
    comma=[beg-1,comma,closebracket];
    
    % For all outputs
    for k=1:size(comma,2)-1
      % Name
      resname=outvars(comma(k)+1:comma(k+1)-1);

      % Value
      resval=eval(resname);

      % Size
      ressize=mat2str(size(resval));
      ressize=ressize(2:end-1);
 
      reffiletxt{end+1}=['%',resname,'|',ressize,'|',type_infos(resval)];
      
      % Make string from result value
      if ischar(resval)
	if strcmp(resval,'')
	  resvalstr = '''''';
	else
	  resvalstr = makeonerow(resval);
	end
      else
	resvalstr = mat2str(resval);
      end
      % Write result value in ref file
      reffiletxt{end+1}=[resname,' = ',resvalstr];
    end
  end

  % Open ref file
  reffile=fopen([TESTS_SUITE_DIR,reffilename],'w');

  % Write txt in ref file
  lind=1;
  while lind<=size(reffiletxt,2)
    fprintf(reffile,'%s\n',char(reffiletxt{lind}));
    lind=lind+1;
  end
  
  % Close all opened files
  fclose('all');
end


  