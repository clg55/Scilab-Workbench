<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>mfscanf  </TITLE>
  <TYPE>Scilab Function  </TYPE>
  <DATE>May 1999  </DATE>
  <SHORT_DESCRIPTION name=" mscanf "> interface to the C scanf function   </SHORT_DESCRIPTION>
  <SHORT_DESCRIPTION name=" mfscanf"> interface to the C fscanf function   </SHORT_DESCRIPTION>
  <SHORT_DESCRIPTION name=" msscanf"> interface to the C sscanf function   </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[n,v_1,...v_n]=mfscanf(fd,format)  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>L=mfscanf(fd,format)  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>[n,v_1,...v_n]=mscanf(format)  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>L=mscanf(format)  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>[n,v_1,...v_m]=msscanf(format,str)  </CALLING_SEQUENCE_ITEM>
  <CALLING_SEQUENCE_ITEM>L=msscanf(format)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>format  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : a Scilab string describing  the format to use to write  the  remaining  operands.  The format operand follows, as close as possible,  the C printf format operand syntax. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>fd  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    :The fd parameter returned by the function <VERB>mopen</VERB> is used as a file descriptor (it&apos;s a positive integer). When specifying the fd parameter, the value -1 refers to the default file ( i.e the last opened file).
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>str  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : a Scilab string.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>n  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : an integer, the number of data read or -1 if EOL has been encountered before any datum has been read.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>v_i  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : Each function reads characters, interprets them according to a  format,  and  stores  the results in its output arguments.  If more than $n$ output arguments are provided, the last ones  <VERB>v_n+1,...v_m</VERB> are set to empty matrices.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>L  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : a matrix of strings or numbers if data read are homogeous or an mlist of type (cblock) containing a sequence of homogeneous matrices
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    The <VERB>mfscanf</VERB> function reads characters from the stream <VERB>fd</VERB>.
  </P>
  <P>
    The <VERB>mscanf</VERB> function reads characters from Scilab window. 
  </P>
  <P>
    The <VERB>msscanf</VERB> function reads characters from the Scilab string <VERB>str</VERB>.
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
s='1 1.3'
[n,a,b]=msscanf(s,"%i %e")
msscanf(s,"%i %e")


msscanf(" 12\n",'%c%c%c%c') //scan characters

msscanf('0xabc','%x') //scan with hexadecimal format


msscanf('012345abczoo','%[0-9abc]%s')  //[] notation

//create a file with data
u=mopen(TMPDIR+'/foo','w');
t=0.5;mfprintf(u,"%6.3f %6.3f\n",t,sin(t))
t=0.6;mfprintf(u,"%6.3f %6.3f\n",t,sin(t))
mclose(u);
//read the file
u=mopen(TMPDIR+'/foo','r');
[n,a,b]=mfscanf(u,'%e %e')
l=mfscanf(u,'%e %e')
mclose(u);
 ]]></EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>mclose</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>meof</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mfprintf</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>fprintfMat</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mfscanf</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>fscanfMat</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mget</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mgetstr</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mopen</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mprintf</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mput</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mputstr</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mscanf</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mseek</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>mtell</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
