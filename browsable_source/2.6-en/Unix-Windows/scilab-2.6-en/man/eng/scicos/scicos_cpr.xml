<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?> 
<!DOCTYPE MAN SYSTEM "../../man.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>scicos_cpr  </TITLE>
  <TYPE>Scicos data structure  </TYPE>
  <DATE>Janvier 1997  </DATE>
  <SHORT_DESCRIPTION name="scicos_cpr"> Scicos compiled diagram data structure  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>cpr=list(state,sim,cor,corinv)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>state  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : Scilab <VERB>tlist</VERB> contains  initial state. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>state(&apos;x&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : continuous  state vector. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>state(&apos;z&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : discrete  state vector. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>state(&apos;tevts&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of  event dates
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>state(&apos;evtspt&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of event pointers
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>state(&apos;pointi&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : pointer to next event state(&apos;npoint&apos;) : not used yet state(&apos;outtb&apos;) : vector of inputs/outputs initial values.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>sim  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : Scilab <VERB>tlist</VERB>.  Usually generated by Scicos <VERB>Compile</VERB> menu. Some useful entries are:
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;rpar&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of blocks&apos; floating point parameters
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;rpptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblk+1) x 1 vector of integers,    <VERB>sim(&apos;rpar&apos;)(rpptr(i):(rpptr(i+1)-1))</VERB> is the vector of floating point parameters of the <VERB>i</VERB>th block. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;ipar&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of blocks&apos; integer parameters
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;ipptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblk+1) x 1 vector of integers,    <VERB>sim(&apos;ipar&apos;)(ipptr(i):(ipptr(i+1)-1))</VERB> is the vector of integer parameters of the <VERB>i</VERB>th block. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;funs&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of strings containing the names of each block simulation function
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;xptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblk+1) x 1 vector of integers,    <VERB>state(&apos;x&apos;)(xptr(i):(xptr(i+1)-1))</VERB> is the continuous state vector  of the <VERB>i</VERB>th block. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;zptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblk+1) x 1 vector of integers,    <VERB>state(&apos;z&apos;)(zptr(i):(zptr(i+1)-1))</VERB> is the discrete state vector  of the <VERB>i</VERB>th block. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;inpptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblk+1) x 1 vector of integers,   <VERB>inpptr(i+1)-inpptr(i)</VERB> gives the number of input ports. <VERB>inpptr(i)</VERB>th points to the beginning of <VERB>i</VERB>th block inputs  within the indirection table <VERB>inplnk</VERB>.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;inplnk&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : nblink x 1 vector of integers,   <VERB>inplnk(inpptr(i)-1+j)</VERB> is the index of the link connected to the  <VERB>j</VERB>th input port of the <VERB>i</VERB>th block. where <VERB>j</VERB> goes from <VERB>1</VERB> to <VERB>inpptr(i+1)-inpptr(i))</VERB>.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;outptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblk+1) x 1 vector of integers,   <VERB>outptr(i+1)-outptr(i)</VERB> gives the number of output ports. <VERB>outptr(i)</VERB>th points to the beginning of <VERB>i</VERB>th block outputs  within the indirection table <VERB>outlnk</VERB>.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;outlnk&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : nblink x 1 vector of integers,   <VERB>outlnk(outptr(i)-1+j)</VERB> is the index of the link connected to the  <VERB>j</VERB>th output port of the <VERB>i</VERB>th block. where <VERB>j</VERB> goes from <VERB>1</VERB> to <VERB>outptr(i+1)-outptr(i))</VERB>.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;lnkptr&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : (nblink+1) x 1 vector of integers,   <VERB>k</VERB>th  entry points to the beginning of region  within <VERB>outtb</VERB> dedicated to link indexed <VERB>k</VERB>.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;funs&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of strings containing the names of each block simulation function
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>sim(&apos;funtyp&apos;)  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : vector of  block block types.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>cor  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : is a list with same recursive structure as scs_m each leaf  contains the index of associated block in <VERB>cpr</VERB> data structure.
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>corinv  </PARAM_NAME>
  <PARAM_DESCRIPTION>
    : corinv(i) is the path of <VERB>i</VERB> th block defined in <VERB>cpr</VERB> data structure           in the <VERB>scs_m</VERB> data structure. 
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    Scicos compiled diagram data structure contains all information needed
    to simulate the system (see  <VERB>scicosim</VERB>). 
  </P>
  </DESCRIPTION>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK>scicos</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>scicos_model</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>scicos_main</LINK> </SEE_ALSO_ITEM>     <SEE_ALSO_ITEM> <LINK>scicosim</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
