%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 300 212
%%Scilab Postscript File (1995 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------
/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev WhiteLev le {closepath glev Setgray eofill}
	% sinon on utilise le ``gris'' courant
	{  closepath stroke} ifelse 
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev WhiteLev le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev Setgray eofill grestore }
	{ glev WhiteLev 2 add ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave WhiteLev 2 mul 2 add glev sub WhiteLev lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def


%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 

/ColorR [0.000000 0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 1.000000 0.0 1.0] def
/ColorG [0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 0.843137 0.0 1.0] def
/ColorB [0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%--use color 0 
0 Setcolor
fillsolid
[] 0 setdash
/WhiteLev 16 def
/Setgray { WhiteLev div setgray } def 
/Setcolor { WhiteLev div setgray } def 
%--end use color 0 
/Times-Roman findfont 100 scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
fillsolid
[] 0 setdash
[] 0 setdash
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
fillsolid
 0 [2 10] [225.000000 30.000000 2.000000] [750 3710] drawaxis
(-1.0) 635 3902 0  0.00 [635 3812 229 120] Show
(-0.8) 1086 3902 0  0.00 [1086 3812 229 120] Show
(-0.6) 1536 3902 0  0.00 [1536 3812 229 120] Show
(-0.4) 1986 3902 0  0.00 [1986 3812 229 120] Show
(-0.2) 2436 3902 0  0.00 [2436 3812 229 120] Show
(0) 2972 3902 0  0.00 [2972 3812 57 120] Show
(0.2) 3364 3902 0  0.00 [3364 3812 172 120] Show
(0.4) 3814 3902 0  0.00 [3814 3812 172 120] Show
(0.6) 4264 3902 0  0.00 [4264 3812 172 120] Show
(0.8) 4714 3902 0  0.00 [4714 3812 172 120] Show
(1.0) 5164 3902 0  0.00 [5164 3812 172 120] Show
 -90 [2 10] [159.000000 -31.800000 2.000000] [750 3710] drawaxis
(-1.0) 444 3740 0  0.00 [444 3650 229 120] Show
(-0.8) 444 3422 0  0.00 [444 3332 229 120] Show
(-0.6) 444 3104 0  0.00 [444 3014 229 120] Show
(-0.4) 444 2786 0  0.00 [444 2696 229 120] Show
(-0.2) 444 2468 0  0.00 [444 2378 229 120] Show
(0) 616 2150 0  0.00 [616 2060 57 120] Show
(0.2) 501 1832 0  0.00 [501 1742 172 120] Show
(0.4) 501 1514 0  0.00 [501 1424 172 120] Show
(0.6) 501 1196 0  0.00 [501 1106 172 120] Show
(0.8) 501 877 0  0.00 [501 787 172 120] Show
(1.0) 501 559 0  0.00 [501 469 172 120] Show
[] 0 setdash
750 530 4500 3180 setclipzone
[] 0 setdash
 (drawarrows) 452 [ 302]
[862 3630 750 3709 1087 3638 973 3710 1312 3646 1198 3710 1537 3654 1423 3710 1762 3662 1648 3710 
1987 3670 1873 3710 2212 3678 2097 3710 2437 3686 2322 3710 2662 3694 2545 3710 2887 3702 2767 3710 
3112 3710 2887 3709 3232 3710 3112 3702 3453 3710 3337 3694 3676 3710 3562 3686 3901 3710 3787 3678 
4125 3710 4012 3670 4350 3710 4237 3662 4575 3710 4462 3654 4800 3710 4687 3646 5025 3710 4912 3638 
851 3471 750 3550 1076 3479 873 3622 1301 3487 1098 3614 1526 3495 1323 3606 1751 3503 1548 3598 
1976 3511 1773 3590 2201 3519 1998 3582 2426 3527 2223 3574 2651 3535 2448 3566 2876 3543 2673 3558 
3101 3551 2898 3550 3326 3558 3123 3543 3551 3566 3348 3535 3776 3574 3573 3527 4001 3582 3798 3519 
4226 3590 4023 3511 4451 3598 4248 3503 4676 3606 4473 3495 4901 3614 4698 3487 5126 3622 4923 3479 
5250 3550 5148 3471 839 3312 750 3391 1064 3320 885 3463 1289 3328 1110 3455 1514 3336 1335 3447 
1739 3344 1560 3439 1964 3352 1785 3431 2189 3360 2010 3423 2414 3368 2235 3415 2639 3376 2460 3407 
2864 3384 2685 3399 3089 3392 2910 3391 3314 3399 3135 3384 3539 3407 3360 3376 3764 3415 3585 3368 
3989 3423 3810 3360 4214 3431 4035 3352 4439 3439 4260 3344 4664 3447 4485 3336 4889 3455 4710 3328 
5114 3463 4935 3320 5250 3391 5160 3312 828 3153 750 3231 1053 3161 896 3304 1278 3169 1121 3296 
1503 3177 1346 3288 1728 3185 1571 3280 1953 3193 1796 3272 2178 3201 2021 3264 2403 3209 2246 3256 
2628 3217 2471 3248 2853 3225 2696 3240 3078 3233 2921 3232 3303 3240 3146 3225 3528 3248 3371 3217 
3753 3256 3596 3209 3978 3264 3821 3201 4203 3272 4046 3193 4428 3280 4271 3185 4653 3288 4496 3177 
4878 3296 4721 3169 5103 3304 4946 3161 5250 3233 5171 3153 817 2994 750 3072 1042 3002 907 3145 
1267 3010 1132 3137 1492 3018 1357 3129 1717 3026 1582 3121 1942 3034 1807 3113 2167 3042 2032 3105 
2392 3050 2257 3097 2617 3058 2482 3089 2842 3066 2707 3081 3067 3074 2932 3073 3292 3081 3157 3066 
3517 3089 3382 3058 3742 3097 3607 3050 3967 3105 3832 3042 4192 3113 4057 3034 4417 3121 4282 3026 
4642 3129 4507 3018 4867 3137 4732 3010 5092 3145 4957 3002 5250 3074 5182 2994 806 2835 750 2913 
1031 2843 918 2986 1256 2851 1143 2978 1481 2859 1368 2970 1706 2867 1593 2962 1931 2875 1818 2954 
2156 2883 2043 2946 2381 2891 2268 2938 2606 2899 2493 2930 
] dogrey 
 (drawarrows) 452 [302]
[2831 2907 2718 2922 3056 2915 2943 2914 3281 2922 3168 2907 3506 2930 3393 2899 3731 2938 3618 2891 
3956 2946 3843 2883 4181 2954 4068 2875 4406 2962 4293 2867 4631 2970 4518 2859 4856 2978 4743 2851 
5081 2986 4968 2843 5250 2915 5193 2835 794 2676 750 2754 1019 2684 930 2827 1244 2692 1155 2819 
1469 2700 1380 2811 1694 2708 1605 2803 1919 2716 1830 2795 2144 2724 2055 2787 2369 2732 2280 2779 
2594 2740 2505 2771 2819 2748 2730 2763 3044 2756 2955 2755 3269 2763 3180 2748 3494 2771 3405 2740 
3719 2779 3630 2732 3944 2787 3855 2724 4169 2795 4080 2716 4394 2803 4305 2708 4619 2811 4530 2700 
4844 2819 4755 2692 5069 2827 4980 2684 5250 2756 5205 2676 783 2517 750 2595 1008 2525 941 2668 
1233 2533 1166 2660 1458 2541 1391 2652 1683 2549 1616 2644 1908 2557 1841 2636 2133 2565 2066 2628 
2358 2573 2291 2620 2583 2581 2516 2612 2808 2589 2741 2604 3033 2597 2966 2596 3258 2604 3191 2589 
3483 2612 3416 2581 3708 2620 3641 2573 3933 2628 3866 2565 4158 2636 4091 2557 4383 2644 4316 2549 
4608 2652 4541 2541 4833 2660 4766 2533 5058 2668 4991 2525 5250 2597 5216 2517 772 2358 750 2435 
997 2366 952 2509 1222 2374 1177 2501 1447 2382 1402 2493 1672 2390 1627 2485 1897 2398 1852 2477 
2122 2406 2077 2469 2347 2414 2302 2461 2572 2422 2527 2453 2797 2430 2752 2445 3022 2438 2977 2437 
3247 2445 3202 2430 3472 2453 3427 2422 3697 2461 3652 2414 3922 2469 3877 2406 4147 2477 4102 2398 
4372 2485 4327 2390 4597 2493 4552 2382 4822 2501 4777 2374 5047 2509 5002 2366 5250 2439 5227 2358 
761 2199 750 2275 986 2207 963 2350 1211 2215 1188 2342 1436 2223 1413 2334 1661 2231 1638 2326 
1886 2239 1863 2318 2111 2247 2088 2310 2336 2255 2313 2302 2561 2263 2538 2294 2786 2271 2763 2286 
3011 2279 2988 2278 3236 2286 3213 2271 3461 2294 3438 2263 3686 2302 3663 2255 3911 2310 3888 2247 
4136 2318 4113 2239 4361 2326 4338 2231 4586 2334 4563 2223 4811 2342 4788 2215 5036 2350 5013 2207 
5250 2281 5238 2199 750 2199 750 2199 974 2048 975 2191 1199 2056 1200 2183 1424 2064 1425 2175 
1649 2072 1650 2167 1874 2080 1875 2159 2099 2088 2100 2151 2324 2096 2325 2143 2549 2104 2550 2135 
2774 2112 2775 2127 2999 2120 3000 2119 3224 2127 3225 2112 3449 2135 3450 2104 3674 2143 3675 2096 
3899 2151 3900 2088 4124 2159 4125 2080 4349 2167 4350 2072 
] dogrey 
 (drawarrows) 452 [302]
[4574 2175 4575 2064 4799 2183 4800 2056 5024 2191 5025 2048 5249 2199 5250 2040 750 1963 761 2040 
963 1889 986 2032 1188 1897 1211 2024 1413 1905 1436 2016 1638 1913 1661 2008 1863 1921 1886 2000 
2088 1929 2111 1992 2313 1937 2336 1984 2538 1945 2561 1976 2763 1953 2786 1968 2988 1961 3011 1960 
3213 1968 3236 1953 3438 1976 3461 1945 3663 1984 3686 1937 3888 1992 3911 1929 4113 2000 4136 1921 
4338 2008 4361 1913 4563 2016 4586 1905 4788 2024 4811 1897 5013 2032 5036 1889 5238 2040 5250 1957 
750 1803 772 1881 952 1730 997 1873 1177 1738 1222 1865 1402 1746 1447 1857 1627 1754 1672 1849 
1852 1762 1897 1841 2077 1770 2122 1833 2302 1778 2347 1825 2527 1786 2572 1817 2752 1794 2797 1809 
2977 1802 3022 1801 3202 1809 3247 1794 3427 1817 3472 1786 3652 1825 3697 1778 3877 1833 3922 1770 
4102 1841 4147 1762 4327 1849 4372 1754 4552 1857 4597 1746 4777 1865 4822 1738 5002 1873 5047 1730 
5227 1881 5250 1799 750 1643 783 1722 941 1571 1008 1714 1166 1579 1233 1706 1391 1587 1458 1698 
1616 1595 1683 1690 1841 1603 1908 1682 2066 1611 2133 1674 2291 1619 2358 1666 2516 1627 2583 1658 
2741 1635 2808 1650 2966 1643 3033 1642 3191 1650 3258 1635 3416 1658 3483 1627 3641 1666 3708 1619 
3866 1674 3933 1611 4091 1682 4158 1603 4316 1690 4383 1595 4541 1698 4608 1587 4766 1706 4833 1579 
4991 1714 5058 1571 5216 1722 5250 1641 750 1483 794 1562 930 1411 1019 1554 1155 1419 1244 1546 
1380 1427 1469 1538 1605 1435 1694 1530 1830 1443 1919 1522 2055 1451 2144 1514 2280 1459 2369 1506 
2505 1467 2594 1498 2730 1475 2819 1490 2955 1483 3044 1482 3180 1490 3269 1475 3405 1498 3494 1467 
3630 1506 3719 1459 3855 1514 3944 1451 4080 1522 4169 1443 4305 1530 4394 1435 4530 1538 4619 1427 
4755 1546 4844 1419 4980 1554 5069 1411 5205 1562 5250 1481 750 1324 806 1403 918 1252 1031 1395 
1143 1260 1256 1387 1368 1268 1481 1379 1593 1276 1706 1371 1818 1284 1931 1363 2043 1292 2156 1355 
2268 1300 2381 1347 2493 1308 2606 1339 2718 1316 2831 1331 2943 1324 3056 1323 3168 1331 3281 1316 
3393 1339 3506 1308 3618 1347 3731 1300 3843 1355 3956 1292 4068 1363 4181 1284 4293 1371 4406 1276 
4518 1379 4631 1268 4743 1387 4856 1260 4968 1395 5081 1252 5193 1403 5250 1322 750 1165 817 1244 
907 1093 1042 1236 1132 1101 1267 1228 1357 1109 1492 1220 
] dogrey 
 (drawarrows) 400 [302]
[1582 1117 1717 1212 1807 1125 1942 1204 2032 1133 2167 1196 2257 1141 2392 1188 2482 1149 2617 1180 
2707 1157 2842 1172 2932 1165 3067 1164 3157 1172 3292 1157 3382 1180 3517 1149 3607 1188 3742 1141 
3832 1196 3967 1133 4057 1204 4192 1125 4282 1212 4417 1117 4507 1220 4642 1109 4732 1228 4867 1101 
4957 1236 5092 1093 5182 1244 5250 1163 750 1006 828 1085 896 934 1053 1077 1121 942 1278 1069 
1346 950 1503 1061 1571 958 1728 1053 1796 966 1953 1045 2021 974 2178 1037 2246 982 2403 1029 
2471 990 2628 1021 2696 998 2853 1013 2921 1006 3078 1005 3146 1013 3303 998 3371 1021 3528 990 
3596 1029 3753 982 3821 1037 3978 974 4046 1045 4203 966 4271 1053 4428 958 4496 1061 4653 950 
4721 1069 4878 942 4946 1077 5103 934 5171 1085 5250 1004 750 846 839 926 885 775 1064 918 
1110 783 1289 910 1335 791 1514 902 1560 799 1739 894 1785 807 1964 886 2010 815 2189 878 
2235 823 2414 870 2460 831 2639 862 2685 839 2864 854 2910 847 3089 846 3135 854 3314 839 
3360 862 3539 831 3585 870 3764 823 3810 878 3989 815 4035 886 4214 807 4260 894 4439 799 
4485 902 4664 791 4710 910 4889 783 4935 918 5114 775 5160 926 5250 846 750 687 851 767 
873 616 1076 759 1098 624 1301 751 1323 632 1526 743 1548 640 1751 735 1773 648 1976 727 
1998 656 2201 719 2223 664 2426 711 2448 672 2651 703 2673 680 2876 695 2898 688 3101 687 
3123 695 3326 680 3348 703 3551 672 3573 711 3776 664 3798 719 4001 656 4023 727 4226 648 
4248 735 4451 640 4473 743 4676 632 4698 751 4901 624 4923 759 5126 616 5148 767 5250 687 
975 530 1087 601 1200 530 1312 593 1425 530 1537 585 1650 530 1762 577 1875 530 1987 569 
2101 530 2212 561 2326 530 2437 553 2553 530 2662 545 2782 530 2887 537 2887 530 2887 530 
3112 537 3217 530 3337 545 3445 530 3562 553 3672 530 3787 561 3897 530 4012 569 4123 530 
4237 577 4348 530 4462 585 4573 530 4687 593 4798 530 4912 601 5023 530 5137 609 5248 530 
] dogrey 
[] 0 setdash
-1 -1 200000 200000 setclipzone
/Times-Roman findfont 140 scalefont setfont
(Vector field plot ) 2182 236 0  0.00 [2182 116 1402 150] Show
(\(with champ command\) ) 2182 415 0  0.00 [2182 295 1635 150] Show
 showpage

 end saved restore 
