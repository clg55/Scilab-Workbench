<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="articul">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>articul</refname>
    <refpurpose> finds one or more articulation points</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>nart = articul([i],g)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Parameters</title>
    <variablelist>
      <varlistentry>
        <term>g</term>
        <listitem>
          <para>:a graph (see <link linkend="graph_data_structure">graph_data_structure</link>).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>i</term>
        <listitem>
          <para>integer</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>nart</term>
        <listitem>
          <para>integer row vector</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para> An articulation of a connected graph is a node whose removal
    will disconnect the graph. In general, an articulation vertex is a
    node of a graph whose removal increases the number of
    components.</para>
    <para><literal>articul</literal> finds one or more articulation points (if
    they exist) of the graph <literal>g</literal>. <literal>nart</literal> is the
    row vector of numbers of articulation nodes: deleting one of these
    nodes increases the number of connected components of the graph.
    <literal>i</literal> is the optional node number from which the
    algorithm starts.  The default is 1. Note that the result depends
    strongly on this starting node.</para>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[

ta=[2  1 3 2 2 4 4 5 6 7 8 8 9 10 10 10 10 11 12 13 14 15 16 17 17];
he=[1 10 2 5 7 3 2 4 5 8 6 9 7  7 11 13 15 12 13 14 11 16 17 14 15];
g=make_graph('foo',1,17,ta,he);
g.nodes.graphics.x=[283 163 63 57 164 164 273 271 339 384 504 513 439 623 631 757 642]/2;
g.nodes.graphics.y=[59 133 223 318 227 319 221 324 432 141 209 319 428 443 187 151 301]/2;
show_graph(g);
nart = articul(g)
hilite_nodes(nart);
 
  ]]></programlisting>
  </refsection>
  <refsection>
    <title>Bibliography</title>
    <para>Chartrand, G. "Cut-Vertices and Bridges." §2.4 in Introductory Graph Theory. New York: Dover, pp. 45-49, 1985. </para>
    <para>Harary, F. Graph Theory. Reading, MA: Addison-Wesley, 1994.</para>
  </refsection>
</refentry>
