<?xml version="1.0" encoding="ISO-8859-1"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="fr" xml:id="sort">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>sort</refname>
    <refpurpose> tri par ordre décroissant  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Séquence d'appel</title>
    <synopsis>[s, [k]]=sort(v)
[s, [k]]=sort(v,'r')
[s, [k]]=sort(v,'c')</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Paramètres</title>
    <variablelist>
      <varlistentry>
        <term>v,s  </term>
        <listitem>
          <para>vecteur (plein ou creux) ou matrice de nombres réels ou de chaînes de caractères.
</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>k  </term>
        <listitem>
          <para>vecteur ou matrice de nombres entiers.
</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para> la fonction  <literal>sort</literal>  est désormais obsolete elle peut être
    remplacée par la fonction <link linkend="gsort">gsort</link>. </para>
    <para><literal>s=sort(v)</literal> trie <literal>v</literal> par ordre décroissant.
    Si <literal>v</literal> est une matrice, cette instruction produit un tri de la 
    matrice <literal>v</literal> vue comme un vecteur <literal>v(:)</literal> (les colonnes sont empilées).
    <literal>[s,k]=sort(v)</literal> donne de plus les indices des termes de
    <literal>s</literal> dans <literal>v</literal>, c'est à dire que <literal>v(k(:)) </literal> est le vecteur <literal>s</literal>.
  </para>
    <para><literal>s=sort(v,'r')</literal> effectue le tri par ordre décroissant de <literal>v</literal> suivant l'indice de ligne : chaque colonne de <literal>s</literal> est obtenue à partir de la colonne de <literal>v</literal> correspondante triée par ordre décroissant.
    <literal>[s,k]=sort(v,'r')</literal> renvoie de plus dans chaque colonne de <literal>k</literal>
    les indices tels que <literal>v(k(:,i),i)=s(:,i)</literal> pour chaque indice de colonne <literal>i</literal>.
  </para>
    <para><literal>s=sort(v,'c')</literal> effectue le tri par ordre décroissant de <literal>v</literal> suivant l'indice de colonne : chaque ligne de <literal>s</literal> est obtenue à partir de la ligne de <literal>v</literal> correspondante triée par ordre décroissant.
  </para>
    <para><literal>[s,k]=sort(v,'c')</literal> renvoie de plus dans chaque ligne de <literal>k</literal>
    les indices tels que <literal>v(i,k(i,:))=s(i,:)</literal> pour chaque indice de ligne <literal>i</literal>.
  </para>
    <para>
    Les matrices ou vecteurs complexes sont triés par rapport au module complexe.
  </para>
    <para><literal>y=sort(A)</literal> est valide quand <literal>A</literal> est un vecteur creux. le tri suivant les lignes ou les colonnes n'est pas implémenté pour les matrices creuses.
  </para>
  </refsection>
  <refsection>
    <title>Exemples</title>
    <programlisting role="example"><![CDATA[
[s,p]=sort(rand(1,10));
// p est une permutation aléatoire de 1:10
A=[1,2,5;3,4,2];
[A_trie,q]=sort(A);A(q(:))-A_trie(:)
v=1:10;
sort(v)
sort(v')
sort(v,'r')  // ne fait rien pour les vecteurs lignes
sort(v,'c')
 ]]></programlisting>
  </refsection>
  <refsection>
    <title>Voir Aussi</title>
    <simplelist type="inline">
      <member>
        <link linkend="find">find</link>
      </member>
      <member>
        <link linkend="gsort">gsort</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
