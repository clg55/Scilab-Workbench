%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev 2 add Setcolor  eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def


% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop


%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 242 4500 1450 
] dogrey 
0 Setcolor
/Times-Roman findfont 80 scf mul scalefont setfont
(1) 727 1817 0  0.00 [727 1747 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 613 1937 0  0.00 [613 1847 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[750 1692 750 1721 
] dogrey 
0 Setcolor
(2) 2227 1817 0  0.00 [2227 1747 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 2113 1937 0  0.00 [2113 1847 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[2250 1692 2250 1721 
] dogrey 
0 Setcolor
(3) 3727 1817 0  0.00 [3727 1747 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 3613 1937 0  0.00 [3613 1847 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[3750 1692 3750 1721 
] dogrey 
0 Setcolor
(4) 5227 1817 0  0.00 [5227 1747 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 5113 1937 0  0.00 [5113 1847 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[5250 1692 5250 1721 
] dogrey 
0 Setcolor
/Times-Roman findfont 100 scf mul scalefont setfont
(-160) 449 1752 0  0.00 [449 1662 229 120] Show
 (drawsegs) 4 [ 0]
[750 1692 690 1692 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1571 720 1571 
] dogrey 
0 Setcolor
(-150) 449 1510 0  0.00 [449 1420 229 120] Show
 (drawsegs) 4 [ 0]
[750 1450 690 1450 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1329 720 1329 
] dogrey 
0 Setcolor
(-140) 449 1268 0  0.00 [449 1178 229 120] Show
 (drawsegs) 4 [ 0]
[750 1208 690 1208 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 1088 720 1088 
] dogrey 
0 Setcolor
(-130) 449 1027 0  0.00 [449 937 229 120] Show
 (drawsegs) 4 [ 0]
[750 967 690 967 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 846 720 846 
] dogrey 
0 Setcolor
(-120) 449 785 0  0.00 [449 695 229 120] Show
 (drawsegs) 4 [ 0]
[750 725 690 725 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 604 720 604 
] dogrey 
0 Setcolor
(-110) 449 543 0  0.00 [449 453 229 120] Show
 (drawsegs) 4 [ 0]
[750 483 690 483 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 363 720 363 
] dogrey 
0 Setcolor
(-100) 449 302 0  0.00 [449 212 229 120] Show
 (drawsegs) 4 [ 0]
[750 242 690 242 
] dogrey 
0 Setcolor
0 Setcolor
750 242 4500 1450 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2e put
 (drawpolymark) 2 [ 0]
[750 1495 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
3 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1202 242 1202 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1466 242 1466 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1653 242 1653 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1798 242 1798 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1917 242 1917 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2018 242 2018 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2105 242 2105 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2181 242 2181 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 242 2250 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 242 2250 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2702 242 2702 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2966 242 2966 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3153 242 3153 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3298 242 3298 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3417 242 3417 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3518 242 3518 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3605 242 3605 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3681 242 3681 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 242 3750 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 242 3750 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4202 242 4202 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4466 242 4466 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4653 242 4653 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4798 242 4798 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4917 242 4917 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5018 242 5018 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5105 242 5105 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5181 242 5181 1692 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 484 5250 484 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 725 5250 725 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 967 5250 967 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 1209 5250 1209 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 1450 5250 1450 
] dogrey 
3 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
0 Setcolor
750 242 4500 1450 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 404 [ 0]
[750 533 765 533 780 532 795 532 810 532 825 532 840 532 855 532 870 532 885 532 
900 531 915 531 930 531 945 531 960 531 975 531 990 530 1005 530 1020 530 1035 530 
1050 530 1065 529 1080 529 1095 529 1110 529 1125 528 1140 528 1155 528 1170 527 1185 527 
1200 527 1215 526 1230 526 1245 525 1260 525 1275 525 1290 524 1305 524 1320 523 1335 522 
1350 522 1365 521 1380 521 1395 520 1410 519 1425 518 1440 518 1455 517 1470 516 1485 515 
1500 514 1515 513 1530 512 1545 511 1560 510 1575 508 1590 507 1605 506 1620 504 1635 503 
1650 501 1665 500 1680 498 1695 496 1710 494 1725 492 1740 490 1755 487 1770 485 1785 482 
1800 479 1815 476 1830 473 1845 470 1860 466 1875 463 1890 459 1905 455 1920 450 1935 445 
1950 440 1965 435 1980 429 1995 423 2010 416 2025 409 2040 402 2055 394 2070 385 2085 376 
2100 366 2115 356 2130 345 2145 334 2160 322 2175 310 2190 299 2205 290 2220 282 2235 278 
2250 278 2265 283 2280 293 2295 307 2310 324 2325 343 2340 364 2355 385 2370 407 2385 428 
2400 448 2415 468 2430 488 2445 506 2460 525 2475 542 2490 560 2505 576 2520 592 2535 608 
2550 624 2565 639 2580 654 2595 668 2610 682 2625 696 2640 710 2655 723 2670 736 2685 749 
2700 762 2715 774 2730 787 2745 799 2760 811 2775 823 2790 835 2805 847 2820 859 2835 870 
2850 882 2865 893 2880 904 2895 915 2910 927 2925 938 2940 949 2955 959 2970 970 2985 981 
3000 992 3015 1002 3030 1013 3045 1024 3060 1034 3075 1045 3090 1055 3105 1066 3120 1076 3135 1086 
3150 1097 3165 1107 3180 1117 3195 1127 3210 1138 3225 1148 3240 1158 3255 1168 3270 1178 3285 1188 
3300 1198 3315 1208 3330 1218 3345 1228 3360 1238 3375 1248 3390 1258 3405 1268 3420 1278 3435 1288 
3450 1298 3465 1308 3480 1318 3495 1328 3510 1338 3525 1348 3540 1357 3555 1367 3570 1377 3585 1387 
3600 1397 3615 1407 3630 1416 3645 1426 3660 1436 3675 1446 3690 1456 3705 1465 3720 1475 3735 1485 
3750 1495 3750 1495 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(Magnitude ) 2713 169 0  0.00 [2713 79 574 120] Show
( Hz) 5539 1619 0  0.00 [5539 1529 172 120] Show
(db) 1068 230 0  0.00 [1068 140 114 120] Show
0 Setcolor
 (drawbox) 4 [ 0]
[750 2277 4500 1450 
] dogrey 
0 Setcolor
/Times-Roman findfont 80 scf mul scalefont setfont
(1) 727 3852 0  0.00 [727 3782 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 613 3972 0  0.00 [613 3882 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[750 3727 750 3756 
] dogrey 
0 Setcolor
(2) 2227 3852 0  0.00 [2227 3782 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 2113 3972 0  0.00 [2113 3882 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[2250 3727 2250 3756 
] dogrey 
0 Setcolor
(3) 3727 3852 0  0.00 [3727 3782 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 3613 3972 0  0.00 [3613 3882 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[3750 3727 3750 3756 
] dogrey 
0 Setcolor
(4) 5227 3852 0  0.00 [5227 3782 46 90] Show
/Times-Roman findfont 100 scf mul scalefont setfont
(10) 5113 3972 0  0.00 [5113 3882 114 120] Show
/Times-Roman findfont 80 scf mul scalefont setfont
 (drawsegs) 4 [ 0]
[5250 3727 5250 3756 
] dogrey 
0 Setcolor
/Times-Roman findfont 100 scf mul scalefont setfont
(180) 506 3787 0  0.00 [506 3697 172 120] Show
 (drawsegs) 4 [ 0]
[750 3727 690 3727 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3646 720 3646 
] dogrey 
0 Setcolor
(200) 506 3626 0  0.00 [506 3536 172 120] Show
 (drawsegs) 4 [ 0]
[750 3566 690 3566 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3485 720 3485 
] dogrey 
0 Setcolor
(220) 506 3465 0  0.00 [506 3375 172 120] Show
 (drawsegs) 4 [ 0]
[750 3405 690 3405 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3324 720 3324 
] dogrey 
0 Setcolor
(240) 506 3304 0  0.00 [506 3214 172 120] Show
 (drawsegs) 4 [ 0]
[750 3244 690 3244 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3163 720 3163 
] dogrey 
0 Setcolor
(260) 506 3142 0  0.00 [506 3052 172 120] Show
 (drawsegs) 4 [ 0]
[750 3082 690 3082 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 3002 720 3002 
] dogrey 
0 Setcolor
(280) 506 2981 0  0.00 [506 2891 172 120] Show
 (drawsegs) 4 [ 0]
[750 2921 690 2921 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2841 720 2841 
] dogrey 
0 Setcolor
(300) 506 2820 0  0.00 [506 2730 172 120] Show
 (drawsegs) 4 [ 0]
[750 2760 690 2760 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2680 720 2680 
] dogrey 
0 Setcolor
(320) 506 2659 0  0.00 [506 2569 172 120] Show
 (drawsegs) 4 [ 0]
[750 2599 690 2599 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2519 720 2519 
] dogrey 
0 Setcolor
(340) 506 2498 0  0.00 [506 2408 172 120] Show
 (drawsegs) 4 [ 0]
[750 2438 690 2438 
] dogrey 
0 Setcolor
 (drawsegs) 4 [ 0]
[750 2357 720 2357 
] dogrey 
0 Setcolor
(360) 506 2337 0  0.00 [506 2247 172 120] Show
 (drawsegs) 4 [ 0]
[750 2277 690 2277 
] dogrey 
0 Setcolor
0 Setcolor
750 2277 4500 1450 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2e put
 (drawpolymark) 2 [ 0]
[750 3713 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
3 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1202 2277 1202 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1466 2277 1466 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1653 2277 1653 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1798 2277 1798 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1917 2277 1917 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2018 2277 2018 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2105 2277 2105 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2181 2277 2181 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 2277 2250 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2250 2277 2250 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2702 2277 2702 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2966 2277 2966 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3153 2277 3153 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3298 2277 3298 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3417 2277 3417 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3518 2277 3518 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3605 2277 3605 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3681 2277 3681 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 2277 3750 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3750 2277 3750 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4202 2277 4202 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4466 2277 4466 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4653 2277 4653 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4798 2277 4798 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4917 2277 4917 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5018 2277 5018 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5105 2277 5105 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[5181 2277 5181 3727 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2438 5250 2438 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2599 5250 2599 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2760 5250 2760 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2921 5250 2921 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3083 5250 3083 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3244 5250 3244 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3405 5250 3405 
] dogrey 
3 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[750 3566 5250 3566 
] dogrey 
3 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
0 Setcolor
750 2277 4500 1450 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 404 [ 0]
[750 2291 765 2291 780 2291 795 2292 810 2292 825 2292 840 2293 855 2293 870 2293 885 2294 
900 2294 915 2295 930 2295 945 2295 960 2296 975 2296 990 2297 1005 2297 1020 2298 1035 2298 
1050 2299 1065 2299 1080 2300 1095 2301 1110 2301 1125 2302 1140 2302 1155 2303 1170 2304 1185 2304 
1200 2305 1215 2306 1230 2306 1245 2307 1260 2308 1275 2309 1290 2310 1305 2310 1320 2311 1335 2312 
1350 2313 1365 2314 1380 2315 1395 2316 1410 2317 1425 2318 1440 2319 1455 2320 1470 2322 1485 2323 
1500 2324 1515 2326 1530 2327 1545 2328 1560 2330 1575 2331 1590 2333 1605 2335 1620 2337 1635 2338 
1650 2340 1665 2342 1680 2344 1695 2347 1710 2349 1725 2351 1740 2354 1755 2357 1770 2360 1785 2363 
1800 2366 1815 2369 1830 2373 1845 2377 1860 2381 1875 2385 1890 2390 1905 2395 1920 2400 1935 2406 
1950 2413 1965 2420 1980 2427 1995 2436 2010 2445 2025 2455 2040 2467 2055 2480 2070 2494 2085 2511 
2100 2529 2115 2551 2130 2575 2145 2604 2160 2637 2175 2676 2190 2721 2205 2773 2220 2832 2235 2897 
2250 2967 2265 3039 2280 3109 2295 3174 2310 3233 2325 3285 2340 3329 2355 3368 2370 3401 2385 3429 
2400 3454 2415 3475 2430 3494 2445 3510 2460 3525 2475 3537 2490 3549 2505 3559 2520 3568 2535 3577 
2550 3584 2565 3591 2580 3598 2595 3604 2610 3609 2625 3614 2640 3619 2655 3623 2670 3627 2685 3631 
2700 3635 2715 3638 2730 3641 2745 3644 2760 3647 2775 3650 2790 3653 2805 3655 2820 3657 2835 3660 
2850 3662 2865 3664 2880 3666 2895 3667 2910 3669 2925 3671 2940 3672 2955 3674 2970 3676 2985 3677 
3000 3678 3015 3680 3030 3681 3045 3682 3060 3683 3075 3685 3090 3686 3105 3687 3120 3688 3135 3689 
3150 3690 3165 3691 3180 3692 3195 3693 3210 3693 3225 3694 3240 3695 3255 3696 3270 3697 3285 3697 
3300 3698 3315 3699 3330 3700 3345 3700 3360 3701 3375 3702 3390 3702 3405 3703 3420 3703 3435 3704 
3450 3704 3465 3705 3480 3706 3495 3706 3510 3707 3525 3707 3540 3707 3555 3708 3570 3708 3585 3709 
3600 3709 3615 3710 3630 3710 3645 3710 3660 3711 3675 3711 3690 3712 3705 3712 3720 3712 3735 3713 
3750 3713 3750 3713 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(Phase ) 2828 2204 0  0.00 [2828 2114 344 120] Show
( Hz) 5539 3654 0  0.00 [5539 3564 172 120] Show
(degrees) 924 2265 0  0.00 [924 2175 401 120] Show
 showpage

 end saved restore 

