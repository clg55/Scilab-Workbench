%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 300 212
%%Scilab Postscript File (1995 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------
/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev WhiteLev le {closepath glev Setgray eofill}
	% sinon on utilise le ``gris'' courant
	{  closepath stroke} ifelse 
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev WhiteLev le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev Setgray eofill grestore }
	{ glev WhiteLev 2 add ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave WhiteLev 2 mul 2 add glev sub WhiteLev lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def


%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 

/ColorR [0.000000 0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 1.000000 0.0 1.0] def
/ColorG [0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 0.843137 0.0 1.0] def
/ColorB [0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
0 Setcolor
/Times-Roman findfont 100 scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%--use color 0 
0 Setcolor
fillsolid
[] 0 setdash
/WhiteLev 16 def
/Setgray { WhiteLev div setgray } def 
/Setcolor { WhiteLev div setgray } def 
%--end use color 0 
/Times-Roman findfont 100 scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
16 Setgray
[] 0 setdash
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
16 Setgray
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(0.000) 607 3906 0  0.00 [607 3816 287 120] Show
(0.628) 1057 3906 0  0.00 [1057 3816 287 120] Show
(1.257) 1507 3906 0  0.00 [1507 3816 287 120] Show
(1.885) 1957 3906 0  0.00 [1957 3816 287 120] Show
(2.513) 2407 3906 0  0.00 [2407 3816 287 120] Show
(3.142) 2857 3906 0  0.00 [2857 3816 287 120] Show
(3.770) 3307 3906 0  0.00 [3307 3816 287 120] Show
(4.398) 3757 3906 0  0.00 [3757 3816 287 120] Show
(5.027) 4207 3906 0  0.00 [4207 3816 287 120] Show
(5.655) 4657 3906 0  0.00 [4657 3816 287 120] Show
(6.283) 5107 3906 0  0.00 [5107 3816 287 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(-2.0) 449 3740 0  0.00 [449 3650 229 120] Show
(-1.6) 449 3422 0  0.00 [449 3332 229 120] Show
(-1.2) 449 3104 0  0.00 [449 3014 229 120] Show
(-0.8) 449 2786 0  0.00 [449 2696 229 120] Show
(-0.4) 449 2468 0  0.00 [449 2378 229 120] Show
(0.0) 506 2150 0  0.00 [506 2060 172 120] Show
(0.4) 506 1832 0  0.00 [506 1742 172 120] Show
(0.8) 506 1514 0  0.00 [506 1424 172 120] Show
(1.2) 506 1196 0  0.00 [506 1106 172 120] Show
(1.6) 506 878 0  0.00 [506 788 172 120] Show
(2.0) 506 560 0  0.00 [506 470 172 120] Show
[] 0 setdash
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 126 [ 17]
[750 2120 821 2040 893 1962 964 1885 1036 1810 1108 1738 1179 1671 1251 1607 1322 1549 1394 1497 
1466 1451 1537 1411 1609 1379 1681 1353 1752 1336 1824 1326 1895 1325 1967 1331 2039 1345 2110 1367 
2182 1397 2254 1433 2325 1477 2397 1527 2468 1583 2540 1644 2612 1710 2683 1780 2755 1853 2826 1929 
2898 2007 2970 2086 3041 2166 3113 2245 3185 2323 3256 2398 3328 2471 3399 2541 3471 2606 3543 2666 
3614 2721 3686 2770 3758 2812 3829 2848 3901 2876 3972 2897 4044 2909 4116 2914 4187 2911 4259 2901 
4330 2882 4402 2856 4474 2822 4545 2781 4617 2734 4689 2680 4760 2621 4832 2557 4903 2489 4975 2417 
5047 2342 5118 2264 5190 2186 
] dogrey 
16 Setgray
/absolu true def
[50 20 50 20 ] 0 setdash
/closeflag false def
 (drawpoly) 126 [ 17]
[750 2120 821 1962 893 1810 964 1671 1036 1549 1108 1451 1179 1379 1251 1336 1322 1325 1394 1345 
1466 1397 1537 1477 1609 1583 1681 1710 1752 1853 1824 2007 1895 2166 1967 2323 2039 2471 2110 2606 
2182 2721 2254 2812 2325 2876 2397 2909 2468 2911 2540 2882 2612 2822 2683 2734 2755 2621 2826 2489 
2898 2342 2970 2186 3041 2027 3113 1872 3185 1727 3256 1597 3328 1489 3399 1405 3471 1350 3543 1326 
3614 1333 3686 1372 3758 1440 3829 1536 3901 1654 3972 1792 4044 1942 4116 2100 4187 2258 4259 2411 
4330 2552 4402 2676 4474 2778 4545 2853 4617 2899 4689 2914 4760 2898 4832 2850 4903 2774 4975 2671 
5047 2546 5118 2404 5190 2251 
] dogrey 
16 Setgray
/absolu true def
[] 0 setdash
/Symbol findfont 80 scalefont setfont
HardMark 0 16#c5 put
 (drawpolymark) 126 [ 15]
[750 2120 821 1885 893 1671 964 1497 1036 1379 1108 1326 1179 1345 1251 1433 1322 1583 1394 1780 
1466 2007 1537 2245 1609 2471 1681 2666 1752 2812 1824 2897 1895 2911 1967 2856 2039 2734 2110 2557 
2182 2342 2254 2106 2325 1872 2397 1660 2468 1489 2540 1374 2612 1326 2683 1348 2755 1440 2826 1592 
2898 1792 2970 2021 3041 2258 3113 2483 3185 2676 3256 2819 3328 2899 3399 2910 3471 2850 3543 2725 
3614 2546 3686 2329 3758 2093 3829 1859 3901 1649 3972 1480 4044 1369 4116 1325 4187 1352 4259 1447 
4330 1603 4402 1804 4474 2034 4545 2271 4617 2495 4689 2685 4760 2825 4832 2902 4903 2909 4975 2845 
5047 2717 5118 2535 5190 2316 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scalefont setfont
[] 0 setdash
-1 -1 200000 200000 setclipzone
fillsolid
/Times-Bold findfont 180 scalefont setfont
5 Thickness
[] 0 setdash
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
fillsolid
[] 0 setdash
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 2 [ 17]
[750 3710 
] dogrey 
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
(PLOTS OF SINUS  ) 1920 434 0  0.00 [1920 284 1555 190] Show
 (drawbox) 4 [ 17]
[1870 265 1589 201 
] dogrey 
fillsolid
[] 0 setdash
 (drawarrows) 4 [ 780]
[2300 1049 2090 1282 
] dogrey 
[] 0 setdash
[] 0 setdash
 (drawarrows) 4 [ 790]
[2880 3063 3240 2946 
] dogrey 
[] 0 setdash
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
%--end use color 1 
0 Setcolor
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 2 [ 17]
[750 3710 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(sinus\(x\)  ) 2180 1049 0  0.00 [2180 959 574 120] Show
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
0 Setcolor
/Times-Roman findfont 100 scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
%--end use color 1 
0 Setcolor
/Times-BoldItalic findfont 140 scalefont setfont
5 Thickness
0 Setcolor
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 2 [ 17]
[750 3710 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(sinus\(3x\)  ) 2540 3127 0  0.00 [2540 3007 856 150] Show
(Values of x  ) 4480 3667 0  0.00 [4480 3547 1012 150] Show
 (fillarc) 6 [ 17]
[3707 1043 825 583 0 23040 
] dogrey 
0 Setcolor
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
0 Setcolor
/Times-Roman findfont 100 scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
%--end use color 1 
0 Setcolor
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 2 [ 17]
[750 3710 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(max  ) 3990 1282 0  0.00 [3990 1192 287 120] Show
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
0 Setcolor
/Times-Roman findfont 100 scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
%--end use color 1 
/Times-Roman findfont 100 scalefont setfont
5 Thickness
0 Setcolor
 (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(0.000) 607 3906 0  0.00 [607 3816 287 120] Show
(0.628) 1057 3906 0  0.00 [1057 3816 287 120] Show
(1.257) 1507 3906 0  0.00 [1507 3816 287 120] Show
(1.885) 1957 3906 0  0.00 [1957 3816 287 120] Show
(2.513) 2407 3906 0  0.00 [2407 3816 287 120] Show
(3.142) 2857 3906 0  0.00 [2857 3816 287 120] Show
(3.770) 3307 3906 0  0.00 [3307 3816 287 120] Show
(4.398) 3757 3906 0  0.00 [3757 3816 287 120] Show
(5.027) 4207 3906 0  0.00 [4207 3816 287 120] Show
(5.655) 4657 3906 0  0.00 [4657 3816 287 120] Show
(6.283) 5107 3906 0  0.00 [5107 3816 287 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(-2.0) 449 3740 0  0.00 [449 3650 229 120] Show
(-1.6) 449 3422 0  0.00 [449 3332 229 120] Show
(-1.2) 449 3104 0  0.00 [449 3014 229 120] Show
(-0.8) 449 2786 0  0.00 [449 2696 229 120] Show
(-0.4) 449 2468 0  0.00 [449 2378 229 120] Show
(0.0) 506 2150 0  0.00 [506 2060 172 120] Show
(0.4) 506 1832 0  0.00 [506 1742 172 120] Show
(0.8) 506 1514 0  0.00 [506 1424 172 120] Show
(1.2) 506 1196 0  0.00 [506 1106 172 120] Show
(1.6) 506 878 0  0.00 [506 788 172 120] Show
(2.0) 506 560 0  0.00 [506 470 172 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 126 [ 17]
[750 2120 821 2040 893 1962 964 1885 1036 1810 1108 1738 1179 1671 1251 1607 1322 1549 1394 1497 
1466 1451 1537 1411 1609 1379 1681 1353 1752 1336 1824 1326 1895 1325 1967 1331 2039 1345 2110 1367 
2182 1397 2254 1433 2325 1477 2397 1527 2468 1583 2540 1644 2612 1710 2683 1780 2755 1853 2826 1929 
2898 2007 2970 2086 3041 2166 3113 2245 3185 2323 3256 2398 3328 2471 3399 2541 3471 2606 3543 2666 
3614 2721 3686 2770 3758 2812 3829 2848 3901 2876 3972 2897 4044 2909 4116 2914 4187 2911 4259 2901 
4330 2882 4402 2856 4474 2822 4545 2781 4617 2734 4689 2680 4760 2621 4832 2557 4903 2489 4975 2417 
5047 2342 5118 2264 5190 2186 
] dogrey 
0 Setcolor
/absolu true def
1 Setcolor
/closeflag false def
 (drawpoly) 126 [ 17]
[750 2120 821 1962 893 1810 964 1671 1036 1549 1108 1451 1179 1379 1251 1336 1322 1325 1394 1345 
1466 1397 1537 1477 1609 1583 1681 1710 1752 1853 1824 2007 1895 2166 1967 2323 2039 2471 2110 2606 
2182 2721 2254 2812 2325 2876 2397 2909 2468 2911 2540 2882 2612 2822 2683 2734 2755 2621 2826 2489 
2898 2342 2970 2186 3041 2027 3113 1872 3185 1727 3256 1597 3328 1489 3399 1405 3471 1350 3543 1326 
3614 1333 3686 1372 3758 1440 3829 1536 3901 1654 3972 1792 4044 1942 4116 2100 4187 2258 4259 2411 
4330 2552 4402 2676 4474 2778 4545 2853 4617 2899 4689 2914 4760 2898 4832 2850 4903 2774 4975 2671 
5047 2546 5118 2404 5190 2251 
] dogrey 
1 Setcolor
/absolu true def
0 Setcolor
/Symbol findfont 80 scalefont setfont
HardMark 0 16#c5 put
 (drawpolymark) 126 [ 0]
[750 2120 821 1885 893 1671 964 1497 1036 1379 1108 1326 1179 1345 1251 1433 1322 1583 1394 1780 
1466 2007 1537 2245 1609 2471 1681 2666 1752 2812 1824 2897 1895 2911 1967 2856 2039 2734 2110 2557 
2182 2342 2254 2106 2325 1872 2397 1660 2468 1489 2540 1374 2612 1326 2683 1348 2755 1440 2826 1592 
2898 1792 2970 2021 3041 2258 3113 2483 3185 2676 3256 2819 3328 2899 3399 2910 3471 2850 3543 2725 
3614 2546 3686 2329 3758 2093 3829 1859 3901 1649 3972 1480 4044 1369 4116 1325 4187 1352 4259 1447 
4330 1603 4402 1804 4474 2034 4545 2271 4617 2495 4689 2685 4760 2825 4832 2902 4903 2909 4975 2845 
5047 2717 5118 2535 5190 2316 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 
