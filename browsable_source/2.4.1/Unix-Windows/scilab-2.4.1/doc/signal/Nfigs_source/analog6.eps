%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(0.000) 607 3906 0  0.00 [607 3816 287 120] Show
(0.248) 1057 3906 0  0.00 [1057 3816 287 120] Show
(0.497) 1507 3906 0  0.00 [1507 3816 287 120] Show
(0.745) 1957 3906 0  0.00 [1957 3816 287 120] Show
(0.993) 2407 3906 0  0.00 [2407 3816 287 120] Show
(1.241) 2857 3906 0  0.00 [2857 3816 287 120] Show
(1.490) 3307 3906 0  0.00 [3307 3816 287 120] Show
(1.738) 3757 3906 0  0.00 [3757 3816 287 120] Show
(1.986) 4207 3906 0  0.00 [4207 3816 287 120] Show
(2.235) 4657 3906 0  0.00 [4657 3816 287 120] Show
(2.483) 5107 3906 0  0.00 [5107 3816 287 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(-1.66) 391 3740 0  0.00 [391 3650 287 120] Show
(-1.16) 391 3422 0  0.00 [391 3332 287 120] Show
(-0.66) 391 3104 0  0.00 [391 3014 287 120] Show
(-0.17) 391 2786 0  0.00 [391 2696 287 120] Show
(0.33) 449 2468 0  0.00 [449 2378 229 120] Show
(0.83) 449 2150 0  0.00 [449 2060 229 120] Show
(1.33) 449 1832 0  0.00 [449 1742 229 120] Show
(1.83) 449 1514 0  0.00 [449 1424 229 120] Show
(2.32) 449 1196 0  0.00 [449 1106 229 120] Show
(2.82) 449 878 0  0.00 [449 788 229 120] Show
(3.32) 449 560 0  0.00 [449 470 229 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 432 [ 0]
[750 2650 841 2650 932 2650 1024 2650 1117 2650 1212 2650 1309 2650 1409 2650 1513 2650 1621 2650 
1735 2650 1856 2650 1985 2650 2125 2650 2280 2650 2453 2650 2652 2650 2891 2650 3194 2650 3627 2650 
4841 2650 4841 2650 4841 2494 4841 2427 4841 2375 4841 2330 4841 2288 4841 2250 4841 2214 4841 2179 
4841 2144 4841 2111 4841 2077 4841 2043 4841 2008 4841 1973 4841 1935 4841 1895 4841 1852 4841 1802 
4841 1738 4841 1590 4841 1590 3710 1590 3328 1590 3073 1590 2881 1590 2729 1590 2603 1590 2496 1590 
2404 1590 2323 1590 2250 1590 2186 1590 2128 1590 2074 1590 2026 1590 1981 1590 1940 1590 1902 1590 
1866 1590 1833 1590 1802 1590 1772 1590 1745 1590 1719 1590 1694 1590 1671 1590 1649 1590 1628 1590 
1608 1590 1589 1590 1571 1590 1554 1590 1537 1590 1521 1590 1506 1590 1492 1590 1478 1590 1464 1590 
1451 1590 1439 1590 1427 1590 1415 1590 1404 1590 1393 1590 1383 1590 1373 1590 1363 1590 1354 1590 
1344 1590 1336 1590 1327 1590 1319 1590 1311 1590 1303 1590 1295 1590 1288 1590 1280 1590 1273 1590 
1267 1590 1260 1590 1253 1590 1247 1590 1241 1590 1235 1590 1229 1590 1223 1590 1218 1590 1212 1590 
1207 1590 1202 1590 1197 1590 1192 1590 1187 1590 1182 1590 1178 1590 1173 1590 1169 1590 1164 1590 
1160 1590 1156 1590 1152 1590 1148 1590 1144 1590 1140 1590 1136 1590 1133 1590 1129 1590 1125 1590 
1122 1590 1118 1590 1115 1590 1112 1590 1109 1590 1105 1590 1102 1590 1099 1590 1096 1590 1093 1590 
1090 1590 1087 1590 1085 1590 1082 1590 1079 1590 1076 1590 1074 1590 1071 1590 1069 1590 1066 1590 
1064 1590 1061 1590 1059 1590 1056 1590 1054 1590 1052 1590 1050 1590 1047 1590 1045 1590 1043 1590 
1041 1590 1039 1590 1037 1590 1035 1590 1033 1590 1031 1590 1029 1590 1027 1590 1025 1590 1023 1590 
1021 1590 1020 1590 1018 1590 1016 1590 1014 1590 1012 1590 1011 1590 1009 1590 1007 1590 1006 1590 
1004 1590 1003 1590 1001 1590 999 1590 998 1590 996 1590 995 1590 993 1590 992 1590 991 1590 
989 1590 988 1590 986 1590 985 1590 984 1590 982 1590 981 1590 980 1590 978 1590 977 1590 
976 1590 974 1590 973 1590 972 1590 971 1590 970 1590 968 1590 967 1590 966 1590 965 1590 
964 1590 963 1590 962 1590 960 1590 959 1590 958 1590 
] dogrey 
 (drawpoly) 8 [0]
[957 1590 956 1590 955 1590 954 1590 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(imag\(y\) ) 895 445 0  0.00 [895 355 459 120] Show
(real\(y\) ) 5395 3493 0  0.00 [5395 3403 459 120] Show
(  ) 2943 313 0  0.00 [2943 223 114 120] Show
(0    ) 750 2586 0  0.00 [750 2496 287 120] Show
(0.25 ) 1212 2586 0  0.00 [1212 2496 287 120] Show
(0.5  ) 1735 2586 0  0.00 [1735 2496 287 120] Show
(0.75 ) 2453 2586 0  0.00 [2453 2496 287 120] Show
(1    ) 4841 2586 0  0.00 [4841 2496 287 120] Show
(1.1  ) 4841 1790 0  0.00 [4841 1700 287 120] Show
(1.2  ) 3445 1526 0  0.00 [3445 1436 287 120] Show
(1.3  ) 2945 1526 0  0.00 [2945 1436 287 120] Show
(1.4  ) 2646 1526 0  0.00 [2646 1436 287 120] Show
(2    ) 1878 1526 0  0.00 [1878 1436 287 120] Show
(3    ) 1456 1526 0  0.00 [1456 1436 287 120] Show
(4    ) 1269 1526 0  0.00 [1269 1436 287 120] Show
(10   ) 953 1526 0  0.00 [953 1436 287 120] Show
 showpage

 end saved restore 

