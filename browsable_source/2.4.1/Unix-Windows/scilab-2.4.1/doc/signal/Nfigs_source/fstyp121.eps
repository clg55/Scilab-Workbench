%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/Times-Roman findfont 100 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 5] [450.000000 30.000000 2.000000] [750 3710] drawaxis
(0) 722 3902 0  0.00 [722 3812 57 120] Show
(0.1) 1564 3902 0  0.00 [1564 3812 172 120] Show
(0.2) 2464 3902 0  0.00 [2464 3812 172 120] Show
(0.3) 3364 3902 0  0.00 [3364 3812 172 120] Show
(0.4) 4264 3902 0  0.00 [4264 3812 172 120] Show
(0.5) 5164 3902 0  0.00 [5164 3812 172 120] Show
 -90 [2 7] [227.142857 -31.800000 2.000000] [750 3710] drawaxis
(-0.2) 445 3740 0  0.00 [445 3650 229 120] Show
(0) 617 3286 0  0.00 [617 3196 57 120] Show
(0.2) 502 2831 0  0.00 [502 2741 172 120] Show
(0.4) 502 2377 0  0.00 [502 2287 172 120] Show
(0.6) 502 1923 0  0.00 [502 1833 172 120] Show
(0.8) 502 1469 0  0.00 [502 1379 172 120] Show
(1.0) 502 1014 0  0.00 [502 924 172 120] Show
(1.2) 502 560 0  0.00 [502 470 172 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 432 [ 0]
[750 3256 768 3255 785 3255 803 3255 820 3256 838 3258 855 3259 873 3259 890 3256 908 3252 
925 3250 943 3251 960 3256 978 3261 995 3264 1013 3262 1030 3256 1048 3248 1065 3244 1083 3247 
1100 3256 1118 3266 1135 3271 1153 3267 1170 3256 1188 3243 1205 3236 1223 3241 1240 3256 1258 3272 
1275 3281 1293 3275 1310 3256 1328 3234 1345 3223 1363 3231 1380 3256 1398 3284 1415 3299 1433 3289 
1450 3256 1468 3217 1485 3197 1503 3210 1520 3256 1538 3311 1555 3342 1573 3323 1590 3256 1608 3170 
1625 3118 1643 3143 1661 3256 1678 3414 1696 3530 1713 3502 1731 3256 1748 2784 1766 2159 1783 1511 
1801 984 1818 683 1836 631 1853 770 1871 984 1888 1154 1906 1204 1923 1128 1941 984 1958 857 
1976 813 1993 868 2011 984 2028 1094 2046 1136 2063 1089 2081 984 2098 881 2116 839 2133 881 
2151 984 2168 1089 2186 1135 2203 1093 2221 984 2238 868 2256 813 2273 858 2291 984 2308 1127 
2326 1203 2343 1153 2361 984 2378 771 2396 632 2413 683 2431 984 2448 1510 2466 2158 2483 2783 
2501 3256 2518 3503 2536 3532 2554 3415 2571 3256 2589 3142 2606 3116 2624 3169 2641 3256 2659 3325 
2676 3344 2694 3312 2711 3256 2729 3208 2746 3194 2764 3215 2781 3256 2799 3291 2816 3302 2834 3286 
2851 3256 2869 3229 2886 3220 2904 3232 2921 3256 2939 3277 2956 3285 2974 3275 2991 3256 3009 3238 
3026 3232 3044 3240 3061 3256 3079 3270 3096 3276 3114 3269 3131 3256 3149 3243 3166 3239 3184 3244 
3201 3256 3219 3266 3236 3270 3254 3266 3271 3256 3289 3246 3306 3243 3324 3247 3341 3256 3359 3264 
3376 3267 3394 3263 3411 3256 3429 3248 3446 3246 3464 3249 3482 3256 3499 3262 3517 3265 3534 3262 
3552 3256 3569 3250 3587 3248 3604 3250 3622 3256 3639 3261 3657 3263 3674 3261 3692 3256 3709 3251 
3727 3249 3744 3251 3762 3256 3779 3260 3797 3262 3814 3260 3832 3256 3849 3252 3867 3250 3884 3252 
3902 3256 3919 3259 3937 3261 3954 3259 3972 3256 3989 3252 4007 3251 4024 3252 4042 3256 4059 3259 
4077 3260 4094 3259 4112 3256 4129 3253 4147 3252 4164 3253 4182 3256 4199 3259 4217 3260 4234 3258 
4252 3256 4269 3253 4287 3252 4304 3253 4322 3256 4339 3258 4357 3259 4375 3258 4392 3256 4410 3253 
4427 3252 4445 3253 4462 3256 4480 3258 4497 3259 4515 3258 
] dogrey 
 (drawpoly) 82 [0]
[4532 3256 4550 3253 4567 3253 4585 3254 4602 3256 4620 3258 4637 3259 4655 3258 4672 3256 4690 3254 
4707 3253 4725 3254 4742 3256 4760 3258 4777 3259 4795 3258 4812 3256 4830 3254 4847 3253 4865 3254 
4882 3256 4900 3258 4917 3258 4935 3258 4952 3256 4970 3254 4987 3253 5005 3254 5022 3256 5040 3258 
5057 3258 5075 3258 5092 3256 5110 3254 5127 3253 5145 3254 5162 3256 5180 3258 5197 3258 5215 3258 
5232 3256 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
2 Setcolor
/closeflag false def
 (drawpoly) 432 [ 0]
[750 3256 768 3256 785 3256 803 3256 820 3256 838 3255 855 3255 873 3255 890 3256 908 3256 
925 3257 943 3256 960 3256 978 3255 995 3255 1013 3255 1030 3256 1048 3257 1065 3257 1083 3257 
1100 3256 1118 3254 1135 3253 1153 3254 1170 3256 1188 3258 1205 3259 1223 3258 1240 3256 1258 3253 
1275 3251 1293 3252 1310 3256 1328 3260 1345 3262 1363 3260 1380 3256 1398 3250 1415 3247 1433 3249 
1450 3256 1468 3265 1485 3270 1503 3268 1520 3256 1538 3239 1555 3228 1573 3232 1590 3256 1608 3293 
1625 3326 1643 3324 1661 3256 1678 3097 1696 2842 1713 2504 1731 2120 1748 1736 1766 1398 1783 1143 
1801 984 1818 916 1836 913 1853 946 1871 984 1888 1009 1906 1014 1923 1002 1941 984 1958 971 
1976 967 1993 973 2011 984 2028 994 2046 997 2063 993 2081 984 2098 976 2116 973 2133 976 
2151 984 2168 993 2186 997 2203 994 2221 984 2238 973 2256 967 2273 971 2291 984 2308 1002 
2326 1014 2343 1009 2361 984 2378 946 2396 913 2413 916 2431 984 2448 1143 2466 1398 2483 1736 
2501 2120 2518 2504 2536 2842 2554 3097 2571 3256 2589 3324 2606 3326 2624 3294 2641 3256 2659 3232 
2676 3228 2694 3239 2711 3256 2729 3268 2746 3271 2764 3265 2781 3256 2799 3248 2816 3246 2834 3250 
2851 3256 2869 3261 2886 3262 2904 3260 2921 3256 2939 3252 2956 3251 2974 3253 2991 3256 3009 3258 
3026 3259 3044 3258 3061 3256 3079 3254 3096 3253 3114 3254 3131 3256 3149 3257 3166 3258 3184 3257 
3201 3256 3219 3254 3236 3254 3254 3254 3271 3256 3289 3257 3306 3257 3324 3257 3341 3256 3359 3255 
3376 3254 3394 3255 3411 3256 3429 3257 3446 3257 3464 3257 3482 3256 3499 3255 3517 3255 3534 3255 
3552 3256 3569 3256 3587 3257 3604 3256 3622 3256 3639 3255 3657 3255 3674 3255 3692 3256 3709 3256 
3727 3256 3744 3256 3762 3256 3779 3255 3797 3255 3814 3255 3832 3256 3849 3256 3867 3256 3884 3256 
3902 3256 3919 3255 3937 3255 3954 3255 3972 3256 3989 3256 4007 3256 4024 3256 4042 3256 4059 3255 
4077 3255 4094 3255 4112 3256 4129 3256 4147 3256 4164 3256 4182 3256 4199 3255 4217 3255 4234 3255 
4252 3256 4269 3256 4287 3256 4304 3256 4322 3256 4339 3255 4357 3255 4375 3255 4392 3256 4410 3256 
4427 3256 4445 3256 4462 3256 4480 3255 4497 3255 4515 3255 
] dogrey 
 (drawpoly) 82 [0]
[4532 3256 4550 3256 4567 3256 4585 3256 4602 3256 4620 3255 4637 3255 4655 3255 4672 3256 4690 3256 
4707 3256 4725 3256 4742 3256 4760 3256 4777 3255 4795 3256 4812 3256 4830 3256 4847 3256 4865 3256 
4882 3256 4900 3256 4917 3255 4935 3256 4952 3256 4970 3256 4987 3256 5005 3256 5022 3256 5040 3256 
5057 3255 5075 3256 5092 3256 5110 3256 5127 3256 5145 3256 5162 3256 5180 3256 5197 3255 5215 3256 
5232 3256 
] dogrey 
2 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 

