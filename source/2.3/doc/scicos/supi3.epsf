%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 300 212
%%Scilab Postscript File (1995 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/scf 1.4 def
/Scalefont {/s exch def
	scf s mul scalefont} def

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def


%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 

/ColorR [0.000000 0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 1.000000 0.0 1.0] def
/ColorG [0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 0.843137 0.0 1.0] def
/ColorB [0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 33 def
/ColorR [0.000000 0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 1.000000 1.000000 0.678431 0.0 1.0 ] def
/ColorG [0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 0.843137 1.000000 0.847059 0.0 1.0] def
/ColorB [0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 0.000000 0.000000 0.901961 0.0 1.0] def
%--use color 1 
%--end use color 1 
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
0 Setcolor
10 Thickness
0 Setcolor
10 Thickness
/closeflag false def
 (drawpoly) 6 [ 0]
[3338 798 3737 798 3737 1182 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
0 Setcolor
 (drawpoly) 8 [ 9 2]
[3288 1230 3288 846 3338 796 3338 1182 3288 1230 3687 1230 3740 1182 3338 1182 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
4 Setcolor
 (drawpoly) 8 [ -5]
[3495 1182 3537 1237 3580 1182 3495 1182 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
3 Setcolor
 (drawbox) 4 [ 4]
[3338 798 400 383 
] dogrey 
3 Setcolor
10 Thickness
3 Setcolor
 (fillarc) 6 [ 34]
[3358 818 360 345 0 23040 
] dogrey 
3 Setcolor
3 Setcolor
5 Thickness
 (drawsegs) 8 [ 3]
[3537 990 3537 837 3537 990 3641 933 
] dogrey 
3 Setcolor
10 Thickness
0 Setcolor
10 Thickness
4 Setcolor
 (fillarc) 6 [ 34]
[3358 818 360 345 0 23040 
] dogrey 
4 Setcolor
0 Setcolor
5 Thickness
 (drawsegs) 8 [ 9]
[3537 990 3537 837 3537 990 3641 933 
] dogrey 
0 Setcolor
10 Thickness
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
10 Thickness
0 Setcolor
10 Thickness
/closeflag false def
 (drawpoly) 6 [ 0]
[3338 2457 3737 2457 3737 2840 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
0 Setcolor
 (drawpoly) 8 [ 9 2]
[3288 2888 3288 2505 3338 2454 3338 2840 3288 2888 3687 2888 3740 2840 3338 2840 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
 (drawpoly) 8 [ -1]
[3252 2580 3338 2553 3252 2525 3252 2580 
] dogrey 
0 Setcolor
/absolu true def
 (drawpoly) 8 [ -1]
[3252 2676 3338 2649 3252 2621 3252 2676 
] dogrey 
0 Setcolor
/absolu true def
 (drawpoly) 8 [ -1]
[3252 2772 3338 2745 3252 2717 3252 2772 
] dogrey 
0 Setcolor
/absolu true def
4 Setcolor
 (drawpoly) 8 [ -5]
[3495 2402 3537 2457 3580 2402 3495 2402 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
31 Setcolor
 (drawbox) 4 [ 32]
[3338 2457 400 383 
] dogrey 
31 Setcolor
/Times-Roman findfont 80 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
/Times-Roman findfont 80 Scalefont setfont
(MScope ) 3346 2720 0  0.00 [3346 2650 324 90] Show
/Times-Roman findfont 100 Scalefont setfont
0 Setcolor
/Times-Roman findfont 80 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
/Times-Roman findfont 80 Scalefont setfont
(MScope ) 3346 2720 0  0.00 [3346 2650 324 90] Show
/Times-Roman findfont 100 Scalefont setfont
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
10 Thickness
0 Setcolor
10 Thickness
/closeflag false def
 (drawpoly) 6 [ 0]
[426 2393 1026 2393 1026 2776 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
0 Setcolor
 (drawpoly) 8 [ 9 2]
[376 2824 376 2441 426 2390 426 2776 376 2824 976 2824 1029 2776 426 2776 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
 (drawpoly) 8 [ -1]
[1026 2612 1111 2585 1026 2557 1026 2612 
] dogrey 
0 Setcolor
/absolu true def
4 Setcolor
0 Setcolor
2 Setcolor
 (drawbox) 4 [ 3]
[426 2393 600 383 
] dogrey 
2 Setcolor
/Times-Roman findfont 80 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
/Times-Roman findfont 120 Scalefont setfont
/Times-Roman findfont 80 Scalefont setfont
(generator ) 487 2726 0  0.00 [487 2656 463 90] Show
(sinusoid ) 487 2585 0  0.00 [487 2515 416 90] Show
/Times-Roman findfont 100 Scalefont setfont
0 Setcolor
/Times-Roman findfont 80 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
/Times-Roman findfont 120 Scalefont setfont
/Times-Roman findfont 80 Scalefont setfont
(generator ) 487 2726 0  0.00 [487 2656 463 90] Show
(sinusoid ) 487 2585 0  0.00 [487 2515 416 90] Show
/Times-Roman findfont 100 Scalefont setfont
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
10 Thickness
0 Setcolor
10 Thickness
/closeflag false def
 (drawpoly) 6 [ 0]
[1775 2393 2175 2393 2175 2776 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
0 Setcolor
 (drawpoly) 8 [ 9 2]
[1725 2824 1725 2441 1775 2390 1775 2776 1725 2824 2125 2824 2178 2776 1775 2776 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
 (drawpoly) 8 [ -1]
[2175 2612 2261 2585 2175 2557 2175 2612 
] dogrey 
0 Setcolor
/absolu true def
 (drawpoly) 8 [ -1]
[1690 2612 1775 2585 1690 2557 1690 2612 
] dogrey 
0 Setcolor
/absolu true def
4 Setcolor
0 Setcolor
27 Setcolor
 (drawbox) 4 [ 28]
[1775 2393 400 383 
] dogrey 
27 Setcolor
/Times-Roman findfont 80 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
/Times-Roman findfont 120 Scalefont setfont
/Times-Roman findfont 140 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
(  1/s   ) 1777 2681 0  0.00 [1777 2591 459 120] Show
/Times-Roman findfont 100 Scalefont setfont
0 Setcolor
/Times-Roman findfont 80 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
/Times-Roman findfont 120 Scalefont setfont
/Times-Roman findfont 140 Scalefont setfont
/Times-Roman findfont 100 Scalefont setfont
(  1/s   ) 1777 2681 0  0.00 [1777 2591 459 120] Show
/Times-Roman findfont 100 Scalefont setfont
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1111 2585 1319 2585 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
/closeflag false def
 (drawpoly) 8 [ 0]
[2261 2585 2756 2585 2756 2553 3252 2553 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
4 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3537 1237 3537 2402 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
10 Thickness
 (fillarc) 6 [ 0]
[1285 2537 67 96 0 23040 
] dogrey 
0 Setcolor
5 Thickness
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1319 2585 1690 2585 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
/closeflag false def
 (drawpoly) 6 [ 0]
[1319 2585 1319 3170 1533 3170 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
10 Thickness
0 Setcolor
10 Thickness
/closeflag false def
 (drawpoly) 6 [ 0]
[1775 3409 2175 3409 2175 3792 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
0 Setcolor
 (drawpoly) 8 [ 9 2]
[1725 3840 1725 3457 1775 3406 1775 3792 1725 3840 2125 3840 2178 3792 1775 3792 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
 (drawpoly) 8 [ -1]
[2175 3628 2261 3601 2175 3573 2175 3628 
] dogrey 
0 Setcolor
/absolu true def
 (drawpoly) 8 [ -1]
[1690 3628 1775 3601 1690 3573 1690 3628 
] dogrey 
0 Setcolor
/absolu true def
4 Setcolor
 (drawpoly) 8 [ -5]
[1932 3354 1975 3409 2018 3354 1932 3354 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
10 Thickness
 (drawbox) 4 [ 0 0 0]
[1889 3486 57 77 2004 3486 57 77 2004 3639 57 77 
] dogrey 
0 Setcolor
 (drawsegs) 28 [ 0]
[1832 3524 1889 3524 1947 3524 2004 3524 2061 3524 2118 3524 1975 3524 1975 3677 1975 3677 2004 3677 
2061 3677 2089 3677 2089 3677 2089 3524 
] dogrey 
0 Setcolor
10 Thickness
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
10 Thickness
0 Setcolor
10 Thickness
/closeflag false def
 (drawpoly) 6 [ 0]
[1299 819 1699 819 1699 1202 
] dogrey 
0 Setcolor
/absolu true def
5 Thickness
0 Setcolor
 (drawpoly) 8 [ 9 2]
[1250 1250 1250 867 1299 816 1299 1202 1250 1250 1649 1250 1702 1202 1299 1202 
] dogrey 
0 Setcolor
/absolu true def
10 Thickness
4 Setcolor
 (drawpoly) 8 [ -5]
[1457 1202 1499 1257 1542 1202 1457 1202 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
3 Setcolor
 (drawbox) 4 [ 4]
[1299 819 400 383 
] dogrey 
3 Setcolor
10 Thickness
3 Setcolor
 (fillarc) 6 [ 34]
[1319 838 360 345 0 23040 
] dogrey 
3 Setcolor
3 Setcolor
5 Thickness
 (drawsegs) 8 [ 3]
[1499 1011 1499 857 1499 1011 1603 953 
] dogrey 
3 Setcolor
10 Thickness
0 Setcolor
10 Thickness
4 Setcolor
 (fillarc) 6 [ 34]
[1319 838 360 345 0 23040 
] dogrey 
4 Setcolor
0 Setcolor
5 Thickness
 (drawsegs) 8 [ 9]
[1499 1011 1499 857 1499 1011 1603 953 
] dogrey 
0 Setcolor
10 Thickness
0 Setcolor
/Times-Roman findfont 100 Scalefont setfont
5 Thickness
4 Setcolor
/closeflag false def
 (drawpoly) 8 [ 0]
[1499 1257 1499 2909 1975 2909 1975 3354 
] dogrey 
4 Setcolor
/absolu true def
0 Setcolor
10 Thickness
 (fillarc) 6 [ 0]
[1500 3122 67 96 0 23040 
] dogrey 
0 Setcolor
5 Thickness
0 Setcolor
/closeflag false def
 (drawpoly) 8 [ 0]
[1533 3170 2729 3170 2729 2649 3252 2649 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
/closeflag false def
 (drawpoly) 6 [ 0]
[1533 3170 1533 3601 1690 3601 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
0 Setcolor
/closeflag false def
 (drawpoly) 8 [ 0]
[2261 3601 3056 3601 3056 2745 3252 2745 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
(Untitled ) 2721 193 0  0.00 [2721 103 516 120] Show
-1 -1 200000 200000 setclipzone
 (drawbox) 4 [ 34]
[5331 0 669 4240 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5331 0 669 4240 
] dogrey 
0 Setcolor
 (drawbox) 4 [ 33]
[5389 35 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 35 569 193 
] dogrey 
0 Setcolor
(Help ) 5485 188 0  0.00 [5485 98 287 120] Show
 (drawbox) 4 [ 33]
[5389 264 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 264 569 193 
] dogrey 
0 Setcolor
(Window ) 5399 417 0  0.00 [5399 327 401 120] Show
 (drawbox) 4 [ 33]
[5389 492 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 492 569 193 
] dogrey 
0 Setcolor
(Palettes ) 5389 645 0  0.00 [5389 555 516 120] Show
 (drawbox) 4 [ 33]
[5389 721 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 721 569 193 
] dogrey 
0 Setcolor
(Context ) 5389 874 0  0.00 [5389 784 459 120] Show
 (drawbox) 4 [ 33]
[5389 950 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 950 569 193 
] dogrey 
0 Setcolor
(Move ) 5450 1102 0  0.00 [5450 1012 287 120] Show
 (drawbox) 4 [ 33]
[5389 1178 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 1178 569 193 
] dogrey 
0 Setcolor
(Copy ) 5465 1331 0  0.00 [5465 1241 287 120] Show
 (drawbox) 4 [ 33]
[5389 1407 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 1407 569 193 
] dogrey 
0 Setcolor
(Replace ) 5394 1560 0  0.00 [5394 1470 459 120] Show
 (drawbox) 4 [ 33]
[5389 1635 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 1635 569 193 
] dogrey 
0 Setcolor
(Align ) 5465 1788 0  0.00 [5465 1698 344 120] Show
 (drawbox) 4 [ 33]
[5389 1864 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 1864 569 193 
] dogrey 
0 Setcolor
(Link ) 5490 2017 0  0.00 [5490 1927 287 120] Show
 (drawbox) 4 [ 33]
[5389 2092 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 2092 569 193 
] dogrey 
0 Setcolor
(Delete ) 5429 2245 0  0.00 [5429 2155 401 120] Show
 (drawbox) 4 [ 33]
[5389 2321 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 2321 569 193 
] dogrey 
0 Setcolor
(Flip ) 5516 2474 0  0.00 [5516 2384 287 120] Show
 (drawbox) 4 [ 33]
[5389 2549 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 2549 569 193 
] dogrey 
0 Setcolor
(Save ) 5475 2702 0  0.00 [5475 2612 287 120] Show
 (drawbox) 4 [ 33]
[5389 2778 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 2778 569 193 
] dogrey 
0 Setcolor
(Undo ) 5465 2931 0  0.00 [5465 2841 287 120] Show
 (drawbox) 4 [ 33]
[5389 3006 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 3006 569 193 
] dogrey 
0 Setcolor
(Replot ) 5434 3159 0  0.00 [5434 3069 401 120] Show
 (drawbox) 4 [ 33]
[5389 3235 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 3235 569 193 
] dogrey 
0 Setcolor
(View ) 5470 3388 0  0.00 [5470 3298 287 120] Show
 (drawbox) 4 [ 33]
[5389 3464 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 3464 569 193 
] dogrey 
0 Setcolor
(Calc ) 5485 3617 0  0.00 [5485 3527 287 120] Show
 (drawbox) 4 [ 33]
[5389 3692 569 193 
] dogrey 
0 Setcolor
 (drawbox) 4 [ -1]
[5389 3692 569 193 
] dogrey 
0 Setcolor
(Back ) 5470 3845 0  0.00 [5470 3755 287 120] Show
5 Thickness
0 0 5331 4240 setclipzone
0 Setcolor
0 Setcolor
 showpage

 end saved restore 
