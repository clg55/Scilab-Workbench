%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/Times-Roman findfont 100 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 8] [281.250000 31.800000 2.000000] [750 3710] drawaxis
(-4) 693 3906 0  0.00 [693 3816 114 120] Show
(-3) 1256 3906 0  0.00 [1256 3816 114 120] Show
(-2) 1818 3906 0  0.00 [1818 3816 114 120] Show
(-1) 2381 3906 0  0.00 [2381 3816 114 120] Show
(0) 2972 3906 0  0.00 [2972 3816 57 120] Show
(1) 3535 3906 0  0.00 [3535 3816 57 120] Show
(2) 4097 3906 0  0.00 [4097 3816 57 120] Show
(3) 4660 3906 0  0.00 [4660 3816 57 120] Show
(4) 5222 3906 0  0.00 [5222 3816 57 120] Show
 -90 [2 8] [198.750000 -30.000000 2.000000] [750 3710] drawaxis
(-4) 564 3740 0  0.00 [564 3650 114 120] Show
(-3) 564 3343 0  0.00 [564 3253 114 120] Show
(-2) 564 2945 0  0.00 [564 2855 114 120] Show
(-1) 564 2548 0  0.00 [564 2458 114 120] Show
(0) 621 2150 0  0.00 [621 2060 57 120] Show
(1) 621 1753 0  0.00 [621 1663 57 120] Show
(2) 621 1355 0  0.00 [621 1265 57 120] Show
(3) 621 958 0  0.00 [621 868 57 120] Show
(4) 621 560 0  0.00 [621 470 57 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 6 [ 0]
[750 530 750 3710 5250 3710 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 18 [ 0]
[750 2120 5250 2120 1875 2120 1875 1325 1875 2915 1875 2120 4125 2120 4125 1325 4125 2915 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 128 [ 0]
[4688 2120 4685 2064 4676 2008 4662 1954 4643 1901 4619 1850 4589 1803 4555 1758 4517 1717 4475 1680 
4429 1647 4380 1619 4329 1596 4275 1578 4221 1566 4165 1559 4109 1558 4053 1563 3997 1573 3943 1588 
3891 1609 3841 1635 3794 1666 3750 1701 3710 1740 3674 1784 3643 1830 3616 1880 3595 1932 3579 1986 
3568 2041 3563 2097 3563 2153 3570 2209 3581 2264 3598 2317 3621 2369 3648 2418 3680 2464 3717 2507 
3757 2545 3802 2580 3849 2610 3900 2635 3952 2655 4006 2670 4062 2679 4118 2682 4174 2680 4230 2672 
4285 2659 4338 2640 4389 2617 4437 2588 4482 2554 4524 2517 4561 2475 4595 2430 4623 2381 4647 2330 
4665 2277 4678 2222 4686 2167 4687 2111 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 128 [ 0]
[4688 2120 4686 2092 4682 2064 4675 2037 4665 2011 4653 1985 4638 1961 4621 1939 4602 1918 4581 1900 
4558 1883 4534 1870 4508 1858 4481 1849 4454 1843 4426 1840 4398 1839 4370 1841 4342 1846 4315 1854 
4289 1864 4264 1877 4241 1893 4219 1910 4199 1930 4181 1952 4165 1975 4152 2000 4141 2026 4133 2053 
4128 2080 4125 2108 4125 2136 4129 2164 4134 2192 4143 2219 4154 2244 4168 2269 4184 2292 4202 2313 
4222 2333 4245 2350 4268 2365 4294 2378 4320 2387 4347 2395 4375 2399 4403 2401 4431 2400 4459 2396 
4486 2390 4513 2380 4538 2368 4562 2354 4585 2337 4606 2318 4624 2297 4641 2275 4655 2251 4667 2225 
4676 2199 4683 2171 4687 2143 4687 2115 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4207 1921 4207 1921 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4129 2072 4358 1843 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4126 2147 4433 1840 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4139 2207 4493 1853 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4161 2257 4543 1875 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4190 2300 4586 1904 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4226 2336 4622 1940 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4269 2365 4652 1983 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4320 2387 4674 2033 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4379 2400 4686 2093 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4455 2397 4683 2168 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4605 2319 4605 2319 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1325 1313 1325 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1420 1446 1325 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1514 1580 1325 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1609 1714 1325 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1704 1848 1325 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1798 1875 1401 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1893 1875 1495 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 1987 1875 1590 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2082 1875 1685 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2177 1875 1779 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2271 1875 1874 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2366 1875 1969 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2461 1875 2063 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2555 1875 2158 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2650 1875 2253 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2745 1875 2347 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1313 2839 1875 2442 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1339 2915 1875 2536 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1473 2915 1875 2631 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1607 2915 1875 2726 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1741 2915 1875 2820 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1875 2915 1875 2915 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2438 1802 3281 1802 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3225 1782 3281 1802 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3225 1822 3281 1802 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 

