%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
0 Setcolor
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 5] [450.000000 31.800000 2.000000] [750 3710] drawaxis
(0) 722 3906 0  0.00 [722 3816 57 120] Show
(100) 1564 3906 0  0.00 [1564 3816 172 120] Show
(200) 2464 3906 0  0.00 [2464 3816 172 120] Show
(300) 3364 3906 0  0.00 [3364 3816 172 120] Show
(400) 4264 3906 0  0.00 [4264 3816 172 120] Show
(500) 5164 3906 0  0.00 [5164 3816 172 120] Show
 -90 [2 6] [265.000000 -30.000000 2.000000] [750 3710] drawaxis
(0) 621 3740 0  0.00 [621 3650 57 120] Show
(4) 621 3210 0  0.00 [621 3120 57 120] Show
(8) 621 2680 0  0.00 [621 2590 57 120] Show
(12) 564 2150 0  0.00 [564 2060 114 120] Show
(16) 564 1620 0  0.00 [564 1530 114 120] Show
(20) 564 1090 0  0.00 [564 1000 114 120] Show
(24) 564 560 0  0.00 [564 470 114 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 432 [ 0]
[759 530 768 589 777 713 786 838 795 962 804 1087 813 1212 822 1337 831 1461 840 1586 
849 1711 858 1836 867 1960 876 2085 885 2210 894 2334 903 2459 912 2584 921 2708 930 2833 
939 2958 948 3083 957 3207 966 3332 975 3456 984 3583 993 3690 1002 3698 1011 3599 1020 3472 
1029 3348 1038 3223 1047 3098 1056 2973 1065 2849 1074 2724 1083 2599 1092 2475 1101 2350 1110 2225 
1119 2101 1128 1976 1137 1851 1146 1726 1155 1602 1164 1477 1173 1352 1182 1228 1191 1103 1200 978 
1209 854 1218 729 1227 603 1236 531 1245 577 1254 697 1263 823 1272 947 1281 1072 1290 1196 
1299 1321 1308 1446 1317 1571 1326 1695 1335 1820 1344 1945 1353 2069 1362 2194 1371 2319 1380 2443 
1389 2568 1398 2693 1407 2818 1416 2942 1425 3067 1434 3192 1443 3317 1452 3441 1461 3567 1470 3680 
1479 3704 1488 3615 1497 3487 1506 3363 1515 3238 1524 3114 1533 2989 1542 2864 1551 2740 1560 2615 
1569 2490 1578 2366 1587 2241 1596 2116 1605 1991 1614 1867 1623 1742 1632 1617 1641 1493 1650 1368 
1659 1243 1668 1118 1677 994 1686 869 1695 745 1704 618 1713 534 1722 565 1731 681 1740 807 
1749 931 1758 1056 1767 1181 1776 1306 1785 1430 1794 1555 1803 1680 1812 1804 1821 1929 1830 2054 
1839 2178 1848 2303 1857 2428 1866 2553 1875 2677 1884 2802 1893 2927 1902 3051 1911 3176 1920 3301 
1929 3425 1938 3551 1947 3669 1956 3708 1965 3630 1974 3503 1983 3379 1992 3254 2001 3129 2010 3005 
2019 2880 2028 2755 2037 2631 2046 2506 2055 2381 2064 2256 2073 2132 2082 2007 2091 1882 2100 1758 
2109 1633 2118 1508 2127 1383 2136 1259 2145 1134 2154 1009 2163 884 2172 760 2181 633 2190 539 
2199 555 2208 665 2217 792 2226 916 2235 1041 2244 1165 2253 1290 2262 1415 2271 1539 2280 1664 
2289 1789 2298 1913 2307 2038 2316 2163 2325 2288 2334 2412 2343 2537 2352 2662 2361 2786 2370 2911 
2379 3036 2388 3160 2397 3285 2406 3410 2415 3535 2424 3657 2433 3710 2442 3644 2451 3519 2460 3394 
2469 3270 2478 3145 2487 3020 2496 2895 2505 2771 2514 2646 2523 2521 2532 2397 2541 2272 2550 2147 
2559 2023 2568 1898 2577 1773 2586 1648 2595 1524 2604 1399 2613 1274 2622 1150 2631 1025 2640 900 
2649 776 2658 649 2667 546 2676 546 2685 649 2694 776 
] dogrey 
 (drawpoly) 418 [0]
[2703 900 2712 1025 2721 1150 2730 1274 2739 1399 2748 1524 2757 1648 2766 1773 2775 1898 2784 2023 
2793 2147 2802 2272 2811 2397 2820 2521 2829 2646 2838 2771 2847 2895 2856 3020 2865 3145 2874 3270 
2883 3394 2892 3519 2901 3644 2910 3710 2919 3657 2928 3535 2937 3410 2946 3285 2955 3160 2964 3036 
2973 2911 2982 2786 2991 2662 3000 2537 3009 2412 3018 2288 3027 2163 3036 2038 3045 1913 3054 1789 
3063 1664 3072 1539 3081 1415 3090 1290 3099 1165 3108 1041 3117 916 3126 792 3135 665 3144 555 
3153 539 3162 633 3171 760 3180 884 3189 1009 3198 1134 3207 1259 3216 1383 3225 1508 3234 1633 
3243 1758 3252 1882 3261 2007 3270 2132 3279 2256 3288 2381 3297 2506 3306 2631 3315 2755 3324 2880 
3333 3005 3342 3129 3351 3254 3360 3379 3369 3503 3378 3630 3387 3708 3396 3669 3405 3551 3414 3425 
3423 3301 3432 3176 3441 3051 3450 2927 3459 2802 3468 2677 3477 2553 3486 2428 3495 2303 3504 2178 
3513 2054 3522 1929 3531 1804 3540 1680 3549 1555 3558 1430 3567 1306 3576 1181 3585 1056 3594 931 
3603 807 3612 681 3621 565 3630 534 3639 618 3648 745 3657 869 3666 994 3675 1118 3684 1243 
3693 1368 3702 1493 3711 1617 3720 1742 3729 1867 3738 1991 3747 2116 3756 2241 3765 2366 3774 2490 
3783 2615 3792 2740 3801 2864 3810 2989 3819 3114 3828 3238 3837 3363 3846 3487 3855 3615 3864 3704 
3873 3680 3882 3567 3891 3441 3900 3317 3909 3192 3918 3067 3927 2942 3936 2818 3945 2693 3954 2568 
3963 2443 3972 2319 3981 2194 3990 2069 3999 1945 4008 1820 4017 1695 4026 1571 4035 1446 4044 1321 
4053 1196 4062 1072 4071 947 4080 823 4089 697 4098 577 4107 531 4116 603 4125 729 4134 854 
4143 978 4152 1103 4161 1228 4170 1352 4179 1477 4188 1602 4197 1726 4206 1851 4215 1976 4224 2101 
4233 2225 4242 2350 4251 2475 4260 2599 4269 2724 4278 2849 4287 2973 4296 3098 4305 3223 4314 3348 
4323 3472 4332 3599 4341 3698 4350 3690 4359 3583 4368 3456 4377 3332 4386 3207 4395 3083 4404 2958 
4413 2833 4422 2708 4431 2584 4440 2459 4449 2334 4458 2210 4467 2085 4476 1960 4485 1836 4494 1711 
4503 1586 4512 1461 4521 1337 4530 1212 4539 1087 4548 962 4557 838 4566 713 4575 589 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 

