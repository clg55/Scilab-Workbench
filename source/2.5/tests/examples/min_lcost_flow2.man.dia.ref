 
clear;lines(0);
 
ta=[1 1 2 2 2 3 4 4 5 6 6 6 7 7 7 8 9 10 12 12 13 13 13 14 15 14 9 11 10 1 8];
 
he=[2 6 3 4 5 1 3 5 1 7 10 11 5 8 9 5 8 11 10 11 9 11 15 13 14 4 6 9 1 12 14];
 
g=make_graph('foo',1,15,ta,he);
 
g('node_x')=[194 191 106 194 296 305 305 418 422 432 552 550 549 416 548];
 
g('node_y')=[56 221 316 318 316 143 214 321 217 126 215 80 330 437 439];
 
show_graph(g);
 
g1=g; ma=arc_number(g1); n=g1('node_number');
 
g1('edge_min_cap')=0.*ones(1,ma);
 
x_message(['Random generation of data';
           'The first(s) generated problem(s) may be unfeasible']);
 
while %T then
 rand('uniform');
 g1('edge_max_cap')=round(20*rand(1,ma))+20*ones(1,ma);
 g1('edge_cost')=round(10*rand(1,ma)+ones(1,ma));
 rand('normal');
 dd=20.*rand(1,n)-10*ones(1,n);
 dd=round(dd-sum(dd)/n*ones(1,n));
 dd(n)=dd(n)-sum(dd);
 g1('node_demand')=dd;
 [c,phi,flag]=min_lcost_flow2(g1);
 if flag==1 then break; end;
end;
 PROBLEM IS FOUND TO BE INFEASIBLE.
EXIT DURING INITIALIZATION
EXOGENOUS FLOW INTO NODE   15  EXCEEDS OUT CAPACITY                                                 
DEFICIT (I.E., NET FLOW OUT) OF NODE =        36            
FLOWS AND CAPACITIES OF INCIDENT ARCS OF NODE   15          
ARC   23  BETWEEN NODES   15   13                           
FLOW =        99                                            
RESIDUAL CAPACITY =         6                               
ARC   25  BETWEEN NODES   14   15                           
FLOW =         8                                            
RESIDUAL CAPACITY =        34                               
 PROBLEM IS FOUND TO BE INFEASIBLE.
EXIT DURING INITIALIZATION
EXOGENOUS FLOW INTO NODE   12  EXCEEDS OUT CAPACITY                                                 
DEFICIT (I.E., NET FLOW OUT) OF NODE =       -26            
FLOWS AND CAPACITIES OF INCIDENT ARCS OF NODE   12          
ARC   30  BETWEEN NODES   12    1                           
FLOW =        21                                            
RESIDUAL CAPACITY =        23                               
ARC   19  BETWEEN NODES   10   12                           
FLOW = 673720360                                            
RESIDUAL CAPACITY =        25                               
ARC   20  BETWEEN NODES   11   12                           
FLOW = 673720360                                            
RESIDUAL CAPACITY =        28                               
 PROBLEM IS FOUND TO BE INFEASIBLE.
 PROBLEM IS FOUND TO BE INFEASIBLE.
EXIT DURING INITIALIZATION
EXOGENOUS FLOW INTO NODE    3  EXCEEDS OUT CAPACITY                                                 
DEFICIT (I.E., NET FLOW OUT) OF NODE =        34            
FLOWS AND CAPACITIES OF INCIDENT ARCS OF NODE    3          
ARC    3  BETWEEN NODES    3    2                           
FLOW = 673720360                                            
RESIDUAL CAPACITY =        24                               
ARC    7  BETWEEN NODES    3    4                           
FLOW =         5                                            
RESIDUAL CAPACITY =        21                               
ARC    6  BETWEEN NODES    1    3                           
FLOW =         1                                            
RESIDUAL CAPACITY =        21                               
 PROBLEM IS FOUND TO BE INFEASIBLE.
EXIT DURING INITIALIZATION
EXOGENOUS FLOW INTO NODE   15  EXCEEDS OUT CAPACITY                                                 
DEFICIT (I.E., NET FLOW OUT) OF NODE =       -33            
FLOWS AND CAPACITIES OF INCIDENT ARCS OF NODE   15          
ARC   23  BETWEEN NODES   15   13                           
FLOW =        99                                            
RESIDUAL CAPACITY =         9                               
ARC   25  BETWEEN NODES   14   15                           
FLOW =         8                                            
RESIDUAL CAPACITY =        34                               
 PROBLEM IS FOUND TO BE INFEASIBLE.
 
x_message(['The cost is: '+string(c);
           'Showing the flow on the arcs and the demand on the nodes']);
 
ii=find(phi<>0); edgecolor=phi; edgecolor(ii)=11*ones(ii);
 
g1('edge_color')=edgecolor;
 
edgefontsize=8*ones(1,ma); edgefontsize(ii)=18*ones(ii);
 
g1('edge_font_size')=edgefontsize;
 
g1('edge_label')=string(phi);
 
g1('node_label')=string(g1('node_demand'));
 
show_graph(g1);
 
