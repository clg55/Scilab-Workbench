 
clear;lines(0);
 
//Example of how to use the hank macro for
 
//building a Hankel matrix from multidimensional
 
//data (covariance or Markov parameters e.g.)
 
//
 
//This is used e.g. in the solution of normal equations
 
//by classical identification methods (Instrumental Variables e.g.)
 
//
 
//1)let's generate the multidimensional data under the form :
 
//  C=[c_0 c_1 c_20.... c_n]
 
//where each bloc c_k is a d-dimensional matrix (e.g. the k-th correlation
 
//of a d-dimensional stochastic process X(t) [c_k = E(X(t) X'(t+k)], '
 
//being the transposition in scilab)
 
//
 
//we take here d=2 and n=64
 
//
 
c=rand(2,2*64)
 c  =
 
 
         column 1 to 5
 
!   0.2113249    0.0002211    0.6653811    0.8497452    0.8782165 !
!   0.7560439    0.3303271    0.6283918    0.6857310    0.0683740 !
 
         column  6 to 10
 
!   0.5608486    0.7263507    0.5442573    0.2312237    0.8833888 !
!   0.6623569    0.1985144    0.2320748    0.2164633    0.6525135 !
 
         column 11 to 15
 
!   0.3076091    0.2146008    0.3616361    0.5664249    0.3321719 !
!   0.9329616    0.312642     0.2922267    0.4826472    0.5935095 !
 
         column 16 to 20
 
!   0.5015342    0.2693125    0.4051954    0.0437334    0.2639556 !
!   0.4368588    0.6325745    0.9184708    0.4818509    0.4148104 !
 
         column 21 to 25
 
!   0.2806498    0.7783129    0.1121355    0.1531217    0.8415518 !
!   0.1280058    0.2119030    0.6856896    0.6970851    0.4062025 !
 
         column 26 to 30
 
!   0.4094825    0.1138360    0.5618661    0.6853980    0.5042213 !
!   0.8784126    0.1998338    0.5896177    0.8906225    0.3493615 !
 
         column 31 to 35
 
!   0.3873779    0.9488184    0.3760119    0.2615761    0.2638578 !
!   0.9222899    0.3435337    0.7340941    0.4993494    0.5253563 !
 
         column 36 to 40
 
!   0.5376230    0.2256303    0.7608433    0.6723950    0.3911574 !
!   0.1199926    0.6274093    0.0485566    0.2017173    0.8300317 !
 
         column 41 to 45
 
!   0.5878720    0.2232865    0.1205996    0.8607515    0.5257061 !
!   0.4829179    0.8400886    0.2855364    0.8494102    0.9931210 !
 
         column 46 to 50
 
!   0.6488563    0.0500420    0.4104059    0.8544211    0.8279083 !
!   0.9923191    0.7485507    0.6084526    0.0642647    0.9262344 !
 
         column 51 to 55
 
!   0.5667211    0.8160110    0.5595937    0.7279222    0.5465335 !
!   0.5711639    0.0568928    0.1249340    0.2677766    0.9885408 !
 
         column 56 to 60
 
!   0.7395657    0.5900573    0.2552206    0.1157417    0.6783956 !
!   0.0037173    0.3096467    0.6251879    0.6117004    0.3320095 !
 
         column 61 to 65
 
!   0.0258710    0.3916873    0.5064435    0.2893728    0.6212882 !
!   0.5174468    0.2413538    0.4236102    0.0887932    0.3454984 !
 
         column 66 to 70
 
!   0.7064868    0.2870401    0.0881335    0.7227253    0.2427822 !
!   0.5211472    0.6502795    0.4498763    0.8976796    0.4337721 !
 
         column 71 to 75
 
!   0.9677053    0.5232976    0.5617307    0.7794547    0.9808542 !
!   0.5068534    0.5596948    0.468176     0.7901072    0.8187066 !
 
         column 76 to 80
 
!   0.4256872    0.9229532    0.4678218    0.0366117    0.8325452 !
!   0.2461561    0.1000746    0.3950498    0.5175369    0.6104832 !
 
         column 81 to 85
 
!   0.1871112    0.8433565    0.8532815    0.1867539    0.7489608 !
!   0.0189575    0.0748595    0.0124590    0.4920584    0.9414957 !
 
         column 86 to 90
 
!   0.2124056    0.2628148    0.9110545    0.8102653    0.4139087 !
!   0.579502     0.4360987    0.8082667    0.2590428    0.3599928 !
 
         column 91 to 95
 
!   0.6912788    0.3572650    0.5477634    0.9561172    0.0143259 !
!   0.7656859    0.7693400    0.0962289    0.2207409    0.8191490 !
 
         column  96 to 100
 
!   0.1304993    0.6561381    0.5283124    0.7876622    0.7883861 !
!   0.9682004    0.2445539    0.8468926    0.1262083    0.3453042 !
 
         column 101 to 105
 
!   0.2659857    0.8875248    0.8525161    0.9152874    0.2367841 !
!   0.9709819    0.2066753    0.6744698    0.0284860    0.7015344 !
 
         column 106 to 110
 
!   0.1202527    0.3161073    0.5715175    0.8248620    0.2791808 !
!   0.8287412    0.5305191    0.0478015    0.5798843    0.9545111 !
 
         column 111 to 115
 
!   0.9071155    0.1175613    0.7263671    0.3948993    0.7061490 !
!   0.3360149    0.9253724    0.9009498    0.5655180    0.6787831 !
 
         column 116 to 120
 
!   0.4132936    0.4952356    0.8626222    0.2512136    0.3921976 !
!   0.1402291    0.4194877    0.2857510    0.3389102    0.4681552 !
 
         column 121 to 125
 
!   0.3361603    0.2039064    0.0181815    0.0105835    0.2725595 !
!   0.5336877    0.1589990    0.4098371    0.1965310    0.3437655 !
 
         column 126 to 128
 
!   0.2033702    0.2762596    0.5718074 !
!   0.3011945    0.2944531    0.2141770 !
 
//
 
//generate the hankel matrix H (with 4 bloc-rows and 5 bloc-columns)
 
//from the data in c
 
//
 
H=hank(4,5,c);
 
//
 
