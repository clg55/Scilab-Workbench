			  Scilab version 2.5
                           ********************
 
 ******************************************************************************
 			      INSTALLATION GUIDE
 ******************************************************************************
 
 0 - COPYRIGHT NOTICE
 ********************
 
 Scilab is free software. It can be used both in academia and in industry
 free of charge.
 
 To use Scilab, you need to fill and return the end of the file notice.tex 
 or notice.ps (postscript file). You may email to Scilab@inria.fr.
 
 ******************************************************************************
 
 In the following, all the paths are relative to the Scilab directory 
 (scilab-2.5 directory).
 
 I - TO INSTALL SCILAB
 *********************
 
  A - IF YOU HAVE A COMPILED VERSION
  ----------------------------------
    Simply do, in Scilab directory:
 	make
   
  B - IF YOU HAVE A SOURCE VERSION
  --------------------------------
    This distribution has been tested on the following machines:
    HP9000, SUN Sparcstation (Sun OS and Solaris 5.*), IBM RS6000, 
    DEC alpha OSF, Dec alpha Linux, SGI, PC linux (a.out and ELF) and
    Mac Mklinux.
 
    You need X Window (X11R4, X11R5 or X11R6), Athena Widgets libraries, 
    C compiler and fortran compiler.
 
    1 - Configure your system by issuing the following command in the Scilab 
        directory:
 	./configure --with-tk
	Or simply "./configure" if you don't have tcl/tk 8.0 or later installed.
 
        This will create and/or modify a few Makefile and other files for your 
        system.
        You can give options to configure command, see below.
 
    2 - Do in the Scilab directory:
 	make all
 
        This will compile Scilab and set everything.

    Configure options:
    ------------------
 	--enable-debug: compile with "-g" option and do not optimize
 
 	--with-gcc: use gcc C compiler (note that the compilation options
           have not been tested on all machines, see C below)
 
 	--with-g77: use g77 fortran compiler (note that the compilations
           options have not been tested on all machines, see C below)
 
 	--with-gnu: use gcc C compiler and g77 fortran compiler (note that 
           the compilation options have not been tested on all machines, 
           see C below)
 
         --x-libraries=DIR: X Window library files are in DIR
         --x-includes=DIR: X Window include files are in DIR
 
 	--with-local-Xaw: compile and use Athena Widgets libraries given 
           with Scilab (do not use then for X11R4); configure chooses local
           Athena Widgets library when needed, so the use of this option is not
           recommanded (see below KNOWN PROBLEMS 3).
 
         --without-pvm: compile without PVM library. The default is to compile
           with PVM library.
 
         --with-tk: compile with TCL/TK library. The default is to compile
           without TCL/TK library. You must have libraries of TCL/TK 8.x and 
           corresponding include files installed in standard directory 
           (configure is looking for them).
           If your libraries and include files are in customized places, 
           you can specify them by hand with the following arguments:
                -with-tcl-library=TCL_LIB_DIR: Tcl library is in TCL_LIB_DIR
                -with-tcl-include=TCL_INC_DIR: Tcl include is in TCL_INC_DIR
                -with-tk-library=TK_LIB_DIR: Tk library is in TK_LIB_DIR
                -with-tk-include=TK_INC_DIR: Tk include is in TK_INC_DIR
 
  C - CHANGING THE COMPILATION OPTIONS (source version only)
  ------------------------------------
     You may want to change the options used to compile Scilab, names of the
     compilers, compilation options, linker options, and so on; you can easily 
     do that.
 
     The main "Makefile" of Scilab includes "Makefile.incl" and
     "config/Makefile.<machine>":
       "Makefile.incl" contains all the compilation options
       "config/Makefile.<machine>" is only used for the link of the executable 
           "scilex" of Scilab.
 
    The file "Makefile.incl" is included by all the Makefiles of the 
    distribution, so it is THE place where you can change compilation 
    options (it is self documented).
 
    Note that "Makefile.incl" is automatically generated by "configure"
    from "Makefile.incl.in", so your modifications of "Makefile.incl" are
    discarded every time you run "configure". 
    Users knowing the way "configure" works may want to modify directly the 
    "configure" file.
    Even more, users knowing the way "autoconf" works may want to modify 
    the "configure.in" file and then run "autoconf" (version 2.12) to generate
    the "configure" file.
 
  D - CUSTOMIZING YOUR SCILAB
  ---------------------------
    1 - If you want to recompile Scilab after modifications, execute only 
        the "make all" command in Scilab directory (source version only).
 
        If you want to clean all executable, object files and libraries 
        and then recompile Scilab, execute the following commands
        (source version only):
 	make distclean
 	make all
 
    2 - To print your postscript figures, the list of printers is defined
        in the environment variable "PRINTERS" or in the beginning of 
        the shell script "bin/scilab".
 
    3 - Note that the functions "macros/util/edit" and
        "macros/util/manedit" assume that your default editor 
        is emacs. You may change this in the corresponding function (or 
        explicitly specify your editor when you invoke these functions).
 
    4 - Icons for windows managers: icons for Scilab, Scilab graphics windows
        and Metanet graphics windows are given in the X11_defaults
        subdirectory. See the README in this subdirectory.
 
    5 - COLOR RESOURCES: if you want to change the colors of your 
        customization you need to modify the files in the X11_defaults
        subdirectory (essentially the Xscilab file) or to copy the same
        color resources in your personal resource file (home directory).
 
 ******************************************************************************
 II - KNOWN PROBLEMS AND REMARKS
 *******************************
    0 - Note that C routines are not ANSI.
 
    1 - If there is something wrong when you open the scilab window 
        check your ".Xdefault" file.
 
    2 - The fortran compiler version 1.3.1 of SUN Sparcstations has a bug:
        reading or writing (with implicit loop) arrays  bigger than 4096 
        elements does not work. This may cause Scilab to abort.
        The solution is to upgrade your fortran compiler, for instance get 
        version 1.4 (or use version 1.3.1 with object file "recio.o" from 
        newer version).
 
    3 - Athena Widgets libraries libXaw.a and libXmu.a (and corresponding 
        include files) are not systematically provided in some X11 
        installations. If you are using X11R5 or X11R6, these libraries are 
        provided for convenience with Scilab.
        "configure" first tries to find existing Athena Widgets libraries.
        If none are found and X Window release is not X11R4, it uses
        local Athena Widgets libraries. Otherwise an error is issued.
        You can impose the use of local Athena Widgets libraries by using
        the option "--with-local-Xaw" with "configure".
 
        On some IBM RS6000 there exists a compatibility problem between the
        X11-Mit distribution and the IBM version. If your system runs the IBM
        X11 release you must use the IBM libXaw.a and libXmu.a libraries.
 
    4 - For DEC ALPHA workstation you must use the 3.4 or newer version
        of the fortran compiler (the 3.3 version aborts on floating
        point exceptions). You are encouraged to use the OSF 3.0 system
        release and the fortran 3.5 release (the incremental link works
        fine as well as all the floating point exceptions).
 
    5 - For HP workstation, programs to be incrementally linked should
        be compiled with the option "+z" or "+Z".
 
    6 - With some Linux egcs compilers, compiling the three files
        "comqr3.f" "dsvdc.f" and "wsvdc.f" (directory "routines/control")
        with optimization can cause failure when computing some SVD. 
        If not sure, compile them without optimization.
 
    7 - Scilab's tcl/tk interface does not work properly on Linux. 
	To make it work, you should define the environment variables as follows 
	(assuming you are using tcsh) 
	setenv TCL_LIBRARY /usr/lib/tcl8.0 
	setenv TK_LIBRARY /usr/lib/tk8.0 
	Or to the appropriate directories if your tcl-tk is not installed in usual place.



    8 - Scilab ignores the last line of script and function files, if it is not ended 
	with a carriage return. Most editors do that automatically on Unix. Emacs
	does not do it by default. You can force it to do it by inserting the following 
	line into your .emacs file 
	(setq require-final-newline t) 

    9 - If when doing getf of a function you get the error message: 
	error    26 too complex recursion! (recursion tables are full) 
	and you cannot find anything wrong in the function. The problem 
	may be that a body of a conditional statement or a loop is too big. 
	For example if you have an if-then-end statement in which the number 
	of characters between if and end is larger than 16000 you will have 
	this problem. In that case you should reduce the size making functions. 

    10 - For x=[10e+20, 1.d-20] the display is:  x  = !   1.000E+21    0. ! 
	Is the second entry really set to zero? 
	No. This is a display feature. Entries which are proportionally 
	insignificant are displayed as zero in a matrix. The proportional 
	factor used is 1/%eps. To avoid this feature, use format('e'). 

    11 - The intruction 1./[1,2,3] is not the same as a=1;a./[1,2,3] ? 
	The reason is that 1. is interpreted as 1 before the operation /. So,  
	1./[1,2,3] is the same as 1/[1,2,3] i.e.a right inverse of [1,2,3].  
	If you want to perform an element wise division use the a=1;a./[1,2,3] or
	(1)./[1,2,3]. 

    12 - 1/0 returns  !--error    27 division by zero...  Why not Inf? 
	You can do this by putting Scilab in IEEE mode. Use the instruction 
	ieee(1) or ieee(2) depending on whether or not you want to see a 
	warning in such situations. Use ieee(0) to get back to default mode. 

    14 - I run Scilab 2.4.1 on Windows 95 or 98 and I can't plot a vector longer than 2^14:
         t=0:16383; plot(sin(t)) 
	This bug seems to be due to the windows graphics library; they could be limited to 2^14.
	We will try to modify the plot algorithm in the next version. 

    15 - An execution in a scilab script seems to stop in the middle of an instruction. 
	One possibility is that you have an instruction line which is too long 
	(more than 4000 characters). This may happen usually when defining a 
	large matrix generated automatically. If you have a large matrix you 
	should use the function read to load it into scilab. 

    16 - If you have any problem or suggestion to improve Scilab
        send an email to:
        
                           Scilab@inria.fr
 
        or better post a message to newsgroup:
 
 		      comp.soft-sys.math.scilab
 
 ******************************************************************************
 III - TO RUN SCILAB
 *******************
 
 Run Scilab by executing "scilab" (shell script in bin).
 
 If the name of the directory of Scilab distribution is not the same on 
 your machine than on the machine where Scilab was installed, define the
 environment variable SCI to point to the directory of Scilab distribution.
 In a sh like shell, do:
  SCI=<name of the directory>
  export SCI
 In a csh like shell, do:
  setenv SCI <name of the directory>
 
 ******************************************************************************
 IV - DOCUMENTATION
 ****************** 
 
 In addition to Scilab online documentation (obtained by typing "help item" or
 "apropos keyword" or clicking on the help button), you will find 
 compressed postscript and pdf documentation by anonymous ftp on
 "ftp.inria.fr:/INRIA/Projects/Meta2/Scilab/doc" (internet# 192.93.2.54)
 or from Web site
 "http://www-rocq.inria.fr/scilab":
 
 Comm.ps.gz, Comm.pdf: Communication Toolbox
 Internals.ps.gz, Internals.pdf: Scilab's internals
 Intro.ps.gz, Intro.pdf: Introduction to Scilab
 Lmi.ps.gz, Lmi.pdf: Linear Matrix Inequalities Optimization Toolbox
 Manual.ps.gz, Manual.pdf: On line Manual
 Metanet.ps.gz, Metanet.pdf: Metanet User's Guide and Tutorial
 Scicos.ps.gz, Scicos.pdf: Scicos: a Dynamic System Builder and Simulator 
 Signal.ps.gz, Signal.pdf: Signal Processing Toolbox
 
 ******************************************************************************
 V - SOME IMPORTANT FILES AND DIRECTORIES
 ****************************************
 
 scilab.star: startup file for Scilab: instructions in this file
              are executed when Scilab is executed. Note that
              you can also have your own startup file ".scilab"
              in your current directory.
 
 configure.in: file used by "autoconf 2.12" to generate "configure".
 
 configure: file used to configure Scilab.
 
 Makefile.incl.in: file used by configure to generate Makefile.incl.
 
 Makefile.incl: file included by all Makefile's. It is automatically 
                generated by configure.
 
 Path.incl: contains the scilab directory pathname. It is included by 
            scripts/Makefile. This file is automatically generated by 
            configure.
 
 Version.incl: contains the scilab version. It is used by a few Makefile.
 
 Makefile.in: file used by configure to generate Makefile.
 
 Makefile: the main Makefile to make Scilab. It is automatically generated by
           configure.
 
 config/   : directory used by configure and by the main Makefile
 
                Makefile.<host>: Makefile included by main Makefile. It depends
                                 on the host and is used to created the 
                                 executable bin/scilex.
 
 demos/    : demos directory. Some of the demos can be executed by clicking
             on the "demos" button.
 
 examples/ : examples of dynamic links and interface code.
 
 macros/   : functions directory: this directory is divided into 
             subdirectories corresponding to specific topics
             (control, polynomials,...). Each subdirectory contains 
             the source code of the macros (files *.sci). 
 
 xmetanet/ : XMetanet routines.
 
 geci/     : Geci (interprocess communication tool) routines.
 
 libs/	  : directory of libraries: archives of object files needed 
             to link Scilab.
 
 routines/ : directory of fortran or C routines. Divided into subdirectories
             (see below).
 
 doc/      : directory of documentation. Usually LaTeX files.
 
 man/	  : man files and LaTeX manual.
 
 tests/    : set of exec files to test Scilab.
 
 util/     : useful routines and ASCII files to manage Scilab.
 
 bin/	  : executable code and scripts.
 		scilab  : shell-script to call Scilab and miscellaneous tools
                           execute scilab -help scilab for help.
 		scilex  : executable code of Scilab.
 		scilink : shell script called by scilab -link.
                 intersci: generator of interface program between Scilab and 
                           routines.
 
 intersci/ : Generator of interface program between Scilab and routines.
 
 maple/    : Maple code to link Maple with Scilab.
 
 pvm3/	  : PVM 3.4 beta 6 for Scilab.
 
 tcl/      : TCL/TK for Scilab.
 
 ******************************************************************************
 			       THAT'S ALL FOLKS
 ******************************************************************************
