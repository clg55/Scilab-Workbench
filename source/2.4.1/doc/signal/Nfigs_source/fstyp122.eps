%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 5] [450.000000 30.000000 2.000000] [750 3710] drawaxis
(0) 722 3902 0  0.00 [722 3812 57 120] Show
(0.1) 1564 3902 0  0.00 [1564 3812 172 120] Show
(0.2) 2464 3902 0  0.00 [2464 3812 172 120] Show
(0.3) 3364 3902 0  0.00 [3364 3812 172 120] Show
(0.4) 4264 3902 0  0.00 [4264 3812 172 120] Show
(0.5) 5164 3902 0  0.00 [5164 3812 172 120] Show
 -90 [2 7] [227.142857 -31.800000 2.000000] [750 3710] drawaxis
(-0.2) 445 3740 0  0.00 [445 3650 229 120] Show
(0) 617 3286 0  0.00 [617 3196 57 120] Show
(0.2) 502 2831 0  0.00 [502 2741 172 120] Show
(0.4) 502 2377 0  0.00 [502 2287 172 120] Show
(0.6) 502 1923 0  0.00 [502 1833 172 120] Show
(0.8) 502 1469 0  0.00 [502 1379 172 120] Show
(1.0) 502 1014 0  0.00 [502 924 172 120] Show
(1.2) 502 560 0  0.00 [502 470 172 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 432 [ 0]
[767 984 784 984 801 984 818 984 836 984 853 985 870 985 887 985 904 984 921 983 
938 983 955 983 972 984 990 986 1007 987 1024 986 1041 984 1058 982 1075 981 1092 982 
1109 984 1126 987 1144 988 1161 987 1178 984 1195 981 1212 980 1229 981 1246 984 1263 988 
1280 989 1298 988 1315 984 1332 980 1349 978 1366 980 1383 984 1400 989 1417 991 1434 989 
1452 984 1469 979 1486 977 1503 979 1520 984 1537 990 1554 993 1571 991 1588 984 1606 978 
1623 975 1640 977 1657 984 1674 992 1691 995 1708 992 1725 984 1742 976 1760 972 1777 975 
1794 984 1811 994 1828 998 1845 994 1862 984 1879 974 1896 969 1913 973 1931 984 1948 996 
1965 1001 1982 997 1999 984 2016 971 2033 965 2050 971 2067 984 2085 999 2102 1006 2119 1000 
2136 984 2153 968 2170 960 2187 967 2204 984 2221 1003 2239 1012 2256 1004 2273 984 2290 963 
2307 953 2324 961 2341 984 2358 1009 2375 1021 2393 1011 2410 984 2427 955 2444 942 2461 953 
2478 984 2495 1019 2512 1035 2529 1022 2547 984 2564 942 2581 921 2598 937 2615 984 2632 1038 
2649 1065 2666 1045 2683 984 2701 913 2718 875 2735 900 2752 984 2769 1087 2786 1147 2803 1115 
2820 984 2837 807 2855 683 2872 718 2889 984 2906 1477 2923 2111 2940 2751 2957 3256 2974 3534 
2991 3575 3009 3445 3026 3256 3043 3113 3060 3075 3077 3141 3094 3256 3111 3352 3128 3382 3145 3339 
3163 3256 3180 3182 3197 3158 3214 3190 3231 3256 3248 3315 3265 3336 3282 3310 3299 3256 3317 3205 
3334 3187 3351 3209 3368 3256 3385 3300 3402 3316 3419 3297 3436 3256 3453 3216 3471 3202 3488 3218 
3505 3256 3522 3291 3539 3305 3556 3290 3573 3256 3590 3223 3607 3210 3625 3224 3642 3256 3659 3286 
3676 3298 3693 3285 3710 3256 3727 3227 3744 3216 3761 3228 3779 3256 3796 3282 3813 3293 3830 3282 
3847 3256 3864 3230 3881 3220 3898 3231 3915 3256 3933 3280 3950 3289 3967 3279 3984 3256 4001 3233 
4018 3223 4035 3233 4052 3256 4069 3278 4087 3287 4104 3277 4121 3256 4138 3234 4155 3226 4172 3235 
4189 3256 4206 3276 4223 3285 4240 3276 4258 3256 4275 3236 4292 3227 4309 3236 4326 3256 4343 3275 
4360 3283 4377 3275 4394 3256 4412 3237 4429 3229 4446 3237 
] dogrey 
 (drawpoly) 94 [0]
[4463 3256 4480 3274 4497 3282 4514 3274 4531 3256 4548 3237 4566 3230 4583 3237 4600 3256 4617 3274 
4634 3281 4651 3274 4668 3256 4685 3238 4702 3231 4720 3238 4737 3256 4754 3273 4771 3280 4788 3273 
4805 3256 4822 3238 4839 3231 4856 3238 4874 3256 4891 3273 4908 3280 4925 3273 4942 3256 4959 3239 
4976 3232 4993 3239 5010 3256 5028 3273 5045 3280 5062 3273 5079 3256 5096 3239 5113 3232 5130 3239 
5147 3256 5164 3273 5182 3280 5199 3273 5216 3256 5233 3239 5250 3232 
] dogrey 
0 Setcolor
/absolu true def
1 Setcolor
/closeflag false def
 (drawpoly) 432 [ 0]
[767 984 784 984 801 984 818 984 836 984 853 984 870 984 887 985 904 985 921 985 
938 984 955 983 972 983 990 983 1007 984 1024 986 1041 987 1058 986 1075 984 1092 982 
1109 981 1126 982 1144 984 1161 987 1178 988 1195 987 1212 984 1229 981 1246 980 1263 981 
1280 984 1298 988 1315 989 1332 988 1349 984 1366 980 1383 978 1400 980 1417 984 1434 989 
1452 991 1469 989 1486 984 1503 979 1520 977 1537 979 1554 984 1571 990 1588 993 1606 991 
1623 984 1640 978 1657 975 1674 977 1691 984 1708 992 1725 995 1742 992 1760 984 1777 976 
1794 972 1811 975 1828 984 1845 994 1862 998 1879 994 1896 984 1913 974 1931 969 1948 973 
1965 984 1982 996 1999 1001 2016 997 2033 984 2050 971 2067 965 2085 971 2102 984 2119 999 
2136 1006 2153 1000 2170 984 2187 968 2204 960 2221 967 2239 984 2256 1003 2273 1012 2290 1004 
2307 984 2324 963 2341 953 2358 961 2375 984 2393 1009 2410 1021 2427 1011 2444 984 2461 955 
2478 942 2495 953 2512 984 2529 1019 2547 1035 2564 1022 2581 984 2598 942 2615 921 2632 937 
2649 984 2666 1038 2683 1065 2701 1045 2718 984 2735 913 2752 875 2769 900 2786 984 2803 1087 
2820 1147 2837 1115 2855 984 2872 807 2889 683 2906 718 2923 984 2940 1477 2957 2111 2974 2751 
2991 3256 3009 3534 3026 3575 3043 3445 3060 3256 3077 3113 3094 3075 3111 3141 3128 3256 3145 3352 
3163 3382 3180 3339 3197 3256 3214 3182 3231 3158 3248 3190 3265 3256 3282 3315 3299 3336 3317 3310 
3334 3256 3351 3205 3368 3187 3385 3209 3402 3256 3419 3300 3436 3316 3453 3297 3471 3256 3488 3216 
3505 3202 3522 3218 3539 3256 3556 3291 3573 3305 3590 3290 3607 3256 3625 3223 3642 3210 3659 3224 
3676 3256 3693 3286 3710 3298 3727 3285 3744 3256 3761 3227 3779 3216 3796 3228 3813 3256 3830 3282 
3847 3293 3864 3282 3881 3256 3898 3230 3915 3220 3933 3231 3950 3256 3967 3280 3984 3289 4001 3279 
4018 3256 4035 3233 4052 3223 4069 3233 4087 3256 4104 3278 4121 3287 4138 3277 4155 3256 4172 3234 
4189 3226 4206 3235 4223 3256 4240 3276 4258 3285 4275 3276 4292 3256 4309 3236 4326 3227 4343 3236 
4360 3256 4377 3275 4394 3283 4412 3275 4429 3256 4446 3237 
] dogrey 
 (drawpoly) 94 [0]
[4463 3229 4480 3237 4497 3256 4514 3274 4531 3282 4548 3274 4566 3256 4583 3237 4600 3230 4617 3237 
4634 3256 4651 3274 4668 3281 4685 3274 4702 3256 4720 3238 4737 3231 4754 3238 4771 3256 4788 3273 
4805 3280 4822 3273 4839 3256 4856 3238 4874 3231 4891 3238 4908 3256 4925 3273 4942 3280 4959 3273 
4976 3256 4993 3239 5010 3232 5028 3239 5045 3256 5062 3273 5079 3280 5096 3273 5113 3256 5130 3239 
5147 3232 5164 3239 5182 3256 5199 3273 5216 3280 5233 3273 5250 3256 
] dogrey 
1 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 

