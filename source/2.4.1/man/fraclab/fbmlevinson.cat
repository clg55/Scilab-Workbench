
fbmlevinson(2)                 Scilab Function                 fbmlevinson(2)
NAME
  fbmlevinson - Levinson synthesis of a fractional Brownian motion

  Author: Paulo Goncalves

  Generates a Fractional Brownian Motion (fBm) using Cholesky/Levinson fac-
  torization

Usage

  [x,y,r] = fbmlevinson(N,H,[seed])
Input parameters
       o  N  : Positive integer Sample size of the fBm
       o  H  : Real in [0,1] Holder exponent
       o  seed  : real scalar Random seed generator
Output parameters
       o  x  : real vector  [1,N] Time samples of the fBm
       o  y  : real vector [1,N] Vector of N i.i.d. white standard Gaussian
         r.v.'s (input process of the generator)
       o  r  : real vector [1,N] First  row of the var/cov Toeplitz matrix R
         of the increment process w[k] = x[k+1] - x[k].
Algorithm details
  Generates a Fractional Brownian Motion using Levinson algorithm to triangu-
  larize the covariance matrix. R = E W * W' being the variance/covariance
  matrix of the fBm increment W[n ; shift] = X[n+shift] - X[n-shift], R =
  L*L', with L the lower left triangle matrix (Choleski or Levinson
  factorization). Then, we pose Z = L(-1) * W  <=>  W = L * Z with Rz the
  var/cov matrix of the process Z, Rz = E { Z * Z' } Rz = E { L(-1) * W * W'
  * (L(-1))' } Rz = L(-1) * R * (L(-1))' Rz = L(-1) * L * L' * (L(-1))' Rz =
  I (identity) Thus, Z is a white Gaussian noise with unit variance.
See also:
  mbmlevinson

Example:

  [x,y,r] = fbmlevinson(1024,0.8) ;
