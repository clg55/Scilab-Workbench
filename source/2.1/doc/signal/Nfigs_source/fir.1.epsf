%%Missile File : J.Ph Chancelier 1991
%%EndComments

/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------
/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev WhiteLev le {closepath glev Setgray eofill}
	{ 0 Setgray closepath stroke} ifelse 
} def 



%------------------------------------------------------
% trace de polygones rempli ou de polylignes 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev WhiteLev le 
	{ % polygone ferme et gris
	  closepath glev Setgray eofill}
	{ glev WhiteLev 2 add ge 
	   {%polygone ferme dont on efface l'interieur 
		%(peint avec un niveau de gris en blanc)
	    closepath WhiteLev 2 mul 2 add glev sub Setgray 
		  gsave eofill grestore 
	    0 Setgray stroke}
	   {%polygone simple eventuellement ferme
	    0 Setgray closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto stroke 
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto stroke 
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	0 setgray fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	glev Setgray eofill}
	{newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath 0 Setgray stroke} ifelse 
	Cmsave1 setmatrix clear} def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show CtmRestore } def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto}
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 



%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix 
	[1 0 0 -1 0 0 ] concat 
	arg concat } def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { 2 div /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
0 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scalefont setfont
fillsolid
/WhiteLev 16 def
/localsave save def 
clear (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey localsave restore
fillsolid
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(0.00) 636 3906 0  0.00 [636 3816 229 120] Show
(0.05) 1086 3906 0  0.00 [1086 3816 229 120] Show
(0.10) 1536 3906 0  0.00 [1536 3816 229 120] Show
(0.15) 1986 3906 0  0.00 [1986 3816 229 120] Show
(0.20) 2436 3906 0  0.00 [2436 3816 229 120] Show
(0.25) 2886 3906 0  0.00 [2886 3816 229 120] Show
(0.30) 3336 3906 0  0.00 [3336 3816 229 120] Show
(0.35) 3786 3906 0  0.00 [3786 3816 229 120] Show
(0.40) 4236 3906 0  0.00 [4236 3816 229 120] Show
(0.45) 4686 3906 0  0.00 [4686 3816 229 120] Show
(0.50) 5136 3906 0  0.00 [5136 3816 229 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(0.00) 449 3740 0  0.00 [449 3650 229 120] Show
(0.11) 449 3422 0  0.00 [449 3332 229 120] Show
(0.22) 449 3104 0  0.00 [449 3014 229 120] Show
(0.32) 449 2786 0  0.00 [449 2696 229 120] Show
(0.43) 449 2468 0  0.00 [449 2378 229 120] Show
(0.54) 449 2150 0  0.00 [449 2060 229 120] Show
(0.65) 449 1832 0  0.00 [449 1742 229 120] Show
(0.76) 449 1514 0  0.00 [449 1424 229 120] Show
(0.87) 449 1196 0  0.00 [449 1106 229 120] Show
(0.97) 449 878 0  0.00 [449 788 229 120] Show
(1.08) 449 560 0  0.00 [449 470 229 120] Show
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 452 [ 17]
[750 743 768 744 785 746 803 749 821 753 838 759 856 764 874 771 891 777 909 783 
926 788 944 792 962 795 979 797 997 797 1015 796 1032 794 1050 790 1068 785 1085 779 
1103 772 1121 765 1138 757 1156 751 1174 745 1191 739 1209 736 1226 733 1244 733 1262 734 
1279 737 1297 742 1315 748 1332 756 1350 764 1368 774 1385 783 1403 792 1421 800 1438 808 
1456 813 1474 817 1491 819 1509 818 1526 815 1544 809 1562 802 1579 792 1597 781 1615 768 
1632 755 1650 742 1668 730 1685 718 1703 709 1721 702 1738 697 1756 696 1774 698 1791 703 
1809 712 1826 724 1844 740 1862 757 1879 776 1897 796 1915 816 1932 836 1950 853 1968 868 
1985 879 2003 886 2021 888 2038 884 2056 874 2074 859 2091 837 2109 811 2126 780 2144 746 
2162 709 2179 671 2197 635 2215 601 2232 571 2250 549 2268 534 2285 530 2303 538 2321 560 
2338 596 2356 649 2374 718 2391 804 2409 907 2426 1027 2444 1163 2462 1313 2479 1476 2497 1650 
2515 1833 2532 2022 2550 2215 2568 2409 2585 2601 2603 2789 2621 2970 2638 3140 2656 3299 2674 3444 
2691 3574 2709 3687 2726 3638 2744 3560 2762 3501 2779 3459 2797 3433 2815 3423 2832 3427 2850 3443 
2868 3470 2885 3505 2903 3546 2921 3591 2938 3637 2956 3684 2974 3693 2991 3652 3009 3617 3026 3587 
3044 3565 3062 3550 3079 3543 3097 3544 3115 3551 3132 3565 3150 3585 3168 3608 3185 3636 3203 3665 
3221 3694 3238 3697 3256 3670 3274 3645 3291 3624 3309 3607 3326 3595 3344 3589 3362 3588 3379 3592 
3397 3601 3415 3614 3432 3631 3450 3651 3468 3672 3485 3695 3503 3703 3521 3681 3538 3661 3556 3644 
3574 3630 3591 3619 3609 3613 3626 3611 3644 3613 3662 3619 3679 3629 3697 3642 3715 3657 3732 3675 
3750 3694 3768 3708 3785 3690 3803 3672 3821 3657 3838 3644 3856 3634 3874 3627 3891 3624 3909 3625 
3926 3629 3944 3637 3962 3647 3979 3660 3997 3675 4015 3691 4032 3708 4050 3696 4068 3680 4085 3666 
4103 3654 4121 3644 4138 3637 4156 3633 4174 3633 4191 3636 4209 3642 4226 3650 4244 3661 4262 3674 
4279 3689 4297 3704 4315 3702 4332 3687 4350 3673 4368 3661 4385 3651 4403 3644 4421 3640 4438 3638 
4456 3640 4474 3644 4491 3652 4509 3661 4526 3673 4544 3686 4562 3700 4579 3706 4597 3692 4615 3679 
4632 3667 4650 3657 4668 3649 4685 3644 4703 3642 4721 3642 
] dogrey localsave restore
/localsave save def 
clear (drawpoly) 60 [17]
[4738 3646 4756 3652 4774 3660 4791 3671 4809 3683 4826 3696 4844 3710 4862 3697 4879 3684 4897 3672 
4915 3662 4932 3653 4950 3647 4968 3644 4985 3644 5003 3646 5021 3651 5038 3659 5056 3668 5074 3680 
5091 3692 5109 3706 5126 3701 5144 3688 5162 3676 5179 3665 5197 3656 5215 3650 5232 3646 5250 3644 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 452 [ 17]
[750 769 768 769 785 769 803 769 821 769 838 769 856 769 874 769 891 769 909 769 
926 769 944 769 962 769 979 769 997 769 1015 769 1032 769 1050 769 1068 769 1085 769 
1103 769 1121 769 1138 769 1156 769 1174 769 1191 769 1209 769 1226 769 1244 769 1262 769 
1279 769 1297 769 1315 769 1332 769 1350 769 1368 769 1385 769 1403 769 1421 769 1438 769 
1456 769 1474 769 1491 769 1509 769 1526 769 1544 769 1562 769 1579 769 1597 769 1615 769 
1632 769 1650 769 1668 769 1685 769 1703 769 1721 769 1738 769 1756 769 1774 769 1791 769 
1809 769 1826 769 1844 769 1862 769 1879 769 1897 769 1915 769 1932 769 1950 769 1968 769 
1985 769 2003 769 2021 769 2038 769 2056 769 2074 769 2091 769 2109 769 2126 769 2144 769 
2162 769 2179 769 2197 769 2215 769 2232 769 2250 769 2268 769 2285 769 2303 769 2321 769 
2338 769 2356 769 2374 769 2391 769 2409 769 2426 769 2444 769 2462 769 2479 769 2497 769 
2515 769 2532 769 2550 3710 2568 3710 2585 3710 2603 3710 2621 3710 2638 3710 2656 3710 2674 3710 
2691 3710 2709 3710 2726 3710 2744 3710 2762 3710 2779 3710 2797 3710 2815 3710 2832 3710 2850 3710 
2868 3710 2885 3710 2903 3710 2921 3710 2938 3710 2956 3710 2974 3710 2991 3710 3009 3710 3026 3710 
3044 3710 3062 3710 3079 3710 3097 3710 3115 3710 3132 3710 3150 3710 3168 3710 3185 3710 3203 3710 
3221 3710 3238 3710 3256 3710 3274 3710 3291 3710 3309 3710 3326 3710 3344 3710 3362 3710 3379 3710 
3397 3710 3415 3710 3432 3710 3450 3710 3468 3710 3485 3710 3503 3710 3521 3710 3538 3710 3556 3710 
3574 3710 3591 3710 3609 3710 3626 3710 3644 3710 3662 3710 3679 3710 3697 3710 3715 3710 3732 3710 
3750 3710 3768 3710 3785 3710 3803 3710 3821 3710 3838 3710 3856 3710 3874 3710 3891 3710 3909 3710 
3926 3710 3944 3710 3962 3710 3979 3710 3997 3710 4015 3710 4032 3710 4050 3710 4068 3710 4085 3710 
4103 3710 4121 3710 4138 3710 4156 3710 4174 3710 4191 3710 4209 3710 4226 3710 4244 3710 4262 3710 
4279 3710 4297 3710 4315 3710 4332 3710 4350 3710 4368 3710 4385 3710 4403 3710 4421 3710 4438 3710 
4456 3710 4474 3710 4491 3710 4509 3710 4526 3710 4544 3710 4562 3710 4579 3710 4597 3710 4615 3710 
4632 3710 4650 3710 4668 3710 4685 3710 4703 3710 4721 3710 
] dogrey localsave restore
/localsave save def 
clear (drawpoly) 60 [17]
[4738 3710 4756 3710 4774 3710 4791 3710 4809 3710 4826 3710 4844 3710 4862 3710 4879 3710 4897 3710 
4915 3710 4932 3710 4950 3710 4968 3710 4985 3710 5003 3710 5021 3710 5038 3710 5056 3710 5074 3710 
5091 3710 5109 3710 5126 3710 5144 3710 5162 3710 5179 3710 5197 3710 5215 3710 5232 3710 5250 3710 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
 showpage

 clear end saved restore 
