%%Missile File : J.Ph Chancelier 1991
%%EndComments

/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------
/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev WhiteLev le {closepath glev Setgray eofill}
	{ 0 Setgray closepath stroke} ifelse 
} def 



%------------------------------------------------------
% trace de polygones rempli ou de polylignes 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev WhiteLev le 
	{ % polygone ferme et gris
	  closepath glev Setgray eofill}
	{ glev WhiteLev 2 add ge 
	   {%polygone ferme dont on efface l'interieur 
		%(peint avec un niveau de gris en blanc)
	    closepath WhiteLev 2 mul 2 add glev sub Setgray 
		  gsave eofill grestore 
	    0 Setgray stroke}
	   {%polygone simple eventuellement ferme
	    0 Setgray closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto stroke 
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto stroke 
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	0 setgray fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	glev Setgray eofill}
	{newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath 0 Setgray stroke} ifelse 
	Cmsave1 setmatrix clear} def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show CtmRestore } def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix 
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto}
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 



%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix 
	[1 0 0 -1 0 0 ] concat 
	arg concat } def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { 2 div /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
0 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scalefont setfont
fillsolid
/WhiteLev 16 def
/localsave save def 
clear (drawbox) 4 [ 17]
[750 530 4500 3180 
] dogrey localsave restore
fillsolid
 0 [2 10] [225.000000 31.800000 2.000000] [750 3710] drawaxis
(0.00) 636 3906 0  0.00 [636 3816 229 120] Show
(0.05) 1086 3906 0  0.00 [1086 3816 229 120] Show
(0.10) 1536 3906 0  0.00 [1536 3816 229 120] Show
(0.15) 1986 3906 0  0.00 [1986 3816 229 120] Show
(0.20) 2436 3906 0  0.00 [2436 3816 229 120] Show
(0.25) 2886 3906 0  0.00 [2886 3816 229 120] Show
(0.30) 3336 3906 0  0.00 [3336 3816 229 120] Show
(0.35) 3786 3906 0  0.00 [3786 3816 229 120] Show
(0.40) 4236 3906 0  0.00 [4236 3816 229 120] Show
(0.45) 4686 3906 0  0.00 [4686 3816 229 120] Show
(0.50) 5136 3906 0  0.00 [5136 3816 229 120] Show
 -90 [2 10] [159.000000 -30.000000 2.000000] [750 3710] drawaxis
(-0.121) 334 3740 0  0.00 [334 3650 344 120] Show
(0.006) 391 3422 0  0.00 [391 3332 287 120] Show
(0.134) 391 3104 0  0.00 [391 3014 287 120] Show
(0.262) 391 2786 0  0.00 [391 2696 287 120] Show
(0.389) 391 2468 0  0.00 [391 2378 287 120] Show
(0.517) 391 2150 0  0.00 [391 2060 287 120] Show
(0.645) 391 1832 0  0.00 [391 1742 287 120] Show
(0.772) 391 1514 0  0.00 [391 1424 287 120] Show
(0.900) 391 1196 0  0.00 [391 1106 287 120] Show
(1.028) 391 878 0  0.00 [391 788 287 120] Show
(1.156) 391 560 0  0.00 [391 470 287 120] Show
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 452 [ 17]
[750 3408 768 3407 785 3406 803 3406 820 3408 838 3410 855 3411 873 3411 891 3408 908 3403 
926 3401 943 3403 961 3408 979 3414 996 3417 1014 3415 1031 3408 1049 3399 1066 3395 1084 3398 
1102 3408 1119 3418 1137 3424 1154 3420 1172 3408 1189 3393 1207 3386 1225 3391 1242 3408 1260 3426 
1277 3435 1295 3428 1313 3408 1330 3384 1348 3372 1365 3380 1383 3408 1400 3439 1418 3455 1436 3444 
1453 3408 1471 3365 1488 3343 1506 3357 1523 3408 1541 3468 1559 3502 1576 3482 1594 3408 1611 3314 
1629 3256 1646 3284 1664 3408 1682 3581 1699 3708 1717 3677 1734 3408 1752 2891 1770 2205 1787 1495 
1805 917 1822 587 1840 530 1857 682 1875 917 1893 1103 1910 1158 1928 1075 1945 917 1963 778 
1980 729 1998 790 2016 917 2033 1037 2051 1083 2068 1033 2086 917 2104 804 2121 758 2139 804 
2156 917 2174 1032 2191 1083 2209 1037 2227 917 2244 790 2262 730 2279 778 2297 917 2314 1074 
2332 1157 2350 1103 2367 917 2385 683 2402 531 2420 587 2438 917 2455 1494 2473 2204 2490 2890 
2508 3408 2525 3678 2543 3710 2561 3582 2578 3408 2596 3282 2613 3254 2631 3312 2648 3408 2666 3483 
2684 3504 2701 3470 2719 3408 2736 3355 2754 3340 2771 3363 2789 3408 2807 3446 2824 3458 2842 3441 
2859 3408 2877 3378 2895 3368 2912 3381 2930 3408 2947 3431 2965 3439 2982 3429 3000 3408 3018 3388 
3035 3381 3053 3390 3070 3408 3088 3424 3105 3429 3123 3422 3141 3408 3158 3394 3176 3389 3193 3395 
3211 3408 3229 3419 3246 3424 3264 3419 3281 3408 3299 3397 3316 3393 3334 3398 3352 3408 3369 3417 
3387 3420 3404 3416 3422 3408 3439 3400 3457 3397 3475 3400 3492 3408 3510 3415 3527 3417 3545 3414 
3563 3408 3580 3401 3598 3399 3615 3401 3633 3408 3650 3413 3668 3416 3686 3413 3703 3408 3721 3402 
3738 3400 3756 3402 3773 3408 3791 3412 3809 3414 3826 3412 3844 3408 3861 3403 3879 3401 3896 3403 
3914 3408 3932 3412 3949 3413 3967 3411 3984 3408 4002 3404 4020 3402 4037 3404 4055 3408 4072 3411 
4090 3412 4107 3411 4125 3408 4143 3404 4160 3403 4178 3404 4195 3408 4213 3411 4230 3412 4248 3411 
4266 3408 4283 3405 4301 3403 4318 3405 4336 3408 4354 3410 4371 3411 4389 3410 4406 3408 4424 3405 
4441 3404 4459 3405 4477 3408 4494 3410 4512 3411 4529 3410 4547 3408 4564 3405 4582 3404 4600 3405 
4617 3408 4635 3410 4652 3411 4670 3410 4688 3408 4705 3405 
] dogrey localsave restore
/localsave save def 
clear (drawpoly) 62 [17]
[4723 3404 4740 3405 4758 3408 4775 3410 4793 3411 4811 3410 4828 3408 4846 3405 4863 3404 4881 3405 
4898 3408 4916 3410 4934 3410 4951 3410 4969 3408 4986 3405 5004 3405 5021 3405 5039 3408 5057 3410 
5074 3410 5092 3410 5109 3408 5127 3405 5145 3405 5162 3406 5180 3408 5197 3410 5215 3410 5232 3410 
5250 3408 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
/localsave save def 
clear (drawpoly) 452 [ 17]
[750 3408 768 3408 785 3408 803 3408 820 3408 838 3407 855 3407 873 3407 891 3408 908 3408 
926 3408 943 3408 961 3408 979 3407 996 3406 1014 3406 1031 3408 1049 3409 1066 3409 1084 3409 
1102 3408 1119 3406 1137 3405 1154 3406 1172 3408 1189 3410 1207 3411 1225 3410 1242 3408 1260 3404 
1277 3403 1295 3404 1313 3408 1330 3412 1348 3414 1365 3413 1383 3408 1400 3401 1418 3398 1436 3400 
1453 3408 1471 3417 1488 3424 1506 3421 1523 3408 1541 3390 1559 3377 1576 3381 1594 3408 1611 3449 
1629 3484 1646 3482 1664 3408 1682 3234 1699 2954 1717 2584 1734 2162 1752 1741 1770 1371 1787 1091 
1805 917 1822 842 1840 839 1857 875 1875 917 1893 944 1910 949 1928 937 1945 917 1963 902 
1980 899 1998 905 2016 917 2033 928 2051 931 2068 927 2086 917 2104 908 2121 905 2139 908 
2156 917 2174 927 2191 931 2209 928 2227 917 2244 905 2262 898 2279 902 2297 917 2314 937 
2332 950 2350 945 2367 917 2385 875 2402 839 2420 842 2438 917 2455 1091 2473 1371 2490 1741 
2508 2162 2525 2584 2543 2954 2561 3234 2578 3408 2596 3482 2613 3485 2631 3449 2648 3408 2666 3381 
2684 3377 2701 3389 2719 3408 2736 3421 2754 3424 2771 3418 2789 3408 2807 3399 2824 3397 2842 3401 
2859 3408 2877 3413 2895 3415 2912 3412 2930 3408 2947 3404 2965 3402 2982 3404 3000 3408 3018 3410 
3035 3411 3053 3410 3070 3408 3088 3405 3105 3404 3123 3405 3141 3408 3158 3409 3176 3410 3193 3409 
3211 3408 3229 3406 3246 3405 3264 3406 3281 3408 3299 3409 3316 3409 3334 3409 3352 3408 3369 3406 
3387 3406 3404 3406 3422 3408 3439 3408 3457 3409 3475 3408 3492 3408 3510 3407 3527 3406 3545 3407 
3563 3408 3580 3408 3598 3409 3615 3408 3633 3408 3650 3407 3668 3407 3686 3407 3703 3408 3721 3408 
3738 3408 3756 3408 3773 3408 3791 3407 3809 3407 3826 3407 3844 3408 3861 3408 3879 3408 3896 3408 
3914 3408 3932 3407 3949 3407 3967 3407 3984 3408 4002 3408 4020 3408 4037 3408 4055 3408 4072 3407 
4090 3407 4107 3407 4125 3408 4143 3408 4160 3408 4178 3408 4195 3408 4213 3407 4230 3407 4248 3407 
4266 3408 4283 3408 4301 3408 4318 3408 4336 3408 4354 3407 4371 3407 4389 3407 4406 3408 4424 3408 
4441 3408 4459 3408 4477 3408 4494 3407 4512 3407 4529 3407 4547 3408 4564 3408 4582 3408 4600 3408 
4617 3408 4635 3407 4652 3407 4670 3407 4688 3408 4705 3408 
] dogrey localsave restore
/localsave save def 
clear (drawpoly) 62 [17]
[4723 3408 4740 3408 4758 3408 4775 3407 4793 3407 4811 3407 4828 3408 4846 3408 4863 3408 4881 3408 
4898 3408 4916 3407 4934 3407 4951 3407 4969 3408 4986 3408 5004 3408 5021 3408 5039 3408 5057 3407 
5074 3407 5092 3407 5109 3408 5127 3408 5145 3408 5162 3408 5180 3408 5197 3407 5215 3407 5232 3407 
5250 3408 
] dogrey localsave restore
fillsolid
/absolu true def
[] 0 setdash
-1 -1 200000 200000 setclipzone
 showpage

 clear end saved restore 
