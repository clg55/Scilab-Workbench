%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath WhiteLev Setgray eofill
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev Setgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev Setgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get 64 div neg Ar 4 get 64 div neg arc
	closepath glev Setgray stroke
	Cmsave1 setmatrix } def 

%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


/ColorR [0.000000 0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 1.000000 0.0 1.0] def
/ColorG [0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 0.843137 0.0 1.0] def
/ColorB [0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/Times-Roman findfont 100 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
0 Setcolor
 0 [2 10] [225.000000 30.000000 2.000000] [750 3710] drawaxis
(0) 722 3902 0  0.00 [722 3812 57 120] Show
(1) 1172 3902 0  0.00 [1172 3812 57 120] Show
(2) 1622 3902 0  0.00 [1622 3812 57 120] Show
(3) 2072 3902 0  0.00 [2072 3812 57 120] Show
(4) 2522 3902 0  0.00 [2522 3812 57 120] Show
(5) 2972 3902 0  0.00 [2972 3812 57 120] Show
(6) 3422 3902 0  0.00 [3422 3812 57 120] Show
(7) 3872 3902 0  0.00 [3872 3812 57 120] Show
(8) 4322 3902 0  0.00 [4322 3812 57 120] Show
(9) 4772 3902 0  0.00 [4772 3812 57 120] Show
(10) 5193 3902 0  0.00 [5193 3812 114 120] Show
 -90 [2 5] [318.000000 -31.800000 2.000000] [750 3710] drawaxis
(-5) 560 3740 0  0.00 [560 3650 114 120] Show
(-4) 560 3104 0  0.00 [560 3014 114 120] Show
(-3) 560 2468 0  0.00 [560 2378 114 120] Show
(-2) 560 1832 0  0.00 [560 1742 114 120] Show
(-1) 560 1196 0  0.00 [560 1106 114 120] Show
(0) 617 560 0  0.00 [617 470 57 120] Show
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/closeflag false def
 (drawpoly) 400 [ 0]
[750 530 773 530 795 530 818 530 840 530 863 530 885 530 908 530 930 530 953 530 
975 530 998 530 1020 530 1043 530 1065 530 1088 530 1110 530 1133 530 1155 530 1178 530 
1200 530 1223 530 1245 530 1268 530 1290 530 1313 530 1335 530 1358 530 1380 530 1403 530 
1425 530 1448 530 1470 530 1493 530 1515 530 1538 530 1560 530 1583 530 1605 530 1628 530 
1650 530 1673 530 1695 530 1718 530 1740 530 1763 530 1785 530 1808 530 1830 530 1853 530 
1875 530 1898 530 1920 530 1943 530 1965 530 1988 530 2010 530 2033 530 2055 530 2078 530 
2100 530 2123 530 2145 530 2168 530 2190 530 2213 530 2235 530 2258 530 2280 530 2303 530 
2325 530 2348 530 2370 530 2393 530 2415 530 2438 530 2460 530 2483 530 2505 530 2528 530 
2550 530 2573 530 2595 530 2618 530 2640 530 2663 530 2685 530 2708 530 2730 530 2753 530 
2775 530 2798 530 2820 530 2843 530 2865 530 2888 530 2910 530 2933 530 2955 530 2978 530 
3000 530 3023 530 3045 530 3068 530 3090 530 3113 531 3135 531 3158 532 3180 532 3203 534 
3225 536 3248 539 3270 544 3293 553 3315 569 3338 596 3360 643 3383 725 3405 861 3428 1077 
3450 1420 3473 2113 3495 2195 3518 1694 3540 1519 3563 1444 3585 1420 3608 1429 3630 1466 3653 1528 
3675 1617 3698 1740 3720 1911 3743 2172 3765 2680 3788 3100 3810 2336 3833 2044 3855 1867 3878 1745 
3900 1656 3923 1589 3945 1538 3968 1499 3990 1469 4013 1447 4035 1432 4058 1423 4080 1419 4103 1420 
4125 1425 4148 1435 4170 1448 4193 1465 4215 1486 4238 1511 4260 1540 4283 1574 4305 1613 4328 1657 
4350 1707 4373 1764 4395 1829 4418 1905 4440 1994 4463 2102 4485 2235 4508 2412 4530 2670 4553 3163 
4575 3645 4598 2835 4620 2526 4643 2333 4665 2193 4688 2085 4710 1998 4733 1925 4755 1863 4778 1810 
4800 1763 4823 1722 4845 1686 4868 1654 4890 1625 4913 1599 4935 1576 4958 1555 4980 1537 5003 1520 
5025 1505 5048 1492 5070 1480 5093 1469 5115 1460 5138 1451 5160 1444 5183 1438 5205 1433 5228 1429 
] dogrey 
0 Setcolor
/absolu true def
0 Setcolor
-1 -1 200000 200000 setclipzone
(magnitude in dB ) 666 445 0  0.00 [666 355 918 120] Show
(frequencies ) 5281 3493 0  0.00 [5281 3403 688 120] Show
(  ) 2943 313 0  0.00 [2943 223 114 120] Show
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 4 [ 0]
[3450 3645 3450 530 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
0 Setcolor
0 Setcolor
750 530 4500 3180 setclipzone
0 Setcolor
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#b4 put
 (drawpolymark) 400 [ 0]
[750 1419 773 1419 795 1419 818 1419 840 1419 863 1419 885 1419 908 1419 930 1419 953 1419 
975 1419 998 1419 1020 1419 1043 1419 1065 1419 1088 1419 1110 1419 1133 1419 1155 1419 1178 1419 
1200 1419 1223 1419 1245 1419 1268 1419 1290 1419 1313 1419 1335 1419 1358 1419 1380 1419 1403 1419 
1425 1419 1448 1419 1470 1419 1493 1419 1515 1419 1538 1419 1560 1419 1583 1419 1605 1419 1628 1419 
1650 1419 1673 1419 1695 1419 1718 1419 1740 1419 1763 1419 1785 1419 1808 1419 1830 1419 1853 1419 
1875 1419 1898 1419 1920 1419 1943 1419 1965 1419 1988 1419 2010 1419 2033 1419 2055 1419 2078 1419 
2100 1419 2123 1419 2145 1419 2168 1419 2190 1419 2213 1419 2235 1419 2258 1419 2280 1419 2303 1419 
2325 1419 2348 1419 2370 1419 2393 1419 2415 1419 2438 1419 2460 1419 2483 1419 2505 1419 2528 1419 
2550 1419 2573 1419 2595 1419 2618 1419 2640 1419 2663 1419 2685 1419 2708 1419 2730 1419 2753 1419 
2775 1419 2798 1419 2820 1419 2843 1419 2865 1419 2888 1419 2910 1419 2933 1419 2955 1419 2978 1419 
3000 1419 3023 1419 3045 1419 3068 1419 3090 1419 3113 1419 3135 1419 3158 1419 3180 1419 3203 1419 
3225 1419 3248 1419 3270 1419 3293 1419 3315 1419 3338 1419 3360 1419 3383 1419 3405 1419 3428 1419 
3450 1419 3473 1419 3495 1419 3518 1419 3540 1419 3563 1419 3585 1419 3608 1419 3630 1419 3653 1419 
3675 1419 3698 1419 3720 1419 3743 1419 3765 1419 3788 1419 3810 1419 3833 1419 3855 1419 3878 1419 
3900 1419 3923 1419 3945 1419 3968 1419 3990 1419 4013 1419 4035 1419 4058 1419 4080 1419 4103 1419 
4125 1419 4148 1419 4170 1419 4193 1419 4215 1419 4238 1419 4260 1419 4283 1419 4305 1419 4328 1419 
4350 1419 4373 1419 4395 1419 4418 1419 4440 1419 4463 1419 4485 1419 4508 1419 4530 1419 4553 1419 
4575 1419 4598 1419 4620 1419 4643 1419 4665 1419 4688 1419 4710 1419 4733 1419 4755 1419 4778 1419 
4800 1419 4823 1419 4845 1419 4868 1419 4890 1419 4913 1419 4935 1419 4958 1419 4980 1419 5003 1419 
5025 1419 5048 1419 5070 1419 5093 1419 5115 1419 5138 1419 5160 1419 5183 1419 5205 1419 5228 1419 
] dogrey 
/absolu true def
/Times-Roman findfont 100 scf mul scalefont setfont
0 Setcolor
-1 -1 200000 200000 setclipzone
 showpage

 end saved restore 

