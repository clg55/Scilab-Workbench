.TH link 1 "April 1993" "Scilab Group" "Scilab Function"
.so man1/sci.an
.SH NAME
link - dynamic link
.SH CALLING SEQUENCE
.nf
link(files, sub-name)
link(files, sub-name, flag)
names=link()
.fi
.SH PARAMETERS
.TP
files
: a character string or a vector of character strings. \fVld\fR
files used to define the new entry point (compiled routines, user
libraries, system libraries,..) 
.TP
sub-name
: a character string. Name of the entry point in \fVfiles\fR to be linked.
.TP
flag
: character string \fV'f'\fR or \fV'c'\fR for Fortran (default) or C code.
.TP
names
: a vector of character string. Names of dynamically linked entry points.
.SH DESCRIPTION
\fVlink\fR is a dynamic link facility: this command allows to add new compiled
Fortran or C routines to scilab executable code.
Linked routines can be called interactively by the function \fVfort\fR.
Linked routines can also be used as "external" for e.g. 
non linear problem solvers (\fVode\fR, \fVoptim\fR, \fVintg\fR, \Fvdassl\fR
...). Here are some examples:
.LP
The command \fVlink('foo.o','foo','f')\fR links the Fortran 
object file \fVfoo.o\fR with the entry point \fVfoo\fR.
.LP
The command \fVlink('foo.o','foo','c')\fR links the C
object file \fVfoo.o\fR with the entry point \fVfoo\fR.
.LP
The command \fVlink('SCIDIR/libs/calelm.a','dcopy')\fR links the 
Fortran routine \fVdcopy\fR in the library \fVcalelm.a\fR.
.LP
Note that with \fVdld\fR (Linux machine) you can use an empty
string if you want to link a program which is already in one of the
scilab libraries (e.g. \fVlink(' ','dcopy')\fR).
.LP
A routine can be linked several times: each link undo the previous one.
.LP
Used with no arguments, \fVlink()\fR returns the current linked routines.
.LP
If Scilab is compiled with static link (this is the default for
SystemV machines) you may have to include the system libraries in the 
"link" command.
.LP
For example, if \fVfoo.o\fR defines the object code of a routine named 
\fVfoo\fR, you will use \fVlink\fR in one the following way: 
.nf
link('foo.o','foo').
link('foo.o -lm -lc','foo','c').
link('foo.o -lfor -lm -lc','foo').
link('foo.o -lftn -lm -lc','foo').
link('foo.o -L/opt/SUNWspro/SC3.0/lib/lib77 -lm -lc','foo')
.fi
If Scilab compiled with the "shared" option, the first example can be used
even if a warning for unresolved references is issued.
.LP
(Experienced) users may also \fVlink\fR a new scilab interface routine 
to add a set of new functions. 
See \fVIntersci\fR documentation for interface generation and
\fVaddinter\fR function.
.SH REMARKS
For IBM-RS6000 only one program can be dynamically linked. 
.LP
When running a demo, you may have some trouble with the link due to
slight differences between systems. In this case, you modify the demo by
adding the needed libraries in the link command.
.SH SEE ALSO
fort,c_link,addinter
