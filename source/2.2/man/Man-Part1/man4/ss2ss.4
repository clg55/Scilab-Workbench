.TH ss2ts 1 "April 1993" "Scilab Group" "Scilab Function"
.so man1/sci.an 
.SH NAME
ss2ss - state-space to state-space conversion, feedback, injection
.SH CALLING SEQUENCE
.nf
[Sl1,right,left]=ss2ss(Sl,T, [F, [G]])
.fi
.SH PARAMETERS
.TP 15
Sl
: linear system (\fVsyslin\fR list) in state-space form
.TP
T 
: square (non-singular) matrix
.TP
Sl1, right, left
: linear systems (syslin lists) in state-space form
.TP
F
: real matrix (state feedback gain)
.TP
G
: real matrix (output injection gain)
.SH DESCRIPTION
Returns the linear system \fVSl1=[A1,B1,C1,D1]\fR
where \fVA1=inv(T)*A*T, B1=inv(T)*B, C1=C*T, D1=D\fR.
.LP
Optional parameters \fVF\fR and \fVG\fR are state feedback
and output injection respectively. 
.LP
For example,
\fVSl1=ss2ss(Sl,T,F)\fR returns \fVSl1=[A1,B1,C1,D1]\fR with
\fVA1=inv(T)*(A+B*F)*T; B1=inv(T)*B; C1=(C+D*F)*T; D1=D;\fR
.LP
If \fVF\fR is given as input then \fVright\fR is a non singular 
linear system such that \fVSl1=Sl*right\fR.
.LP
\fVSl1*inv(right)\fR is a factorization of \fVSl\fR.
.LP
Idem for left: if \fVF\fR and \fVG\fR are given, \fVSl1=left*Sl*right\fR.
.SH EXAMPLE
.nf
Sl=ssrand(2,2,5); trzeros(Sl)       // zeros are invariant:
Sl1=ss2ss(Sl,rand(5,5),rand(2,5),rand(5,2)); 
trzeros(Sl1), trzeros(rand(2,2)*Sl1*rand(2,2))
.fi
.SH SEE ALSO
projsl, feedback

